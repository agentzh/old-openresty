[% DEFAULT
    cat = 'Model'  # category
-%]
function get[% cat %]s (opts) {
    setStatus(true, 'get[% cat %]');
    openresty.callback = render[% cat %]s;
    openresty.get('/=/[% cat | lower %]');
    get[% cat %]Menu();
}

function render[% cat %]s (res) {
    setStatus(false, 'get[% cat %]s');
    if (!openresty.isSuccess(res)) {
        error("Failed to get [% cat | lower %] list: " + res.error);
        return;
    }
    $("#main").html(
        Jemplate.process(
            'object-list.tt',
            { objects: res, category: '[% cat | lower %]' }
        )
    ).postprocess();
}

function get[% cat %]Menu () {
    setStatus(true, 'get[% cat %]Menu');
    openresty.callback = render[% cat %]Menu;
    openresty.get('/=/[% cat | lower %]');
}

function render[% cat %]Menu (res) {
    setStatus(false, 'get[% cat %]Menu');
    if (!openresty.isSuccess(res)) {
        error("Failed to get the [% cat | lower %] menu: " + res.error);
        return;
    }
    $("#menu").html(
        Jemplate.process(
            'menu.tt',
            { active_item: '[% cat %]s', submenu: res }
        )
    ).postprocess();
    $("#logout-link").click(removeCookies);
}

$.fn.postprocess = function (className, options) {
    return this.find("a[@href^='#']").each( function () {
        var anchor = $(this).attr('href').replace(/^\#/, '');
        //debug("Anchor: " + anchor);
        $(this).click( function () {
            //debug(location.hash);
            location.hash = anchor;
            //alert(location.hash);
            if (savedAnchor == anchor) savedAnchor = null;
            dispatchByAnchor();
        } );
    } );
};

function setStatus (isLoading, category) {
    if (isLoading) {
        if (++loadingCount == 1) {
            if (jQuery.browser.opera)
                $(waitMessage).css('top', '2px');
            else
                $(waitMessage).show();
        }
    } else {
        loadingCount--;
        if (loadingCount < 0) loadingCount = 0;
        if (loadingCount == 0) {
            // the reason we use this hack is to work around
            // a rendering bug in Win32 build of Opera
            // (at least 9.25 and 9.26)
            if (jQuery.browser.opera)
                $(waitMessage).css('top', '-200px');
            else
                $(waitMessage).hide();

        }
    }
    //count++;
    //debug("[" + count + "] setStatus: " + cat + ": " + loadingCount + "(" + isLoading + ")");
}

function get[% cat %] (name) {
    setStatus(true, 'get[% cat %]');
    openresty.callback = function (res) { render[% cat %](res, name) };
    openresty.get('/=/[% cat | lower %]/' + name);
}

function render[% cat %] (res, name) {
    setStatus(false, 'get[% cat %]');
    if (!openresty.isSuccess(res)) {
        error("Failed to get [% cat | lower %] " + name + ": " + res.error);
        return;
    }
    if ($("#menu").find("#[% cat | lower %]-" + name).length == 0) {
        //error("[% cat | lower %]-" + name + " not found!");
        get[% cat %]Menu();
    }
    $("#main").html(
        Jemplate.process(
            '[% cat | lower %].tt',
            { [% cat | lower %]: res }
        )
    ).postprocess();
}

function getModelRows (name, page) {
    setStatus(true, 'renderModelRows');
    if (!page) page = 1;
    openresty.callback = function (res) { renderModelRows(res, name, page); };
    openresty.get(
        '/=/model/' + name + '/~/~',
        { offset: itemsPerPage * (page - 1), count: itemsPerPage, order_by: 'id:desc' }
    );
}

function getPager (name, page, prefix) {
    setStatus(true, 'getPager');
    openresty.callback = function (res) {
        renderPager(res, page, prefix);
    };
    openresty.postByGet(
        '/=/action/.Select/lang/minisql',
        "select count(*) as count from " + name
    );
}

function renderPager (res, page, prefix) {
    setStatus(false, 'getPager');
    if (!openresty.isSuccess(res)) {
        error("Failed to get the pager: " + res.error);
        return;
    }
    var pageCount = Math.ceil(parseInt(res[0].count) / itemsPerPage);
    //.processalert(pageCount);
    if (pageCount < 2) return;
    var html = Jemplate.process(
        'pager.tt',
        { page: page, page_count: pageCount, prefix: prefix }
    );
    //alert("HTML: " + html);
    $(".pager").each( function () {
        $(this).html(html);
    } ).postprocess();
}

function renderModelRows (res, model, page) {
    setStatus(false, 'renderModelRows');
    if (!openresty.isSuccess(res)) {
        error("Failed to get model rows: " + res.error);
        return;
    }
    if ($("#menu").find("#model-" + model).length == 0) {
        getModelMenu();
    }
    $("#main").html(
        Jemplate.process(
            'model-rows.tt',
            { model: model, rows: res }
        )
    ).postprocess();
    getPager(model, page, 'modelrows-' + model);
}

