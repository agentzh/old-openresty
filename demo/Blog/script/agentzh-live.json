[{"title":"The upcoming OpenResty talk on D2 Forum","date":"Apr 4, 2008 (2 days ago)","body":"<div><div class=\"item-body\"><div>I'm going to talk about OpenResty and pure JavaScript web applications in the \"D2 Forum\" conference which will be held on 27 of this month:<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"http://d2forum.cn\">http://d2forum.cn</a><br><br>\n(Two Yahoo US colleagues will give presentations there as well :))<br><br>I'd like to see the RSS feed and custom Action support landed onto OpenResty before this event. Let's wait and see :)<br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+The+upcoming+OpenResty+talk+on+D2+Forum&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"OpenAPI is now offically renamed to OpenResty and is now on CPAN","date":"Mar 12, 2008 3:20 PM","body":"<div><div class=\"item-body\"><div>The OpenAPI project mentioned in  <a target=\"_blank\" href=\"http://agentzh.spaces.live.com/blog/cns%21FF3A735632E41548%21247.entry\">an earlier blog entry</a>  has now been renamed to  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResty\">OpenResty</a>  because there's hundreds of thousands of things that call themselves OpenAPI or so, which can be really confusing ;) <p>\nBut for backward-compatibility, I didn't change the name of the Subversion repository. So it's still located at <a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk\">http://svn.openfoundry.org/openapi/trunk</a>. </p><p>\nI've put  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResety\">OpenResety</a>\nas well as its dependency modules onto CPAN to help people play with\nit. A third (fake) backend, PgMocked, was added just recently to make\nCPAN testers' life easier. </p><p>The documentation still needs love\nvery badly. The work on the English spec for OpenResty's REST interface\nhas started in the form of <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResty::Spec::REST\">OpenResty::Spec::REST</a> and I need to translate most of the stuff in  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResty::Spec::REST_cn\">its Chinese version</a>  over here. And you may find the `` <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResty::CheatSheet\">cheat sheet</a> '' interesting too ;)\n </p><p>In the days of the Chinese New Year, I built a personal blog site using  <a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/clients/js/\">OpenResty's JavaScript client libary</a> ,  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Jemplate\">Jemplate</a> , and Audrey's Pugs blog's page templates:\n </p><p><a target=\"_blank\" href=\"http://blog.agentzh.org/\">http://blog.agentzh.org</a> </p><p>It's\na very fast site at least here in China and the hand-written JavaScript\ncode for this site is remarkably clean (just around 300 lines): </p><p><a target=\"_blank\" href=\"http://blog.agentzh.org/blog.js\">http://blog.agentzh.org/blog.js</a> </p><p>Due to the lack of RSS and email-to-blog support in OpenResty today, I'll still have to use the (slow)  <a target=\"_blank\" href=\"http://agentzh.spaces.live.com/\">live.com space</a>  as my main blog site for a while.\n </p><p>Also  <a target=\"_blank\" href=\"http://www.carriezh.cn/carrie/\">carrie++</a>  in our team has updated our Yisou BBS, taking advantage of  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?OpenResty\">OpenResty</a> 's Chinese captcha support:\n </p><p><a target=\"_blank\" href=\"http://www.yisou.com/opi/post.html\">http://www.yisou.com/opi/post.html</a> </p><p>English captchas are also supported and I'm pondering using this feature in my new blog site too. </p><p>It's\nworth mentioning that the deployment of these pure AJAX sites is 0\nbecause they're just a set of static files ;) The complexity all goes to <a target=\"_blank\" href=\"http://resty.eeeeworks.org/=/version\">the OpenResty server</a>\n. The web services provided by an OpenResty server is completely\ngeneral-purpose and also scriptable by users (via the minisql\nlanguage). That's the beauty of this open architecture :) </p><p>Client library in Perl for OpenResty, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?WWW::OpenResty\">WWW::OpenResty</a>, is also on CPAN. It's just a thin wrapper around <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?LWP::UserAgent\">LWP::UserAgent</a>.\nIn fact, most of the client-side operations can be done in a plain web\nbrowser's address bar ;) And yeah, special care should be taken while\nusing GET for writing/deleting operations for the sake of XSS attacks. Cookies\nfor sessions are now disabled by default in OpenResty (thanks\nEidolos++'s reminding). </p><p>Both my $boss and I love to see OpenResty's REST design becomes a part of  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Jifty\">Jifty</a>  or let OpenResty be a funny component in  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Jifty\">Jifty</a>\nor some other web application frameworks (as virtual models, for\nexample) in the future. And Eidolos++ on #jifty has already shown great\ninterest in <em>OpenResty</em>'s API after taking a peek at <a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/t/\">its test suite</a> . </p><p>I'll mostly focus on the documentation for all these cool stuffs in the coming weeks. Stay tuned!\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+OpenAPI+is+now+offically+renamed+to+OpenResty+and+is+now+on+CPAN&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"SearchAll 0.4.15 is coming soon","date":"Feb 29, 2008 8:03 PM","body":"<div><div class=\"item-body\"><div>I've just uploaded SearchAll 0.4.15 to the AMO site (and my AMO editor has just said he would review it in #addons). This update fixes the frame-busting problem of baidu in Firefox 3.0 and also fixes the default template selectors for YouTube and several image search engines.<br>\n<br>I'm so glad to see the total downloads for SearchAll is now 24874. Hey, ~ 25k already! Yay!<br><br>I'm going to include a simple BBS site powered by our OpenAPI in this Firefox extension so that my users can tell me what they feel directly ;)<br>\n<br>Stay tuned!<br><br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+SearchAll+0.4.15+is+coming+soon&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"作秀中...","date":"Jan 30, 2008 3:59 PM","body":"<div><div class=\"item-body\"><div>最近又写了一篇东西到\"<a target=\"_blank\" href=\"http://ysearchblog.cn/\">雅虎搜索日志</a>\"，题为\"从SearchAll看搜索引擎DNA\":<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://ysearchblog.cn/2008/01/searchalldna.html\">http://ysearchblog.cn/2008/01/searchalldna.html</a><br><br>感谢杏岚的编辑工作 :)<br>\n<br>我的下一篇东西可能题为\"装在口袋里的网站\"；我一直打算介绍一下我们的基于 OpenAPI 的纯客户端应用的开发技术。<br><br>我们的 M，yuting++，已经怪我\"染上了作秀不良风气\"了，哈哈。我看来是很难改正了，呵呵。tingting 一定要原谅我哦 ;)<br><br>-agentzh<br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e4%bd%9c%e7%a7%80%e4%b8%ad...&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Re: Intercepting access to a method/property","date":"Jan 18, 2008 8:55 PM","body":"<div><div class=\"item-body\"><div>On Jan 18, 2008 7:21 PM, AllSeeingI wrote:<br>&gt; Is it possible (through an extension, XPCOM, other way) to call a<br>&gt; particular JS function when a particular method or property is<br>&gt; accessed by a user script (= script on a HTML page)?<br>&gt;<br><br>Object.watch is the way to go for properties ;) Not sure about methods though.<br><br>&gt; The reason I'm asking is that I'm trying to create an extension that<br>&gt; intercepts JavaScript redirections:<br>&gt;<br>&gt; location.href = ...<br><br>Heh, I'm afraid it's more browser-specific. So it might be OT here. But I'd like to share some of my experiences (mostly from NSA++) in this mail.<br><br>I think the following code should work in Firefox 2 (i.e. the js 1.7 engine):<br><br>&nbsp;&nbsp;&nbsp; top.watch(\"location\", function () { throw \"Permission denied.\" });<br>&nbsp;&nbsp;&nbsp; top.location.watch(\"href\", function () { throw \"Permission denied.\" });<br><br>But unfortunately it won't work in Firefox 3 (i.e. the js 1.8 engine). AFAIK, Firefox has been trying much harder than IE to protect frame-busting sites.<br><br>&gt; location.replace(...);<br>&gt;<br><br>Well, I was trying very hard to defeat this one but with no luck. A good enough workaround for (static) sites is to (locally) disable JS for that particular frame loading the frame-busting page, as in:<br><br>&nbsp;&nbsp;&nbsp; myBrowser.docShell.allowJavascript = false;<br><br>Basically, if you load the web page in a separate chrome window, frame-busting code will always fail. But if you're trying to load it in Firefox's own browser tab, you're not really \"chrome\" there.<br><br>Another trick that works is to use the onbeforeunload handler, as in:<br><br>&nbsp;&nbsp;&nbsp; window.onbeforeunload = function (e) {<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; e.returnValue = \"This action might be caused by a<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; frame-busting site.\\nPlease click 'Cancel' if you're not meant to quit me.\";<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;             return false;<br>&nbsp;&nbsp;&nbsp; };<br><br>But this will pop up a confirmation dialog to the end user. There's no known way to bypass it without hacks ;)<br><br>There may exist much better solutions that I don't know.<br><br>Hope these help.<br><br>Cheers,<br>-agentzh<br> <br> <br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Re%3a+Intercepting+access+to+a+method%2fproperty&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Introduction to the Yahoo! REST Base (aka OpenAPI) project","date":"Jan 9, 2008 10:36 AM","body":"<div><div class=\"item-body\"><div>Sorry for the lack of posting in the last few weeks. Been mostly focusing on the Yahoo! REST Base project (aka OpenAPI or OpenSearch within the company). The Chinese version of the API spec can be found here:<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/doc/spec.html\">\nhttp://svn.openfoundry.org/openapi/trunk/doc/spec.html</a><br><br>Sorry, there's no English version yet. But I'll surely work it out ;)<br><br>We've stolen the spirit of Jifty's REST design and extend it to support a lot of cool features like models, actions, views, roles, minisql, and captchas.\n<br><br>Currently the best spec is the test suite though (and the knowledge of the Chinese language is not required ;)):<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/t/\">http://svn.openfoundry.org/openapi/trunk/t/\n</a><br><br>Most of the test cases are declared in the Test::Base syntax, hence the readability.<br><br>We've already set up a small demo app using our REST service:<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"http://www.yisou.com/opi/post.html\">\nhttp://www.yisou.com/opi/post.html</a><br><br>Feel free to mud around there ;)<br><br>It's worth mentioning that the post board app itself is totally static; just a few .js files, 1 .html file, 1 .css file, and 1 image file.\n<br><br>It makes heavy use of cross-domain AJAX. So it also runs directly in the subversion repository:<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/demo/YisouComments/post.html\">http://svn.openfoundry.org/openapi/trunk/demo/YisouComments/post.html\n</a><br><br>The source of the demo app can be found here:<br><br> &nbsp; &nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk/demo/YisouComments/\">http://svn.openfoundry.org/openapi/trunk/demo/YisouComments/</a><br><br>The whole project but the Pg cluster backend is opensourced under GPL. You can always get the latest source from the following subversion repository:\n<br><br> &nbsp; &nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/openapi/trunk\">http://svn.openfoundry.org/openapi/trunk</a><br><br>If you like a commit bit, please let me know.<br><br>Have fun!\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Introduction+to+the+Yahoo%21+REST+Base+%28aka+OpenAPI%29+project&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Yahoo! 4e team 贺岁语录：","date":"Jan 1, 2008 3:46 PM","body":"<div><div class=\"item-body\"><div>\"妈呀，又是测试啊？\" -- leiyh<br><br>\"话说……你加的功能 work 了！\" -- carrie<br><br>\"这事咋办呢？让我想想。。。\" -- ting<br><br>\"每日常坐电脑前，每逢春秋必感冒。锻炼永远计划中，感冒一直在行动。\" -- jianingy<br><br>\"谁说我不乖的？我很乖的。\" -- ywayne\n<br><br>\"咦？是 exe 的。。。我来 hack 一下。。。\" -- shangerdi<br><br>\"哈哈！央视8套真好看,讲苍蝇飞行的原理 :D\" -- laser<br><br>\"锅得刚说了，铛铛铛，铛儿嘀儿嘀个儿铛！\" -- arthas<br><br>\"yay! it works! :D\" -- agentzh<br><br>\"春儿太猛了！整天写一坨一坨的没用的东西……\" -- luoyi<br><br> <br> <br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Yahoo%21+4e+team+%e8%b4%ba%e5%b2%81%e8%af%ad%e5%bd%95%ef%bc%9a&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"The slides for my XUL::App talk","date":"Nov 28, 2007 11:11 AM","body":"<div><div class=\"item-body\"><div>XUL::App is a nifty Firefox extension development framework based on Perl. It has a lot of parallels with Jifty. Recently I gave a talk to our Yahoo! 4e department for XUL::App and it went very well.<br><br>Here's the slides that I used in the talk:\n<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://agentzh.org/misc/slides/xulapp/xulapp.xul\">http://agentzh.org/misc/slides/xulapp/xulapp.xul</a>&nbsp; (a JS-enabled Firefox 2 is required to view these slides)<br><br>If you're having problems in displaying the slides given above, please try out the PowerPoint (PPT) version below:\n<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://agentzh.org/misc/slides/xulapp.ppt\">http://agentzh.org/misc/slides/xulapp.ppt</a><br><br>or the PDF version:<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://agentzh.org/misc/slides/xulapp.pdf\">http://agentzh.org/misc/slides/xulapp.pdf</a><br><br>You can always get the latest source of XUL::App from the following SVN repository:<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/xulapp/trunk/\">\nhttp://svn.openfoundry.org/xulapp/trunk/</a><br><br>There's very little POD docs, please read README and the slides for details.<br><br>Also, SearchAll is a real-world Firefox extension that is built upon XUL::App, which can serve as a big demo for the usage of the framework:\n<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/\">http://svn.openfoundry.org/searchall/trunk/</a><br><br>Sadly XUL::App does not run on Win32 yet. I've only tested it on Ubuntu Linux so far. If you have any problems or would love to help, please let me know ;)\n<br><br>Enjoy!<br><br><br><br>\n <br> <br> <br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+The+slides+for+my+XUL%3a%3aApp+talk&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"写了一篇东西到\"雅虎搜索日志\"","date":"Nov 27, 2007 8:29 PM","body":"<div><div class=\"item-body\"><div>写了一篇东西到我们 Yahoo 自己的\"雅虎搜索日志\"网站上：<br><br>&nbsp;&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://ysearchblog.cn/2007/11/searchall.html\">http://ysearchblog.cn/2007/11/searchall.html</a><br><br>感谢咱们 content team 的何远银同学提供的初稿。毕竟发起一些东西不是我的长项，而大刀阔斧地修改现成的东西却是，呵呵。\n<br><br>另外还必须特别感谢一下我的编辑石杏岚小姐不厌其烦地反复修改这篇东西。在修改过 N 处之后，她终于说自己快崩溃了，呵呵。<br><br>这里顺便 spam 一下，SearchAll 的下一个版本将提供一个全新的视图，Mapping View：<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://agentzh.org/misc/mapview.png\">http://agentzh.org/misc/mapview.png</a><br><br>欢迎大家试用 Subversion 里的版本：<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/searchall.xpi\">\nhttp://svn.openfoundry.org/searchall/trunk/searchall.xpi</a><br><br>Enjoy!<br><br>-agentzh<br><br>\n <br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e5%86%99%e4%ba%86%e4%b8%80%e7%af%87%e4%b8%9c%e8%a5%bf%e5%88%b0%22%e9%9b%85%e8%99%8e%e6%90%9c%e7%b4%a2%e6%97%a5%e5%bf%97%22&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"SearchAll 0.3.2 发布！","date":"Nov 10, 2007 6:21 PM","body":"<div><div class=\"item-body\"><div><p>经过 Yahoo! China EEEE hacking 小组近一个月的努力， <a target=\"_blank\" href=\"http://searchall.agentzh.cn/\">SearchAll</a>  0.3.2 版终于发布到了  <a target=\"_blank\" href=\"http://addons.mozilla.org/\">AMO 官方网站</a> ： </p><p><a target=\"_blank\" href=\"https://addons.mozilla.org/zh-TW/firefox/addon/5712\">\nhttps://addons.mozilla.org/zh-TW/firefox/addon/5712</a> </p><p>如果您已经安装了 SearchAll 的话，您的 Firefox 在启动时会自动检查更新，并按用户选择进行升级。 </p><p>和上一个 AMO 公开发布版本 0.1.8 相比，SearchAll 积累了许多重大改进。其中的亮点包括： </p><ul><li> <p>增加了对结果页中的链接进行本地测试的功能。SearchAll 现在会自动在``规格化视图''中用可爱的小图标标记出坏链，好链，和慢链。由于使用 Ajax HEAD 请求，所以测试的速度很快。我们 team 的 \n<a target=\"_blank\" href=\"http://blog.jianingy.com/\">杨家宁</a> 当初做 <a target=\"_blank\" href=\"http://www.yisou.com/\">\"易搜\"</a> 的时候就想到实现这样的本地链接测试的功能，但受到 AJAX 跨域请求的限制而未能实现。谢谢杨家宁提的这个 feature! </p></li><li> <p>增加了 <a target=\"_blank\" href=\"http://agentzh.org/misc/rightclick.swf\">\n\"划搜\"功能</a> 。用户可以在任意的网页中选定文本，然后右击，在弹出的快捷菜单中点击\"我搜去\"（或者SearchAll)，进行搜索。感谢李晓栓的提议！ </p></li><li> <p>增\n加了对简体中文(zh-CN)，繁体中文(zh-TW), 法语(fr)，和西班牙语(es-ES) 的国际化支持。如果用户使用的是简体中文版的\nFirefox，那么她看到的 SearchAll 界面也将是简体中文版的。其他语言支持依此类推 :) 感谢西班牙的 Gregorio\nVillarrubia 的西班牙文翻译。对于非中文用户而言，第一次使用 SearchAll 时默认的三家搜索引擎是 <a target=\"_blank\" href=\"http://search.yahoo.com/\">yahoo.com</a> ,  <a target=\"_blank\" href=\"http://www.google.com/en\">google.com</a> , 和  <a target=\"_blank\" href=\"http://www.ask.com/\">ask.com</a> . 中文用户默认的原三家网站保持不变。\n </p></li><li> <p>为大部分默认列表中的搜索引擎实现了  <a target=\"_blank\" href=\"http://developer.mozilla.org/en/docs/Creating_OpenSearch_plugins_for_Firefox\">OpenSearch 快捷方式</a> ，从而使第一次查询以及切换搜索引擎时的用时减少了至少 50%. 感谢服务于  <a target=\"_blank\" href=\"http://www.ironport.com/\">IronPort 公司\n</a> 的  <a target=\"_blank\" href=\"http://wanghui.org/\">cnhackTNT</a>  的提议！ </p></li><li> <p>修复了多处内存泄漏问题。使用 SearchAll 的时候，Firefox 不会再占用越来越多的内存。界面响应也更迅速。感谢 Mozilla 官方网站的编辑  <a target=\"_blank\" href=\"http://wiki.mozilla.org/User:Archaeopteryx\">Archaeopteryx</a>\n  的报告。 </p></li><li> <p>SearchAll 工具条上的搜索框现在支持快捷菜单方式下的\"复制\"，\"剪切\"，和\"粘贴\"操作。感谢尚尔迪的报告和修复。 </p></li><li> <p>添加了下列新的默认搜索引擎： </p><ul><li> <p><a target=\"_blank\" href=\"http://www.a9.com/\">http://www.a9.com</a> </p></li><li> <p><a target=\"_blank\" href=\"http://www.answers.com/\">\nhttp://www.answers.com</a> </p></li><li> <p><a target=\"_blank\" href=\"http://search.ebay.com/\">http://search.ebay.com</a> </p></li><li> <p><a target=\"_blank\" href=\"http://www.flickr.com/\">http://www.flickr.com</a> </p></li><li> <p><a target=\"_blank\" href=\"http://www.youtube.com/\">\nhttp://www.youtube.com</a> </p></li></ul> </li></ul> <p>我们仍然在考虑如何在 SearchAll 中展现 Omni Search 的问题。既要保持 SearchAll 在结果展示上的公平公正性，又要表现 Omni Search 丰富的内容，并不是一件容易的事情 ;) 欢迎大家多提宝贵建议 :) </p><p>我最近在看有关  <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Adobe_Flex\">\nAdobe Flex</a>  方面的文档，一个基于 Flash 的 SearchAll 似乎更酷一些，因为它将能运行在 IE 和 Opera 这样的浏览器中，而不仅仅是 Firefox. 当然这仅仅是一个很模糊的想法，不知是否可行。有兴趣的朋友可以与我们联系 ;) </p><p>SearchAll 是一个基于 MIT 协议的开源项目。源码仓库位于台湾的  <a target=\"_blank\" href=\"http://rt.openfoundry.org/\">OpenFoundry 服务器\n</a> 上：<a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/\">http://svn.openfoundry.org/searchall/trunk/</a>. 如果您乐意参与到项目开发中来，请立即与我们联系；我们很乐意像 Pugs 团队那样递送 Subversion 提交权限。 </p><p>感谢所有一直以来关注和使用 SearchAll 的朋友们；我们一如既往地欢迎各种新功能提议，bug 报告，和评论。\n </p><p>谢谢！ </p><p>章亦春 (agentzh) </p><p>附：根据陈敬亮的报告，来自  <a target=\"_blank\" href=\"http://www.foxplus.org/\">Foxplus</a>  的  <a target=\"_blank\" href=\"https://addons.mozilla.org/en-US/firefox/addon/5362\">Alexa Sparky 扩展</a> 会严重影响 SearchAll tab 的切换速度，因此对于安装了该版本的 Alexa Sparky 扩展的用户，请在使用 SearchAll 的时候暂时禁用 Alexa Sparky.\n\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+SearchAll+0.3.2+%e5%8f%91%e5%b8%83%ef%bc%81&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"Yak shaving","date":"Nov 3, 2007 4:26 PM","body":"<div><div class=\"item-body\"><div><p>Mostly been yak-shaving over the past few weeks. No significant visible progress yet. Refactoring the JavaScript (JS) part of my SearchAll extension using the best practices of JS seen in ``professional JS code'' from others. \n</p><p>Got 2 releases of PCR (<a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Pugs::Compiler::Rule\">Pugs::Compiler::Rule</a>) out of door to CPAN. Just want to keep my feet wet in the Pugs team. Thanks <a target=\"_blank\" href=\"http://search.cpan.org/%7Emmusgrove/\">Matthew</a> ++ for reporting the test failures of PCR 0.27 on MS Win32. They were essentially coursed by cmd.exe's shell syntax incompatibility. Fixed in the 0.28 release. I'm running VirtualBox with WinXP to test it. \n</p><p>Thinking a lot about web site testing and Firefox addon testing issues, also pondering the future of my <a target=\"_blank\" href=\"http://agentzh.spaces.live.com/blog/cns%21FF3A735632E41548%21220.entry\">XUL::App</a> framework -- hey, it's exciting! I'd like to add support for <code>_(\"blah blah\")</code> in plain .js code. Like what clkao++ is doing in Jifty: \n</p><p><a target=\"_blank\" href=\"http://lists.bestpractical.com/pipermail/jifty-devel/2007-October/001773.html\">http://lists.bestpractical.com/pipermail/jifty-devel/2007-October/001773.html</a> \n</p><p>But I'll definitely reuse XUL's own .properties file and &lt;stringbundle&gt; mechanism to emulate it directly instead of using the costy AJAX approach taken by clkao. \n</p><p>laser++'s ``postgres extension'' talk given yesterday is quite interesting. Will take a closer look at postgres and hack in something analogous to Perl's <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Inline::C\">Inline::C</a>. It's already in my ``learning queue'', which is already quite long though. \n</p><p>Also coordinating two projects mainly contributed by my former schoolmates, <a target=\"_blank\" href=\"http://salzh.spaces.live.com/\">sal++</a> and <a target=\"_blank\" href=\"http://xunxinwan.spaces.live.com/\">xunxin++</a> , i.e., the <a target=\"_blank\" href=\"http://svn.openfoundry.org/ajaxperl/\">ajaxperl</a> and <a target=\"_blank\" href=\"http://xunxinwan.spaces.live.com/blog/cns%21A577CD4A6BDAD61%21125.entry\">jslint</a> projects. \n</p><p>sal's work on <a target=\"_blank\" href=\"http://www.w3.org/DOM/Test/\">the DOM test suite</a> helpfully indicates the status of the DOM support of various CPAN modules like <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?HTML::DOM\">HTML::DOM</a>, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?XML::DOM\">XML::DOM</a>, and <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?XML::LibXML::DOM\">XML::LibXML::DOM</a>. Ajaxperl will eventually rely on these modules anyway. \n</p><p>I've also taken a peek at the <a target=\"_blank\" href=\"http://htmlunit.sourceforge.net/\">HtmlUnit</a> project which essentially does what ajaxperl aims to do, except it's the darned Java. \n</p><p>Regarding the other project, jslint, it can be immensely helpful in applications like XUL::App. You know, I've got tired of starting the slow Firefox up just to find a silly typo in my JS code. For such situations, jslint will come to rescue when it's mature enough. \n</p><p>As xunxin reported, jsshell can already check the syntax of .js files with a command-line option. But unfortunately jsshell does not respect the inlined JS snippets in .xul and .html files. Spidermonkey doesn't come with a DOM lib anyway. So I'd love to see a new CPAN module named <code>JavaScript::Lint</code> born out of the jslint project. \n</p><p>Hopefully xunxin++ will make more progress in the next few weeks or so. Sadly he's got a <a target=\"_blank\" href=\"http://xunxinwan.spaces.live.com/blog/cns%21A577CD4A6BDAD61%21138.entry\">Java $day_job</a> ...Sigh. \n</p><p>Regarding my talk in the next ``hacking-hour'' meeting suggested by laser++ last afternoon, I'm currently having several interesting topics in mind: ``The best practices in SearchAll'', ``XUL::App : the Jifty way of doing XUL'', ``Reusing Perl as an DSL'' and ``Abusing jquery for AJAX''. I still tend to use XUL for my slides, but I'm not 100% happy with ingy++'s <a target=\"_blank\" href=\"http://openjsan.org/src/i/in/ingy/Sporx-0.10\">Sporx</a> slide-making framework. Will probably tweak it to work the way I like. Yeah, another ``yak-shaving'' like job and it must be fun as well ;) \n</p><p><br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Yak+shaving&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"A graphical tracer for Perl 6 regexes based on PCR","date":"Oct 24, 2007 7:45 PM","body":"<div><div class=\"item-body\"><div>Tracing parse failures by hand while developing a compiler can be really a nightmare, since the real problem can appear everywhere -- the grammar definition, the input string being matched, or even the regex engine itself. \n<p>So I've implemented a graphical tracer for Perl 6 regexes atop PCR (<a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Pugs::Compiler::Rule\">Pugs::Compiler::Rule</a>). You can find some small online demos here: <br>\n</p><ul>\n<li>\n<p><a target=\"_blank\" href=\"http://agentzh.org/misc/tracer/digits/index.html\">http://agentzh.org/misc/tracer/digits/index.html</a> (Firefox only) \n</p></li><li>\n<p><a target=\"_blank\" href=\"http://agentzh.org/misc/tracer/adder/index.html\">http://agentzh.org/misc/tracer/adder/index.html </a>(ditto) \n</p></li><li>\n<p><a target=\"_blank\" href=\"http://agentzh.org/misc/tracer/langs/index.html\">http://agentzh.org/misc/tracer/langs/index.html</a> (ditto) </p></li></ul>\n<p>To generate the HTML pages (say, the first demo) yourself, simply check out <a target=\"_blank\" href=\"http://svn.pugscode.org/pugs\">the Pugs repository</a> , ``cd'' into perl5/Pugs-Compiler-Rule, and enter the following commands: </p><pre>  $ perl util/compile_p6grammar.pl -D examples/digits.grammar &gt; <a target=\"_blank\" href=\"http://digits.pm/\">Digits.pm</a><br>  $ echo '7c3d54' &gt; digits.input<br>  $ perl -Ilib -MDigits -e 'print Digits-&gt;count(&lt;&gt;)-&gt;(), \"\\n\"' \\<br>        digits.input &gt; trace.out\n<br>  $ perl util/gen-tracer-view.pl --outdir tmp/digits \\<br>        examples/digits.grammar digits.input &lt; trace.out<br>  $ firefox tmp/digits/index.html</pre>\n<p>The tracer interface still needs love and at the moment I'm adding cooler features like ``random jump'', ``stepping in a specified pace'', and ``stepping back''. If you like to help, just join <a target=\"_blank\" href=\"http://irclog.perlgeek.de/perl6/today\">#perl6</a> and get a Pugs commit bit ;) \n</p><p>I think this tool should be very useful for both regex engine developers and compiler writers, especially when parsing fails in an unexpected way. And it can also be beneficial to Perl 6 beginners who want to learn the shiny new regex syntax and complicated matching behaviors by just ``stepping through'' the real parsing process. moritz++ said on #perl6 that he would build a CGI script to make my demos above ``alive'' when he had the tuits; let's just wait and see ;) \n</p><p>It should be warned that the regex syntax supported by the current PCR implementation is already a little out-of-date regarding the lastest <a target=\"_blank\" href=\"http://perlcabal.org/syn/S05.html\">Synopsis 5</a> . (Thanks TimToady++ for tweaking the regex syntax during the meantime ;)) I'll try to port <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?KindaPerl6\">KindaPerl6</a> 's perl5rx backend over to PCR later. \n</p><p>Hey, it'll be nicer to have KindaPerl6, <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Parser_Grammar_Engine\">PGE</a> , or even the Perl 5 regex engine to work with my tracer as well :) \n</p><p>Stay tuned! \n</p><p>-agentzh\n</p><p>P.S. This entry was originally posted as <a target=\"_blank\" href=\"http://pugs.blogs.com/pugs/2007/10/a-graphical-tra.html\">http://pugs.blogs.com/pugs/2007/10/a-graphical-tra.html</a> <img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+A+graphical+tracer+for+Perl+6+regexes+based+on+PCR&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"Jifty::I18N meets XUL development","date":"Oct 18, 2007 2:42 PM","body":"<div><div class=\"item-body\"><div>I've just ported Jifty::I18N and something in Jifty::Script::Po over to my XUL application framework, XUL::App. And my Perl-based Firefox extension, SearchAll ( <a target=\"_blank\" href=\"https://addons.mozilla.org/en-US/firefox/addon/5712\">\nhttps://addons.mozilla.org/en-US/firefox/addon/5712</a> ), is already using it.<br><br>Because XUL::App is also using Template::Delcare as its templating language, the port is rather straightforward. For example, one of SearchAll's view looks like this:\n<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/lib/SearchAll/View/Main.pm\">http://svn.openfoundry.org/searchall/trunk/lib/SearchAll/View/Main.pm</a><br><br>Note that I'm also using _(\"...\") calls in the view ;)\n<br><br>Extracting these string literals is a single command in XUL::App (just like Jifty):<br><br>&nbsp;&nbsp;&nbsp;&nbsp;bin/xulapp po --lang us_en<br><br>It will scan all the .pm files and generate po/us_en.po for you.<br><br>For example, here is the Po file directory for my SearchAll extension:\n<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/po/\">http://svn.openfoundry.org/searchall/trunk/po/</a><br><br>Unlike Jifty, XUL::App tries to behave more like a compiler than a runtime. So these po files won't appear in the final XPI bundle. XUL::App will carefully convert these .po files to the corresponding DTD entities required by XUL's own L10N mechanism. So still, there's *0* Perl in the \"runtime\".\n<br><br>Testing I10N within Firefox is straightforward as well:<br><br>&nbsp;&nbsp;&nbsp;&nbsp;bin/xulapp overlay --profile dev --lang zh_cn<br><br>Or just testing a particular .xul file in Firefox using a specified profile named \"dev\":\n<br><br>&nbsp;&nbsp;&nbsp;&nbsp;bin/xulapp searchall.xul --profile dev --lang zh_cn<br><br>See <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/README\">http://svn.openfoundry.org/searchall/trunk/README</a> for more \"xulapp\" usage in the SearchAll project if you're interested :)\n<br><br>In XUL::App, I've been trying very hard to follow Jifty's best practices. Jifty is so great that every fundamental component has been keeping me very excited ;)<br><br>Once XUL::App gets matured enough, I'll push it onto CPAN. If you like to help, please let me know ;)\n<br><br>Thanks!\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Jifty%3a%3aI18N+meets+XUL+development&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"SearchAll 0.1.8 released on AMO!","date":"Oct 13, 2007 1:11 PM","body":"<div><div class=\"item-body\"><div>On behalf of the Yahoo! China EEEE hacking team, I'm pleased to announce the 0.1.8 release of SearchAll on <a target=\"_blank\" href=\"http://addons.mozilla.org/\">addons.mozilla.org\n</a> (AMO), with the highlights of *many* more default search engines (including Taobao, eBay, Amozon, <a target=\"_blank\" href=\"http://answers.com/\">Answers.com</a>, and image search engines!) and much improved performance, reliability, and user experience.\n<br><br>If you already have an older version of &nbsp;SearchAll installed in your Firefox, the new version should shortly arrive at your side automatically. If not, please check the updates explicitly in your Firefox's extension manager (Tools menu =&gt; Addons menu-item).\n<br><br>If you have not yet got SearchAll before, you can install it directly from SearchAll's en-US homepage on AMO:<br><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"https://addons.mozilla.org/en-US/firefox/addon/5712\">\nhttps://addons.mozilla.org/en-US/firefox/addon/5712</a><br><br>Or its zh-CN homepage here if you prefer:<br><div style=\"direction: ltr;\"><span><br> &nbsp; &nbsp;<a target=\"_blank\" href=\"https://addons.mozilla.org/zh-TW/firefox/addon/5712\">\nhttps://addons.mozilla.org/zh-TW/firefox/addon/5712</a><br><br></span></div>I really appreciate the tireless project coordination, bug reports, and feature requests from my $boss, laser++ (何伟平). And I'm also grateful to our professional UI engineer, yedan++ (叶丹). Personally I like her logo for SearchAll so much ;) Special thanks go to our PE, jianingy++ (杨家宁), for his all-encompassing technical support. Without his support, technically speaking, \n0.1.8 won't be released so fast. At last but not least, I appreciate all the help from other 4e colleagues that I haven't mentioned here, as well as the cool boy, yuanyin++ (何远银), from the content team . Thank you all!\n<br><br>Here's the detailed change log for version 0.1.8 (compared to the<br>previous 0.1.5 release):<br><br> &nbsp; &nbsp; &nbsp; &nbsp;* Added the folowing new US search engines to the default URI list:<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://www.amazon.com/\">\nwww.amazon.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://www.ask.com/\">www.ask.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://addons.mozilla.org/search\">\naddons.mozilla.org/search</a><br> &nbsp; &nbsp; &nbsp; &nbsp;* Added the following new Chinese search engines to the default URI list:<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://taobao.com/\">\ntaobao.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://so.163.com/\">so.163.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://www.sogou.com/\">\nwww.sogou.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp;* Added the following new image search engines to the default URI list:<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://image.cn.yahoo.com/\">\nimage.cn.yahoo.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://images.google.com/\">images.google.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://images.google.cn/\">\nimages.google.cn</a><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <a target=\"_blank\" href=\"http://image.baidu.com/\">image.baidu.com</a><br> &nbsp; &nbsp; &nbsp; &nbsp;* Fixed <a target=\"_blank\" href=\"http://yisou.com/\">\nyisou.com</a> so that SearchAll can work with it in 'page mode'.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Fixed the timer for next/prev page button actions.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Fixed the hostname hash bug. Now 2 identical SE's (such as 2 <a target=\"_blank\" href=\"http://yahoo.cn/\">\nyahoo.cn</a>) can work at the same time.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Now we use '&lt;&lt;Prev' and 'Next&gt;&gt;' labels instead of arrow icons in the navigation buttons.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Set clickSelectsAll for the toolbar's textbox (just like the Google toolbar :)).\n<br> &nbsp; &nbsp; &nbsp; &nbsp;* Fixed a bug for Mac Firefox. Unlike linux and win32, Mac centers the tabs which breaks the UI. thanks cnhackTNT++ for reporting this.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Refreshing the .xul page in 'page mode' now (mostly) works.\n<br> &nbsp; &nbsp; &nbsp; &nbsp;* Fixed a bug that <a target=\"_blank\" href=\"http://baidu.com/\">baidu.com</a> will show loading animation forever when there's no results at all.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Hides 'please enter your queries above' as early as possilbe in 'page mode'.\n<br> &nbsp; &nbsp; &nbsp; &nbsp;* Removed several setTimeout calls in the JS code so as to make things a bit faster.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Cached the html so that next/prev page switching is now much more smoothly.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Use WPL.STATE_IS_NETWORK\n instead of STATE_IS_WINDOW to eliminate bogus progressing actions.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Improved and optimzied the pattern mining algorithm and implementation.<br> &nbsp; &nbsp; &nbsp; &nbsp;* Made the auto-form-submitting code much smarter.<br><br>\nEnjoy!<br><br>-agentzh<br><br>P.S. As a side note, 0.1.9 will get its way into AMO pretty soon as well ;) Stay tuned!\n <br> <br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+SearchAll+0.1.8+released+on+AMO%21&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Fwd: Mozilla Add-ons: SearchAll Nomination","date":"Oct 3, 2007 4:43 PM","body":"<div><div class=\"item-body\"><div>Yay! My SearchAll addon has been made public on <a target=\"_blank\" href=\"http://addons.mozilla.org\">addons.mozilla.org</a> !!!<br><br>I've put the mail from Mozilla Add-ons below. I don't quite understand what he/she meant by \"A shame it works only with censored search engines though.\" Actually SearchAll has been working with (almost) arbitrary search engines for long ;)\n<br><br>---------- Forwarded message ----------<br><span>From: <b>Mozilla Add-ons</b> &lt;<a target=\"_blank\" href=\"mailto:nobody@mozilla.org\">nobody@mozilla.org</a>&gt;<br>Date: Oct 2, 2007 11:56 PM\n<br>Subject: Mozilla Add-ons: SearchAll Nomination<br><br></span>Congratulations! Your nominated add-on, SearchAll, has been reviewed by a Mozilla Add-ons editor who approved your add-on to be public.<br><br>Your most recent version (\n0.1.4) has also been made public.<br><br>You can view your public add-on now at:<br><br><a target=\"_blank\" href=\"http://addons.mozilla.org/addon/5712\">http://addons.mozilla.org/addon/5712</a><br><br>Review Information:<br>Reviewer: Oliver Saier\n<br>Comments: Pushing to public per my tests and the good reviews. A shame it works only with censored search engines though. Thanks.<br><br>If you have questions about this review, please e-mail <a target=\"_blank\" href=\"mailto:amo-editors@mozilla.org\">\namo-editors@mozilla.org</a> or join #addons on <a target=\"_blank\" href=\"http://irc.mozilla.org\">irc.mozilla.org</a>.<br><br>Mozilla Add-ons<br><a target=\"_blank\" href=\"http://addons.mozilla.org\">http://addons.mozilla.org</a><br><br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Fwd%3a+Mozilla+Add-ons%3a+SearchAll+Nomination&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"SearchAll 插件的 0.0.6 版发布 :)","date":"Sep 20, 2007 5:19 PM","body":"<div><div class=\"item-body\"><div>大家好！<br><br>我的 Firefox 插件的 0.0.6 版发布。<br><br>主要的改进如下：<br><br>* 在原先的 Raw View 的基础上增加了 Formatted View，即对当前比较的三家网站返回的搜索结果进行解析，以统一的格式显示出来，以方便比对，同时界面布局有了较大的改善<br>* 修复了 checkbox 需要点击多次才响应的 bug<br><br>您总是可以从下面这个 URL 安装最新版本的 SearchAll 插件：\n<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/searchall.xpi\">http://svn.openfoundry.org/searchall/trunk/searchall.xpi</a><br><br>非常感谢各位兄弟姐妹先前对 0.0.2 所提出的那些宝贵意见和建议 :) 欢迎大家继续批评指正，以便不断地完善这个产品 :)<br><br>谢谢！<br>\n<br>P.S. 下一阶段的 TODO：<br><br>* 每次退出时保存用户对界面的主要修改，下次启动时自动予以恢复。比如默认打开的是 Raw View 还是 Formatted View, 默认比较的三家搜索引擎的 URL，checkboxes 的勾选状态，等等。<br>* 增加 \"Next page\" 和 \"Previous Page\" 按钮，以便于三家同时转到下一页或上一页。\n<br>* 增加第三个视图，即 Merged View，以一定规则将三家的搜索结果混合为单个结果列表。<br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+SearchAll+%e6%8f%92%e4%bb%b6%e7%9a%84+0.0.6+%e7%89%88%e5%8f%91%e5%b8%83+%3a%29&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Photo Album: SearchAll's screenshots","date":"Sep 18, 2007 6:57 PM","body":"<div><div class=\"item-body\"><div><p>SearchAll's screenshots</p><div><table border=\"0\" cellspacing=\"0\"><tbody><tr height=\"8\"><td></td></tr><tr><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21223/cns%21FF3A735632E41548%21224\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21224:thumbnail\" border=\"0\"></a></p><p>Startup view</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21223/cns%21FF3A735632E41548%21225\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21225:thumbnail\" border=\"0\"></a></p><p>Search results</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21223/cns%21FF3A735632E41548%21226\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21226:thumbnail\" border=\"0\"></a></p><p>Comparing only 2 sites</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21223/cns%21FF3A735632E41548%21231\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21231:thumbnail\" border=\"0\"></a></p><p>The Formatted View</p></td></tr></tbody></table></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Photo+Album%3a+SearchAll%27s+screenshots&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"The SearchAll Firefox Plugin and XUL::App framework","date":"Sep 18, 2007 6:10 PM","body":"<div><div class=\"item-body\"><div>My first $job project is now opensourced. It's a Firefox extension named SearchAll.<br><br>SearchAll is a simple side-by-side search engine comparing tool which allows you to search at most 3 different search engines simultaneously and benchmark their performance in the status bar.\n<br><br>With this extension, you can compare 2 search engines or 3 search engines at a time. There's a long list of default search engines that you can choose from (including <a target=\"_blank\" href=\"http://search.cpan.org\">search.cpan.org</a>!). And you can also enter search engines' URLs which don't appear in the default list\nyourself.<br><br>Currently only the sites' raw HTML pages are shown to the user. We'll add more comprehensive and more intuitive views and graphics for the search results in the near future. Please stay tuned!<br>\n<br>This project was initiated and has been regulated by the Yahoo! China ( <a target=\"_blank\" href=\"http://cn.yahoo.com\">http://cn.yahoo.com</a> ) company and opensourced under the MIT license.<br><br>One of our buzzword (for extension developers) is that there's 0 line of XUL/RDF/XML in our project's source tree. The GUI stuff is totally scripted in Perl. Thanks to Jesse Vincent's Template::Declare module on CPAN.<br><br>You can always get the latest source code of this project from the following SVN repository:<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/\">\nhttp://svn.openfoundry.org/searchall/</a><br><br>If you like to help, please let us know. We're very willing to deliver the commit bit like the Pugs team ;)<br><br>The XPI file that can be installed directly into Firefox can also be found here:\n<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/searchall/trunk/searchall.xpi\">http://svn.openfoundry.org/searchall/trunk/searchall.xpi</a><br><br>There's a XUL application framework named XUL::App sitting in the same repos and SearchAll is already using it. I'd expect to move XUL::App to a separate repos and rename it to a cooler name (maybe Xifty or Xufty?).\n<br><br>Sorry for the lack of documentation. Please see README for some general ideas :)<br><br>I've already submitted this extension to <a target=\"_blank\" href=\"http://addons.mozilla.org\">addons.mozilla.org</a> and waiting for the editor's approval.\n<br><br>Enjoy!<br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+The+SearchAll+Firefox+Plugin+and+XUL%3a%3aApp+framework&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"A plan for XUL::App","date":"Sep 8, 2007 9:36 PM","body":"<div><div class=\"item-body\"><div>I've been mostly working on a Firefox extension last week and I've already got a first (naive) implementation. My $boss got very happy when I offered him a link to my .xpi file.<br><br>The buzzword of this extension is that there's NO xul in the source tree. Template::Declare generates all the ugly XML/XUL/RDF stuff for me, including \ninstall.rdf. Hmm, maybe this will be the first Firefox extension in the world produced by Jifty's Template::Declare module. Hooray!<br><br>Also, jquery.js is a godsend for the Javascript part, it works seamlessly between XUL and HTML DOMs.\n<br><br>This extension will soon be open sourced and the resulting .xpi file will also been uploaded to <a target=\"_blank\" href=\"http://addons.mozilla.org\">addons.mozilla.org</a>, according to my $boss :)<br><br>In the next week, I'll work on the architecture refactoring for this project. In particular, I'd love to invent a new application framework for XUL development. It'll be called XUL::App. I'm going to steal a lot of good ideas from Jifty. Here's some random thoughts:\n<br><br>&nbsp;&nbsp; $ xulapp app --name MyExtension&nbsp;&nbsp;# create a directory tree structure rooted at ./MyExtension/<br>&nbsp;&nbsp; Creating new application MyExtension<br>&nbsp;&nbsp; Creating directory lib<br>&nbsp;&nbsp; Creating directory lib/MyExtension<br>\n&nbsp;&nbsp; Writing file lib/MyExtension/App.pm<br>&nbsp;&nbsp; Creating directory lib/<br>&nbsp;&nbsp; Creating directory bin<br>&nbsp;&nbsp; Creating directory doc<br>&nbsp;&nbsp; Creating directory t<br>&nbsp;&nbsp; Creating directory jslib<br><br>&nbsp;&nbsp;&nbsp;&nbsp;$ cd MyExtension<br>&nbsp;&nbsp;&nbsp; $ xulapp view --name TreeView --out \ntreeview.xul<br>&nbsp;&nbsp;&nbsp; Writing file lib/MyExtension/View/TreeView.pm<br>&nbsp;&nbsp;&nbsp; Updating file lib/MyExtension/App.pm<br><br>&nbsp;&nbsp;&nbsp; $ xulapp debug treeview.xul&nbsp; # will launch a Firefox window loading treeview.xul<br>&nbsp;&nbsp;&nbsp; $ xulapp bundle&nbsp; # will generate \ninstall.rdf, chrome.manifest, and then package related stuff into a .xpi file<br><br>And lib/MyExtension/Application.pm will probably look like this (Thanks to Audrey's Object::Declare!):<br><br>&nbsp;&nbsp;&nbsp; package MyExtension::Application;\n<br>&nbsp;&nbsp;&nbsp; use XUL::App::Schema {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xulfule 'foo.xul' =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; generated from {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'MyExtension::View::Foo' =&gt; { template =&gt; 'foo', arguments =&gt; [...] },\n<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; includes [qw( foo.js foo.cs )];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xulfile 'browser-overlay.xul' =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; generated from 'MyExtension::View::Overlay',<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; overlays 'chrome://browser/content/browser.xul';\n<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jsfile 'foo.js' =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; requires [qw( bar.js dom.js jquery.js )];<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xpifile 'foo.xpi' =&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id is '<a target=\"_blank\" href=\"mailto:myextension@foo.bar.org\">myextension@foo.bar.org\n</a>',<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name is 'MyExtension',<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; version is '0.0.1',<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; targets {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Firefox =&gt; ['1.5' =&gt; '3.0a5'],<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mozilla =&gt; ['\n1.0' =&gt; '1.8'],<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; creator is 'Agent Zhang',<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; developers are [qw( John Mary ... )],<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; updateURL is '<a target=\"_blank\" href=\"http://foo.bar.org/update\">\nhttp://foo.bar.org/update</a>';<br>&nbsp;&nbsp;&nbsp; };<br><br>Currently XUL::App is focused on FF extension development, so there will be no server-side logic in the near future.<br><br>Modern Jifty apps use Template::Declare for their \"view\", and so will XUL::App :) Jifty also has cool concepts like \"model\" and \"actions\". Not sure how \"actions\" fit in the XUL world, but I can see XUL's RDF and its wrappers are good parallels to \"models\". Maybe XUL::App's model classes will simply emit JS and RDFS code for certain RDF schemes defined there.\n<br><br>Unlike Jifty, XUL::App will look more like a compiler. We'll use 100% Perl (as well as a lot of JS for sure) during the development phase, but 0% Perl in the final .xpi package for deployment. So there won't be any portability issues nor any big runtime that slows things down. Yay!\n<br><br>For the test suite part, I'd really love to see a DOM lib for SpiderMonkey or even Test::WWW::Mechanize::AJAX on CPAN soon. Testing XUL/AJAX in bare command line w/o launching any real web browser will simply rock ;)\n<br><br>Yeah, I'm writing down crazy plans...putter++ once said on #perl6 that such things are very bad for expectation management...but anyway...<br><br>Suggestions and comments will be greatly appreciated. Thank you :)\n<br><br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+A+plan+for+XUL%3a%3aApp&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"New life in Beijing","date":"Sep 2, 2007 4:07 PM","body":"<div><div class=\"item-body\"><div>I'm currently working for Yahoo! China's EEEE department. Like Zorpia, lots of smart Perl guys are around here ;)<br><br>$job is fun and I'm allowed to spend a lot of my $working time on my favorite open source projects such as Jifty and Pugs :) That's exactly\nwhat I want.<br><br>I've been mostly hacking on the XUL/XML support for Template::Declare over the last few weeks. And I now have a plan to develop a HTML/XUL/XML DOM builder for SpiderMonkey.pm. After that, cool things like WWW::Mechanize::AJAX or even a full-featured browser in pure Perl will also be possible. Hmm, I think it's wise to talk to \nSpiderMonkey.pm's author first ;)<br><br>Another project I most want to work on is a XUL-based Perl 6 regex tracer/debugger based on fglock++'s Pugs::Compiler::Rule. The basic facilities on the PCR side are almost complete, such as positional info in the regex ASTs and hooks in the emitted Perl source...\n<br><br>With Jesse's Template::Declare and jquery.js under the belt, XUL hacking can be really enjoyable ;)<br><br>Happy hacking!<br><br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+New+life+in+Beijing&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Template::Declare now (partiallly) supports XUL and custom XML dialects","date":"Aug 9, 2007 4:00 PM","body":"<div><div class=\"item-body\"><div>I've refactored Template::Declare::Tags and introduced the long over-due TagSet feature to TD.<br><br>HTML tag list and other related info have been moved to HTML::TagSet, and XUL::TagSet is also added. We can now control which tag set to use by the following lines of code:<br><br>    package MyApp::Templates;<br>    use Template::Declare::Tags qw/ XUL::TagSet /;<br>    use base 'Template::Declare';<br><br>&nbsp;&nbsp;&nbsp;&nbsp;    template foo =&gt; sub {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        window { attr { ... } groupbox { .... } }<br>&nbsp;&nbsp;&nbsp;&nbsp;    };<br><br>And it's also possible to specify multiple tag sets:<br><br>    use Template::Declare::Tags qw/ XUL::TagSet HTML::TagSet /;<br><br>(This example is not very realistic BTW.)<br><br>By default, Template::Declare::Tags uses HTML::TagSet so that existing code won't break.<br><br>The user can define their own tag set classes as long as these classes subclass Template::Declare::TagSet and implement the corresponding methods (i.e. get_tag_list, get_alternate_spelling, and can_combine_empty_tags).<br><br>See the POD in these classes for more info :)<br><br>Now I'm considering adding the XML namespace support to TD. I'm proposing the following design:<br><br>&nbsp;&nbsp;&nbsp;&nbsp;    package html;<br>&nbsp;&nbsp;&nbsp;&nbsp;    use Template::Declare::Tags 'HTML::Tags' =&gt; { tag_prefix =&gt; 'html:' };<br><br>&nbsp;&nbsp;&nbsp;&nbsp;    package MyXulApp::Templates;<br>&nbsp;&nbsp;&nbsp;&nbsp;    use Template::Declare::Tags 'XUL::Tags';<br>&nbsp;&nbsp;&nbsp;&nbsp;    template foo =&gt; sub {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        groupbox {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;            html::p { 'hello, XML!' }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;            html::table {}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;        }<br>&nbsp;&nbsp;&nbsp;&nbsp;    };<br><br>And show('foo') will give:<br><br>&nbsp; &lt;groupbox&gt;<br>&nbsp;&nbsp;&nbsp;  &lt;html:p&gt;hello, XML!&lt;/html:p&gt;<br>&nbsp;&nbsp;&nbsp;  &lt;html:table&gt;&lt;/html:table&gt;<br>&nbsp; &lt;/groupbox&gt;<br><br>Thoughts? Comments?<br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Template%3a%3aDeclare+now+%28partiallly%29+supports+XUL+and+custom+XML+dialects&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Re: [jifty-devel] Idea for Template::Declare::XML","date":"Jul 19, 2007 10:05 PM","body":"<div><div class=\"item-body\"><div>Hi, I've coded up a small script to use Template::Declare to generate some XML code (it's actually XUL, to be more specific):<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://perlcabal.org/agent/xul/buttons.pl.txt\">http://perlcabal.org/agent/xul/buttons.pl.txt\n</a><br><br>The output file is<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://perlcabal.org/agent/xul/buttons.xul\">http://perlcabal.org/agent/xul/buttons.xul</a><br><br>The script used to run buttons.pl.txt is<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://perlcabal.org/agent/xul/xulgen.pl.txt\">\nhttp://perlcabal.org/agent/xul/xulgen.pl.txt</a><br><br>It's a lot of fun. Essentially, I extended the tag set in Template::Declare::Tag by the following lines of code:<br><br><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp;&nbsp; Template::Declare::Tags::</span><span style=\"font-family: courier new,monospace;\">install_tag($_) for qw(</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window textbox hbox vbox radio radiogroup\n</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; groupbox spacer</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp;&nbsp; );</span><br><br>The tag list given above is by no means exhaustive. It's just an experiment. :)<br><br>Here's another trivial example:<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://perlcabal.org/agent/xul/findfile.xul\">http://perlcabal.org/agent/xul/findfile.xul\n</a><br>&nbsp;&nbsp;&nbsp; &lt;=<br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://perlcabal.org/agent/xul/findfile.pl.txt\">http://perlcabal.org/agent/xul/findfile.pl.txt</a><br><br>Enjoy!<br>agentz\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Re%3a+%5bjifty-devel%5d+Idea+for+Template%3a%3aDeclare%3a%3aXML&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"\"No More Passwords (with SSH)\"","date":"Jul 11, 2007 11:41 AM","body":"<div><div class=\"item-body\"><div>Entering a password everytime logging into a remote machine via SSH is very annoying, especially when using unison to sync stuff using SSH. Here is how to save us:<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" href=\"http://www.cvrti.utah.edu/%7Edustman/no-more-pw-ssh/\">\nhttp://www.cvrti.utah.edu/~dustman/no-more-pw-ssh/</a><br><br>Note that the dsa thingy is unnecessary for me :) And don't forget changing the permisson of the .ssh/ directory on the server side to 700, or you'll still be prompted with password queries.\n<br><br>And this one may be helpful too:<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" href=\"http://www.linuxproblem.org/art_9.html\">http://www.linuxproblem.org/art_9.html</a><br><br>Enjoy!<br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%22No+More+Passwords+%28with+SSH%29%22&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Setting up Selenium on Ubuntu feisty fawn 7.04","date":"Jul 11, 2007 1:41 AM","body":"<div><div class=\"item-body\"><div>OKay, I've spent huge hours tonight and finally got Selenium servers and clients running on my Ubuntu Feisty Fawn 7.04 + Firefox <a target=\"_blank\" href=\"http://2.0.0.4\">2.0.0.4</a>. Here are the steps involved:<br><br>* First of all, download the latest Selenium Remote Control package snapshot from:\n<br><br>&nbsp;&nbsp;&nbsp; <a target=\"_blank\" href=\"http://maven.openqa.org/org/openqa/selenium/selenium-remote-control/0.9.2-SNAPSHOT/\">http://maven.openqa.org/org/openqa/selenium/selenium-remote-control/0.9.2-SNAPSHOT/</a><br><br>For example, <a target=\"_blank\" href=\"http://maven.openqa.org/org/openqa/selenium/selenium-remote-control/0.9.2-SNAPSHOT/selenium-remote-control-0.9.2-20070707.164746-46-dist.zip\">\nselenium-remote-control-0.9.2-20070707.164746-46-dist.zip</a>  works for me :)<br><br>Note that there is a serious bug in the current latest version 0.9.0: firefox hangs after server issues \"Preparing Firefox profile...\". See details at:\n<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://jira.openqa.org/browse/SRC-225?decorator=printable\">http://jira.openqa.org/browse/SRC-225?decorator=printable</a><br><br>Don't download the .zip from the following location,<br><br>&nbsp;&nbsp;<a target=\"_blank\" href=\"http://www.openqa.org/selenium-rc/download.action\">\nhttp://www.openqa.org/selenium-rc/download.action</a><br><br>unless 0.9.2 is released ;)<br><br>The downloaded .zip file contans both the server and the client-side libraries in various languages.<br><br>* And then we need to set up the Sun Java environment if we haven't. Note that ubuntu uses gij (GNU Java bytecode interpreter) by default and this \"java\" doesn't work with the selenium server. (We'll get a lot of Java exceptions if we use it.)\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;$ sudo apt-get install sun-java5-jdk</span><br><br>Then we can update the default \"java\" our shell sees:<br><br><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp;$ sudo update-alternatives --config java</span><br style=\"font-family: courier new,monospace;\"><br>Make sure the default one is something like<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;/usr/lib/jvm/java-\n1.5.0-sun/jre/bin/java</span><br><br>rather than something like<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;/usr/bin/gij-wrapper-4.1</span><br style=\"font-family: courier new,monospace;\"><br>* Selenum server needs firefox-bin, so let's visible in our PATH:\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;$ sudo ln -s /usr/lib/firefox/firefox-bin /usr/bin/</span><br style=\"font-family: courier new,monospace;\"><br>Also, firefox-bin needs some shared library, and we need to tell the system where those libraries are by adding the following line to /etc/ld.so.conf\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp; /usr/lib/firefox</span><br style=\"font-family: courier new,monospace;\"><br>Then running the following command to update the .conf setting:<br><br><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp; $ ldconfig</span><br><br>If we don't update ld's configuration, we will probably get the following error while running firefox-bin:<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;/usr/lib/firefox/firefox-bin: error while loading shared libraries: \nlibmozjs.so: cannot open shared object file: No such file or directory</span><br><br>* Then we can unzip the Selenium Remote Control's .zip package, cd into the selenium-remote-control-0.9.2-SNAPSHOT/selenium-server-0.9.2-SNAPSHOT\n directory and start the server like this:<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;java -jar selenium-server.jar -port 4444</span><br style=\"font-family: courier new,monospace;\"><br>where 4444 is the port the selenium proxy server will listen to.\n<br><br>For other options for this Java program, look at<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://www.openqa.org/selenium-rc/options.html\">http://www.openqa.org/selenium-rc/options.html</a><br><br>* Now it's time to play with the client-side stuff. Let's install the excellent Selenium IDE addon to our Firefox from here:\n<br><br>&nbsp;&nbsp; <a target=\"_blank\" href=\"http://www.openqa.org/selenium-ide/\">http://www.openqa.org/selenium-ide/</a><br><br>Go to Firefox's \"Tools\" menu, and then click the \"Selenium IDE\" item to start it.<br><br>It's able to record our actions in Firefox and generate source code in various languages, including Perl! Just go to the [Optons] -&gt; [Clipboard Format] in the Selenium IDE window.\n<br><br>After record a series of actions, you can copy the commands generated into a text editor, it will automatically converted to the right language format before entering the clipboard. :)<br><br>If we select Perl, then the generated code might look like this:\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;open_ok(\"/\");</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;type_ok(\"q\", \"\\\"Agent Zhang\\\"\");\n</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;click_ok(\"btnG\");</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;wait_for_page_to_load_ok(\"30000\");</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;click_ok(\"link=Next\");</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$sel-&gt;wait_for_page_to_load_ok(\"30000\");</span><br><br>* Then it's time to install the Test::WWW::Selenium module from CPAN to actually run this code:\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;$ sudo cpan Test::WWW::Selenium</span><br><br>* After installing this module, we can add the following header to that piece of Perl code generated by Selenium IDE:\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp; use Test::More 'no_plan';</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp; use Test::WWW::Selenium;\n</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp; my $sel = Test::WWW::Selenium-&gt;new(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; host =&gt; \"localhost\",</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; port =&gt; 4444,</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; browser =&gt; \"*firefox\",\n</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rowser_url =&gt; \"<a target=\"_blank\" href=\"http://www.google.com\">http://www.google.com</a>\",</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default_names =&gt; 1,</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp; );</span><br><br>And then run this .t file:\n<br><br><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; $ perl google.t</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; ok 1 - open, /</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; ok 2 - type, q, \"Agent Zhang\"</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; ok 3 - click, btnG</span>\n<br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; ok 4 - wait_for_page_to_load, 30000</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">\n&nbsp;&nbsp;&nbsp; ok 5 - click, link=Next</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; ok 6 - wait_for_page_to_load, 30000</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">&nbsp;&nbsp;&nbsp; 1..6</span><br><br>Yes, it's a bit horrible but it works :)<br><br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Setting+up+Selenium+on+Ubuntu+feisty+fawn+7.04&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"终于拿到了学位和毕业证","date":"Jun 30, 2007 10:00 PM","body":"<div><div class=\"item-body\"><div>经过四年的努力，最近终于拿到了计算机专业的学士学位和毕业证书……不容易啊，特别是对于像我这样的“差生”来说，呵呵。大家鼓励我一下吧！;)<br><br>这样一来，我的个人简历里就不用再写“expected to graduate in June, 2007”这样的话了，Yay!<br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e7%bb%88%e4%ba%8e%e6%8b%bf%e5%88%b0%e4%ba%86%e5%ad%a6%e4%bd%8d%e5%92%8c%e6%af%95%e4%b8%9a%e8%af%81&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Ubuntu下的音频转换","date":"Jun 30, 2007 12:08 AM","body":"<div><div class=\"item-body\"><div>今天晚上找到了Ubuntu下的一款极好的音频转换工具，叫做 Perl Audio Converter:<br><br><a target=\"_blank\" href=\"http://viiron.googlepages.com/screenshots\">http://viiron.googlepages.com/screenshots</a><br><br>我已经成功地将 .ram 文件转换为了 .mp3 格式。它支持的格式实在太多，甚至可以将 .rm 视频文件转为 .mp3 音频。\n<br><br>不过安装不是那么直截了当。<br><br><span style=\"font-family: courier new,monospace;\">wget <a target=\"_blank\" href=\"http://linuxappfinder.com/debian/pool/main/p/pacpl/pacpl_3.3.1-1_i386.deb\">http://linuxappfinder.com/debian/pool/main/p/pacpl/pacpl_3.3.1-1_i386.deb\n</a></span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">sudo dpkg -i pacpl_3.3.1-1_i386.deb</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">\nsudo apt-get install libaudio-flac-header-perl</span><br style=\"font-family: courier new,monospace;\"><span style=\"font-family: courier new,monospace;\">sudo apt-get -f install</span><br style=\"font-family: courier new,monospace;\">\n<span style=\"font-family: courier new,monospace;\">sudo cpan MP4::Info Audio::APETags Audio::WMA MP3::Info</span><br><br>安装完毕之后，转换 .ram 至 .mp3 则通过下面这个命令：<br><br><span style=\"font-family: courier new,monospace;\">pacpl --convertto mp3 *.ram\n</span><br><br>其他格式与之类似 ;)<br>\n<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Ubuntu%e4%b8%8b%e7%9a%84%e9%9f%b3%e9%a2%91%e8%bd%ac%e6%8d%a2&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Photo Album: YAPC::Beijing 2007","date":"Jun 27, 2007 10:08 PM","body":"<div><div class=\"item-body\"><div><p>YAPC::Beijing 2007</p><div><table border=\"0\" cellspacing=\"0\"><tbody><tr height=\"8\"><td></td></tr><tr><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21191\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21191:thumbnail\" border=\"0\"></a></p><p>我和牛人们</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21192\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21192:thumbnail\" border=\"0\"></a></p><p>小林和我</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21190\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21190:thumbnail\" border=\"0\"></a></p><p>我的UML::Class::Simple演讲</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21193\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21193:thumbnail\" border=\"0\"></a></p><p>和 laye, dolmans 等等大家在一起</p></td></tr><tr><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21194\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21194:thumbnail\" border=\"0\"></a></p><p>Yahoo的朋友们和nomas</p></td><td width=\"15\"></td><td valign=\"top\"><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/photos/cns%21FF3A735632E41548%21188/cns%21FF3A735632E41548%21196\"><img src=\"http://storage.live.com/items/FF3A735632E41548%21196:thumbnail\" border=\"0\"></a></p><p>“情圣”在主持</p></td><td width=\"15\"></td></tr></tbody></table></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Photo+Album%3a+YAPC%3a%3aBeijing+2007&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"YAPC::Beijing 大会上拍的相片","date":"Jun 27, 2007 9:13 PM","body":"<div><div class=\"item-body\"><div>YAPC::Beijing 2007 大会上拍的相片集:<br><br><a target=\"_blank\" href=\"http://yapc.org.cn/album-bin/index.pl\">http://yapc.org.cn/album-bin/index.pl</a><br><br>穿深绿色上衣正在做演讲的就是我啦，呵呵。<br><br><span style=\"text-decoration: underline;\"></span>这是我和小林的合照:<br><br><a target=\"_blank\" href=\"http://yapc.org.cn/album-bin/index.pl?mode=view&amp;photo=/dsc_0336.nef_01.jpg\">http://yapc.org.cn/album-bin/index.pl?mode=view&amp;photo=/dsc_0336.nef_01.jpg</a><br><br>可惜我那天胡子没刮，头发也没理……狼狈哦，呵呵<br><br>还有 Yahoo China 的朋友们以及 nomas：<br><a target=\"_blank\" href=\"http://www.yapc.org.cn/album-bin/index.pl?mode=view&amp;photo=/dsc_0292.nef_01.jpg\"><br>http://www.yapc.org.cn/album-bin/index.pl?mode=view&amp;photo=/dsc_0292.nef_01.jpg<br></a><br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+YAPC%3a%3aBeijing+%e5%a4%a7%e4%bc%9a%e4%b8%8a%e6%8b%8d%e7%9a%84%e7%9b%b8%e7%89%87&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"YAPC::Beijing 2007","date":"Jun 24, 2007 5:33 AM","body":"<div><div class=\"item-body\"><div>2007-06-24<br><br>连夜用 Perl 6 的 Pod 赶好了我的 GNU make 类库的毕业论文，15 日下午便登上了前往北京的火车去参加 YAPC::Beijing 2007 大会－－带着 0 张幻灯片却申请了 2 场演讲！<br><br>第一次一个人出这么远的门，刚上火车的时候还真有些神经质，呵呵；脑袋里浮现出电影《天下无贼》中的画面……还好，我这一路上运气不好，没遇上那样的贼中高人。没过多久，我就被困倦打倒了，睡了一路。<br><br>16 日早上路过天津的时候确实有些伤感，但很快在杉哥的帮助下挺过去了，呵呵。 <br><br>到了北京站，见着了 cnhackTNT（<font size=\"-1\">王晖</font>）,\nhoowa（孙冰）, 和另一个叫做张建军的大连的朋友。一道打车去了东三环附近的百子湾路上的如家国贸店安顿了下来。这一路上，hoowa\n说的都是他的 Asterisk 技术。可以通过 Perl 脚本向任何一部手机和任何一部固定电话打电话，并且能给接听方播放 mp3\n文件。的确很酷哦！<br><br>我和 TNT 住一间，他们俩住一间。TNT 真是极好的人哪，得知我还是 0\n张幻灯片以后，主动提出将他随身带过来的笔记本电脑借我使用。由于如家酒店提供了网线，再加上 TNT 的笔记本又是\nubuntu，幻灯片的制做过程非常地顺利……但却仍然用了一下午加上一晚上的时间……这是真正意义上的向唐凤学习－－JIT\nslide-making! <br><br>16 日在开始做幻灯之前，我和 TNT 去雅虎中国见了 nomas 和\nyuting，并一起用了午餐。nomas 有些富态，非常和蔼可亲的人哦；而 yuting\n则是不修边幅、踩着拖鞋啪哒啪哒的大男孩。<br><br>YAPC::Beijing 大会是在第二天，即 17 日在雅虎中国举行。早上过去就觉得身体很虚那种，因为前一晚上为做幻灯片的事情折腾到凌晨 4 点才睡下，然后早上 6 点多又起来了。TNT 也陪着我不睡觉，真是太对不起他了。 <br><br>值\n得一提的是，大会开始之前，我终于见到了孙磊(laye)。他专门为这次大会从上海赶过来。这一回算是我们的第一次见面，但我们在网上交流已经很久了。想\n来也有趣，我和他最终是在一个叫做 xptop 的 C/C++\n论坛里认识的，后来一问才晓得，原来大家都是一个学校一个专业的！哈哈！另外，在会场上我还有幸遇见了 #perl6 频道里的 dolmans\n并和他聊了不少。此前我一直以为他是德国人，呵呵，失误啊！dolmans 一直给我的是一种世外高人的感觉哦。 <br><br>大会开始以后，第一\n个 talk 就是我的\"Contribute to Pugs\"。当然又是一场激情四射的讲演了啊，呵呵。也算是代表唐凤和 Pugs\n团队吧。听众的反响相当热烈。末后，fkiori（陈正伟），TNT，和传说中的小林当场向我提了几个很不错的问题。由于对 S12\n的无知，fkiori 问的 Perl 6 中 protected 类型成员的声明记法我没有答上。TNT 问的有关 Pugs 与 parrot\n等其他 Perl 6 相关项目的关系问题我早有准备。小林问的有关如何处理我的学业与 Pugs\n团队开发之前的关系，回答起来也是颇有意趣的。演讲结束后，又有不少与会者私下问了我许多有关 Perl 6 和 Pugs\n的问题，其中不乏\"Perl 6 何时问世\"这样的经典问题。我听到了有关 Perl 6 本身的唯一不满是，新的面向对象的记法\"太像 Java\n了\"。这是真正的 Perl 5 程序员的反应，哈哈！ <br><br>下午又听了 Joe, fkiori,\n小林, hoowa 等高手的演讲。Joe 的演讲中提及的不少 DBI 相关的有趣模块我还是第一回听说，感觉很有收获。fkiori 的 P3P\n也很有新意。小林提及的通用 Web 后台系统让我有一种想介绍 Jifty 的冲动，呵呵。hoowa 的演讲是最有个性的，现场演示用它的客户端程序拨通观众的手机－－一个字:帅！他的\nAsterisk 模块看上去妙趣横生哦。 临近结束时我又作了一个有关 UML::Class::Simple 模块的闪电演讲。\n<span></span><br><br>最后大家一起合了影，开心哦，呵呵。我记得还见到了一个女性程序员，她说他们部门从主管到普通员工，很多都是女孩子－－实在是太强了！<br><br>晚上又和 PerlChina 的不少朋友在百子湾路上的一家小饭馆一起用了晚餐。认识了好几个新朋友。饭后回到如家，又听了三明治介绍他的精彩历史，听他讲\"长发怪物\"和\"赤脚怪物\"的离奇故事……<br><br>18 日起来，一个人逛了北京永安里、天安门和王府井等地方。觉得最有趣的还是永安里 LG 大厦附近的居民小区。在那里见着了北京的鸽子和猫咪哦。 <br><br>19 日我就坐火车回来了。<br><br>感觉像记流水帐哦……没办法，想记录的事情太多，而我的汉语又有所退步……<br><br>P.S. 如果下一届 Audrey 能来，那可就更帅了哦，呵呵。<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+YAPC%3a%3aBeijing+2007&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"My name appears on Wikipedia!","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 13 日<br><br>Quoted from <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9QYXJzZXJfR3JhbW1hcl9FbmdpbmU%3D\">http://en.wikipedia.org/wiki/Parser_Grammar_Engine</a> :<br><p><span style=\"font-weight: bold;\">References</span><br></p><ol><li> <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPWFIUjBjRG92TDJWdUxuZHBhMmx3WldScFlTNXZjbWN2ZHk5cGJtUmxlQzV3YUhBJTJGZEdsMGJHVTlVR0YwY21samExOVNMbDlOYVdOb1lYVmtKbUZ0Y0R0aFkzUnBiMjQ5WldScGRBJTNEJTNE\" title=\"Patrick R. Michaud\">Michaud, Patrick R.</a> (2004-11-22). <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPWFIUjBjRG92TDNObFlYSmphQzVqY0dGdUxtOXlaeTklMkJiSFJ2WlhSelkyZ3ZjR0Z5Y205MExUQXVNaTR5TDJOdmJYQnBiR1Z5Y3k5d1oyVXZVa1ZCUkUxRg%3D%3D\" title=\"http://search.cpan.org/~ltoetsch/parrot-0.2.2/compilers/pge/README\" rel=\"nofollow\">Parrot Grammar Engine (PGE)</a>.</li><li><b><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPVpXNHVkMmxyYVhCbFpHbGhMbTl5Wnk5M2FXdHBMMUJoY25ObGNsOUhjbUZ0YldGeVgwVnVaMmx1WlElM0QlM0QmaGw9M2VkI19yZWYtMQ%3D%3D#\" title=\"\">^</a></b> <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPWFIUjBjRG92TDJWdUxuZHBhMmx3WldScFlTNXZjbWN2ZHk5cGJtUmxlQzV3YUhBJTJGZEdsMGJHVTlVR0YwY21samExOVNMbDlOYVdOb1lYVmtKbUZ0Y0R0aFkzUnBiMjQ5WldScGRBJTNEJTNE\" title=\"Patrick R. Michaud\">Michaud, Patrick R.</a> (2004-11-08). <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPWFIUjBjRG92TDNkM2R5NXViblJ3TG5CbGNtd3ViM0puTDJkeWIzVndMM0JsY213dWNHVnliRFl1WTI5dGNHbHNaWEl2T1RZJTNE\" title=\"http://www.nntp.perl.org/group/perl.perl6.compiler/96\" rel=\"nofollow\">First public release of grammar engine</a>.</li><li><b><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPVpXNHVkMmxyYVhCbFpHbGhMbTl5Wnk5M2FXdHBMMUJoY25ObGNsOUhjbUZ0YldGeVgwVnVaMmx1WlElM0QlM0QmYW1wO2hsPTNlZCNfcmVmLTI%3D#\" title=\"\">^</a></b> \"Agent Zhang\" (2006-09-17). <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5teXNlY3JlY3kuY29tL2luZGV4LnBocD9xPWFIUjBjRG92TDNCMVozTXVZbXh2WjNNdVkyOXRMM0IxWjNNdk1qQXdOaTh3T1M5d1kzSmZjbVZ3YkdGalpYTmZjR2N1YUhSdGJBJTNEJTNE\" title=\"http://pugs.blogs.com/pugs/2006/09/pcr_replaces_pg.html\" rel=\"nofollow\">PCR replaces PGE in Pugs</a>.</li></ol> <p><a target=\"_blank\"></a> </p><h2><span></span> <span></span></h2>Huh, I posted the article \"PCR replaces PGE in Pugs\" to Audrey's blog site about one year ago:<br><br>    <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3B1Z3MuYmxvZ3MuY29tL3B1Z3MvMjAwNi8wOS9wY3JfcmVwbGFjZXNfcGcuaHRtbA%3D%3D\">http://pugs.blogs.com/pugs/2006/09/pcr_replaces_pg.html</a><br><br>Hey, it's really exciting. Yay!<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+My+name+appears+on+Wikipedia%21&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"大学四年回顾...","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 13 日<br><br>今天填了一些表格，需要写自我鉴定和个人小结之类的东西。想想把我写的发给大家看看也蛮有趣的，呵呵。全文如下：<br><p><br>经过四年的学习，终于顺利完成了大学里那些数量众多同时难度颇深的课程的学习，并自学了许多课外的知识和技能。<br><br>对\n我来说，学校能教给我的东西是极为有限的。更多地，学校扮演着这样的一个角色：她为我提供一个学习、思考和实践的平台，是我大量地积累知识和技术的主要推\n动力之一，她为我创造了许多软件项目和科学研究的原始需求和灵感源泉，同时也为我提供了极为丰富的图书资源。说实话，四年来，学校的课程对我的不间断的巨\n大压力迫使着我不断地攀登技术高峰，不断地补充自己在众多不同领域的基础知识，不断地完成越来越复杂、越来越重要的项目和课题。<br><br>相信与\n否？我大学中最重要的时光是在英特网上度过的。和身边许多同学在网络游戏中沉沦不同的是，我积极地参与到了国际 Perl\n编程社区的活动中，投身到了包括 Pugs 和 Jifty 在内的开源软件项目的开发工作中，与包括 Audrey Tang , Larry\nWall, Adam Kennedy, Luke Palmer 在内的许多世界知名的程序员进行过比较深入的交流，并建立起良好的关系。<br><br>我\n与世界各地的程序员保持着广泛的沟通与联系，甚至进行协同开发。从他们身上，我学到了太多太多。我学到的不仅仅是许多具体的技术和技巧，还包括他们的似火\n般的热情，绅士般的风度，朋友般的友善、君子般的谦逊……更重要的是他们面对问题、处理问题和解决问题时的发散式、跳跃式的思维方法，以及一丝不苟、一切\n务实的行事原则。当然，还有英语表达上的许多技巧。在这种场合下，我才发现原来熟悉英语是一件非常幸福的事情。和不同国家、不同肤色的志同道合的朋友无障\n碍地交流，细细想来，还真是一件不可思议的事情，呵呵。<br><br>我这个人喜欢体验创新，喜欢冒险，喜欢不断尝试各种有趣而新奇的想法和事物。我也\n喜欢一个人静静地坐在图书馆里潜心阅读计算、数学、物理、生物、化学和历史方面的英文原著，抑或是坐在风和日丽的山头，思索科学和人生中一些有趣而重要的\n问题，或者和大学和中学里结交的好朋友们呆在一起，畅所欲言，天马行空，热烈地讨论技术和科学中已经发生的、正在发生的、和将要发生的那些不可思议的事\n情……<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e5%a4%a7%e5%ad%a6%e5%9b%9b%e5%b9%b4%e5%9b%9e%e9%a1%be...&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"pgmake-db通过官方测试集的50%以上","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 12 日<br><br>由于前面为实现 Makefile \"脱糖\" 程序 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvc2NyaXB0L21ha2VzaW1wbGU%3D\">makesimple</a>，我为我的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvc2NyaXB0L3BnbWFrZS1kYg%3D%3D\"> pgmake-db</a> 程序添加了 --question (-q) 和 --always-make (-B) 选项，并在 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL0FTVC9FdmFsdWF0b3IucG0%3D\">Makefile::AST::Evaluator</a> 中提供了相应的支持，与此同时还修复了隐式规则搜索算法的实现代码中的两处严重的 bug。这些改进最终使得我的 pgmake-db 对官方测试集的通过率首次超过了 50%. 万岁！<br><p><br>事实上，以目前 AST 和运行时的架构，完全足以通过 90% 以上的官方测试集，只不过不少小东西还需要花时间去打磨。只要给我满满一周的时间，我有信心让它达到 90% 以上。但目前条件并不具备。<br><br>从目前的实现出发，可以开发出许多很酷的应用。关键就看我们的想象力了。我的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvc2NyaXB0L21ha2VzaW1wbGU%3D\"> makesimple</a> 脚本已经掀开了从 GNU makefile 到其他格式的项目配置文件的序幕。事实上，makesimple 程序最终将演化为\"传说\"中的 Makefile::Compiler 模块中的一个部分。呵呵。<br><br>将当前 pgmake-db 借用的 GNU make 前端 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL1BhcnNlci9HbWFrZURCLnBt\"> Makefile::Parser::GmakeDB</a>\n模块替换为纯 Perl 实现（即未来的 Makefile::Parser::Gmake 模块）也可以推动 DOM parser\n的开发工作，特别是提高我整个工具链的可移植性和整体可靠性。与此同时，纯 Perl 的 GNU make 工具链，有助于横向上开发其他种类的\nmakefile 的工具链，比如 MS nmake 的从 DOM 到 AST 再到 Evaluator\n的工具链。届时，项目的可复用性、开放性和灵活性将超过我目前的想象能力，呵呵。<br><br>Alas, time is always a problem :(<br><br><span style=\"font-family: courier new,monospace;\">  .oO(</span> 论文...论文...论文...<span style=\"font-family: courier new,monospace;\"> )</span><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+pgmake-db%e9%80%9a%e8%bf%87%e5%ae%98%e6%96%b9%e6%b5%8b%e8%af%95%e9%9b%86%e7%9a%8450%25%e4%bb%a5%e4%b8%8a&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"makesimple: 从GNU makefile到“简单makefile”","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 12 日<br><br>或许我真的应该开始写论文了，但我还是忍不住实现了一个 GNU makefile 的翻译程序makesimple：<br><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvc2NyaXB0L21ha2VzaW1wbGU%3D\">http://svn.openfoundry.org/makefileparser/branches/gmake-db/script/makesimple </a><br><br>该程序能将非常复杂的 GNU makefile 转换成最最基本的形式，即所谓的\"简单makefile\"。<br><br>\"简单makefile\"中只有单目标的显式规则，没有变量赋值，没有变量引用，没有条件指令，没有模式规则，没有所有其他看上去\"高级\"的东西。因此它可以不加修改地为其他版本的 make 正确处理，比如 nmake 和 dmake.<br><br>而作为输入的 makefile 则可以使用<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5nbnUub3JnL3NvZnR3YXJlL21ha2UvbWFudWFsL21ha2UuaHRtbA%3D%3D\">GNU make手册</a>中描述的绝大部分的高级特性，包括<br></p><ul><li>多目标规则 (multi-target rules)</li><li>双冒号规则 (double-colon rules)</li><li>隐式规则 (implicit rules/pattern rules)</li><li>链式隐式规则 (chained implicit rules)</li><li>静态模式规则 (static pattern rules)</li><li>仅顺序依项目 (order-only prerequisites)</li><li>自动变量 (automatic variables)</li><li>目标局部变量 (target-specific variables)</li><li>由 define 指令定义的逐字句变量 (verbatim variables)</li><li>简单展开变量 (simply-expanded variables)</li><li>递归展开变量 (recursively-expanded variables)</li><li>命令序列束(canned sequence of commands)</li><li>命令修饰符 @, - 和 +</li><li>利用续行符 (\"\\\\\\n\") 跨越多行的命令 (commands spanning multiple lines)</li><li>绝大多数内建函数引用 (built-in function references)</li><li>条件指令 ifdef/else/...</li></ul>详情请见下面这个测试文件中的测试用例（只需看 __DATA__ 那行之后的内容就可以了）：<br><br><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvdC9tYWtlc2ltcGxlLnQ%3D\">   http://svn.openfoundry.org/makefileparser/branches/gmake-db/t/makesimple.t</a><br><br>另外 include 指令和其他词法/语法层面上的特性也应该工作得很好，因为那是前端提供的\"免费功能\"，呵呵。<br><br>这些特性都是我的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL0FTVC5wbQ%3D%3D\">  Makefile::AST</a> 和 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL0FTVC9FdmFsdWF0b3IucG0%3D\">Makefile::AST::Evaluator</a> 模块提供的实现。我的 makesimple 脚本只是利用了  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L0NsYXNzLVRyYWl0Lw%3D%3D\">Class::Trait</a> 模块，在 Makefile::AST::Evaluator::make_by_rule 方法里定义的锚点位置上，把  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL0FTVC9SdWxlLnBt\">Makefile::AST::Rule </a> 对象和对应的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIvbGliL01ha2VmaWxlL0FTVC9Db21tYW5kLnBt\">Makefile::AST::Command</a> 对象全部记录下来。 Class::Trait 简直就是天赐之物，实在想不出能让我的 Evaluator 代码保持整洁，同时又提供给用户应用足够大的灵活性的更理想的解决方案了！难怪 Jesse 会在 Jifty 项目中大力推动该模块的应用呢。<br><br>目前 makesimple 脚本会自动轮询 makefile 中所有出现的目标，而且用户可以在命令行上指定额外的目标。额外的目标对于隐式规则的应用而言至关重要，毕竟 GNU make 中有太多的\"魔法\"。<br><br>Audrey 的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L01vZHVsZS1JbnN0YWxsLw%3D%3D\">Module::Install</a> 模块生成的庞大的 GNU makefile，经过 makesimple 转换后，仍然工作得很好。这是第一个现实世界中的测试用例啊。<br><br>makefilesimple\n在翻译时会保持\"默认目标\" (default goal)，包括用 .DEFAULT_GOAL 显式指定的默认目标以及出现在输入\nmakefile 中的第一个非隐式规则的目标。默认目标如果对应一个双冒号规则集 (set of double-colon\nrules)，也能正确地处理 :)<br><br>makesimple 的 TODO:<br><ul><li>对用户显式指定的某些变量不进行第二\n次遍历 (the second pass) 中的展开操作，除非它是某个 GNU make\n内建函数的参数，代之以变量赋值语句，从而提高“简单makefile”的灵活性，这样使用翻译版本的最终用户可以自己修改这些变量的值，比如\nCC和CFLAGS 这样的变量就经常需要自己进行调整。但是，第一次遍历过程中的变量展开操作必须进行，否则解析器很可能无法继续。</li><li>对用户显式指定的某些变量的某些取值进行轮询，并将由此得到的不同版本的\"简单makefile\"作为一个一个的代码块，填进\"目标 make\"支持的条件语句中。（这让我想起\"程序设计方法学\"中结构化程序的正确性证明中用到的\"分支展开\"技术，呵呵）</li><li>order-only 依赖项需要更理想的翻译方法，目前是直译。</li><li>提供 shell 命令翻译的解决方案。可以尝试类似 sh ==&gt; cmd 这样的自动转换，以及类似国际化支持中的用户自定义翻译。（见 Locale::Maketext 模块。）</li></ul>正如你可能已经猜到的，makesimple 脚本就是“传说中的” Makefile::Compiler 模块的一个原型实现！Come on!<br><br>与 makesimple 相似的另一个有趣的应用就是在全新的 makefile AST 和 Evaluator 的基础上改写我从前发布在 CPAN 上的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L01ha2VmaWxlLUdyYXBoVml6Lw%3D%3D\">Makefile::GraphViz</a> 模块。现在从任意复杂的 GNU makefile 生成依赖图的 PNG 图片已经是很容易很容易的一件事情了！<br><br>毕竟依赖关系示意图本质上只是\"简单makefile\"的另一种表示形式而已，技术上实现起来极为类似，呵呵。<br><br>但现在－－论文高于一切！<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+makesimple%3a+%e4%bb%8eGNU+makefile%e5%88%b0%e2%80%9c%e7%ae%80%e5%8d%95makefile%e2%80%9d&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Pod::POM::Web","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 12 日<br><br>Found today on <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3BlcmwuY29tLw%3D%3D\">Perl.com</a>:<br><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5vcmVpbGx5bmV0LmNvbS9vbmxhbXAvYmxvZy8yMDA3LzA1L2NwYW5fbW9kdWxlX3Jldmlld19wb2Rwb213ZWIuaHRtbA%3D%3D\">CPAN Module Review: Pod::POM::Web</a><br><br>For years, my schoolmates and I have been relying heavily on my \"viewpod\" script based on Catalyst (Yes,  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy8%3D\">search.cpan.org</a> is slow and way too scattered!). Now there is a better alternative.<br><br>I've\ngiven it a shot in my ubuntu box and it's *really* impressive. Not sure\nabout its Win32 compatibility though. Reports welcome ;)<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Pod%3a%3aPOM%3a%3aWeb&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"从Perl 4到Test::Base","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 11 日<br><br>昨天经过好几个小时的努力，终于完成了<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2N2cy5zYXZhbm5haC5nbnUub3JnL3ZpZXd2Yy9tYWtlL3Rlc3RzL3NjcmlwdHMvP3Jvb3Q9bWFrZQ%3D%3D\">GNU make官方测试集</a>到我的基于 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L1Rlc3QtQmFzZS8%3D\">Test::Base</a> 的<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWRvbS9icmFuY2hlcy9nbWFrZS90L2dtYWtlLw%3D%3D\"> 测试台</a>的自动转换程序p4_to_t.pl：<br><p><br>   <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWRvbS9icmFuY2hlcy9nbWFrZS9zY3JpcHQvcDRfdG9fdC5wbA%3D%3D\">http://svn.openfoundry.org/mdom/branches/gmake/script/p4_to_t.pl</a><br><br>哇，\n440 行Perl 5代码耶，比我想象得长多了，也比我想象得复杂多了……但它也比我想象得有用多了！该脚本已将官方测试集中所有的用Perl\n4写成的测试脚本转换成了对应的 .t 文件，并且其中有 70% 以上的 .t 文件完全通过了GNU make程序的测试。<br><br>其基本原理如下：<br><br>1. 使用 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L1BQSS8%3D\">PPI</a> 模块解析Perl 4测试文件，提取出其中的 Perl 注释（不包括makefile注释！），并将之替换成函数调用形式。比如原文件中的<br><br><span style=\"font-family: courier new,monospace;\">  # Test #1: Test the order-only prerequisites </span><br><br>将被识别并替换成下面这一行：<br><br><span style=\"font-family: courier new,monospace;\">  comment(\"# Test #1: Test the order-only prerequisites\");</span><br><br>其目的在于在翻译后的 .t 文件中也能保留原始文件中的这些注释。而一般情况下Perl注释是无法流过perl解释器的，除非使用source filter. 但source filter本质上也需要对这些注释进行识别和提取。<br><br>值得一提的是，由于 PPI 的当前版本不能处理下面这种形式的 Perl heredoc<br><br><span style=\"font-family: courier new,monospace;\">  print MAKEFILE &lt;&lt;\\EOF;<br>  </span><span style=\"font-family: courier new,monospace;\">all: ; @echo hello</span><span style=\"font-family: courier new,monospace;\"><br>  EOF</span><br><br>所以在把Perl 4源代码喂给 PPI 之前需要用正则替换把上面这几行预处理为下面这种等价形式：<br><br><span style=\"font-family: courier new,monospace;\">  print MAKEFILE &lt;&lt;'EOF';<br>  </span><span style=\"font-family: courier new,monospace;\">all: ; @echo hello</span><span style=\"font-family: courier new,monospace;\"><br>  EOF</span><br><br>我昨天已经发了一封 email 给 PPI 的作者 Alias，报告了该问题。<br><br>2. 给经过注释转换的Perl 4文件加上一个文件头，在这个文件头中提供了GNU make测试驱动提供的那些工具函数的mocking版本，主要包括：<span style=\"font-family: courier new,monospace;\"> rmfiles, utouch, touch, run_make_with_options, compare_output,</span> 和<span style=\"font-family: courier new,monospace;\"> run_make_test</span>. 同时还需要 mock 一下测试文件可能调用到的\"Perl内建函数\"和Perl标准模块，比如<span style=\"font-family: courier new,monospace;\"> unlink</span>和<span style=\"font-family: courier new,monospace;\">Cwd</span>. Mocking像Cwd这样的Perl模块，我用到了<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L1Rlc3QtTW9ja0NsYXNz\">Test::MockClass</a>模块。<br><br>这\n些mocking版本的函数的功能主是让原始的Perl 4测试脚本\"感觉\"自己好像运行在了GNU\nmake官方的测试平台上，但事实上，我的这些函数根本不执行任何测试动作，而是记录下所有的调用历史，特别是参数和上下文变量的值，然后生成一个与\nTest::Base 块/段结构相应的数据结构。<br><br>另外，还需要定义一下测试文件所需的配置变量，比如<span style=\"font-family: courier new,monospace;\">$mkpath, $make_name, $makefile, $delete_command</span>等等。<br><br>文件头中还包括了一个 END 块，用于在测试脚本退出时，从采集到的数据结构生成 Test::Base 格式的 .t 源代码。<br><br>3. 通过  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L0lQQy1SdW4zLw%3D%3D\">IPC::Run3</a> 模块将进行修改的Perl测试脚本喂给perl解释器执行之，并将它的 stdout 输出采集起来，写入到 .t 文件。<br><br>由于官方测试集的格式相当整齐（请参考GNU make团队成员所使用的<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2N2cy5zYXZhbm5haC5nbnUub3JnL3ZpZXd2Yy9tYWtlL3Rlc3RzL3NjcmlwdHMvdGVzdF90ZW1wbGF0ZT9yZXZpc2lvbj0xLjEmcm9vdD1tYWtlJmFtcDt2aWV3PW1hcmt1cA%3D%3D\"> 测试文件模板</a>），所以绝大多数的的测试用例都可以完美地翻译过来，而且质量可以与我手工翻译的质量相媲美。但也有两方面的限制：<br><br>1. 原始测试用例都是上下文有关的，而我的基于 Test::Base 的测试用例都是上下文无关的，即前一个测试的结果和环境不会影响到下一个测试。虽然 p4_to_t.pl 脚本采用了许多技巧自动跟踪和隔离上下文信息，但难免会有一些特殊情况无法跟踪到。<br><br>2. 如果一个测试用例涉及多个 makefile，则无法正确翻译－－事实上此时手工翻译都需要动一翻脑筋的。<br><br>最后欣赏一下直接由p4_to_t.pl脚本生成的全新版的测试集吧（未经过任何手工编辑）：<br><br>   <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWRvbS9icmFuY2hlcy9nbWFrZS9tZWNoX3Qv\">http://svn.openfoundry.org/mdom/branches/gmake/mech_t/</a><br><br>呵呵 :)<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e4%bb%8ePerl+4%e5%88%b0Test%3a%3aBase&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"\"Ant is clumsy\"","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 10 日<br><br>LOL. From the page \"<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5hLWEtcC5vcmcvdG9vbHNfYnVpbGQuaHRtbA%3D%3D\">tools useful for A-A-P</a>\" :<br><dl><dt>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9hbnQv\"><b><span style=\"font-weight: bold;\"></span>Ant</b> </a></dt><dd>    Java based build tool, like make, but uses classes and XML.    Portable over systems, but requires Java.<br>\nWriting a build file in XML file is clumsy. XML is nice for computers\nto parse and produce, not for humans. Flow control is even more clumsy,\nXML is not a scripting language.<br>    Can be used for ideas how recipes work.    </dd></dl>Well, I must say I totally agree but I won't try to advocate make against Ant to those conservative Java programmers ;)<br><br>And...make\n*can* be evil, but not necessary, just like Perl. It depends on the\nmonkeys who are using them, not on the language or the tool itself :) <br><br>So, take care...<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%22Ant+is+clumsy%22&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"毕业设计开发周记（第14周）","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 10 日<br><br>过\n去的一周集中了几乎所有力量于 pgmake-db 的开发，修复了 DOM 解析器、GmakeDB AST 构建器，AST，和 AST\n执行器(runtime) 中的许多 bugs，包括那个曾经让我非常头疼的 double-colon 测试（即 Savannah bug <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzE0MzM0\"> #14334</a>），并且在各个组件中实现了许多重要的 GNU make 特性，包括：<br><p><br>* Pattern rules<br>* Target-specific rules<br>* Order-only prerequisites and normal prerequisites<br>* Phony targets<br><br>* Canned sequence of commands<br>* Command modifiers '@' and '-' and their various combinations<br>* Line-continuations (\"\\\\\\n\") in commands<br><br>* Automatic variables $@, $&lt;, $^, $*, $|, and $+<br>* Verbatim variables defined by the 'define' directive<br>* Simply-expanded variables and recursively expanded variables<br>* Most of the builtin function references<br><br>* -f --file --makefile command line option<br>* -n --just-print --dry-run --recon command line option<br>* -s --silent --quiet command line option<br>* -i --ignore-errors command line option<br><br>* Circular dependency checking<br><br>还有许多特性是我复用的 GNU make 前端\"免费\"提供给我的 pgmake-db 的：<br><br>* Syntax issues like variations of comments, line-continuations outside commands<br>* Variable overridding by the override directive<br>* Variable overridding by the command-line variables<br>* Conditional directives like ifdef/ifeq<br>* Global makefile variable assignment using '+=', '?=', and redefining<br><br>目前已知 GNU make 的数据库输出功能（）存在下列 bugs:<br><br>* Savannah bug  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzIwMDY3\"> #20067</a>: Unescaped meta characters in makefile database outputs<br>* Savannah bug <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzIwMDY5\">#20069</a>: Request for unexport/export info in makefile database outputs<br>* Savannah bug  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzIwMTMz\">#20133</a>: 'make -p' always uses ':=' for pattern-specific variable assignments<br>* Continued commands' leading whitespaces are missing in the DB output<br><br>这\n些 bugs 使得至少 export/unexport 和 Pattern-specific variable assignment\n这两个特性无法实现，阻止了官方测试集中对应的那 2 个测试文件的通过（即 features/export 和\nfeatures/patspecific_vars)。<br><br>目前 GNU make 官方测试集已通过近一半的测试用例（约48%），其中完全通过的测试文件列表如下（共 36 个文件）：<br><br>    features/comments<br>    features/conditionals<br>    features/default_names<br>    features/double_colon<br>    features/echoing<br>    features/errors<br>    features/escape<br>    features/include<br>    features/mult_rules<br>    features/mult_targets<br>    features/order_only<br>    features/override<br>    features/patternrules<br>    features/quoting<br>    features/varnesting<br>    features/vpath2<br>    features/vpathgpath<br>    functions/abspath<br>    functions/addprefix<br>    functions/addsuffix<br>    functions/basename<br>    functions/dir<br>    functions/filter-out<br>    functions/findstring<br>    functions/join<br>    functions/notdir<br>    functions/realpath<br>    functions/substitution<br>    functions/wildcard<br>    targets/PHONY<br>    targets/clean<br>    variables/CURDIR<br>    variables/MAKEFILES<br>    variables/MFILE_LIST<br>    variables/negative<br>    variables/special<br><br>事\n实上，functions/, variables/, 和 targets/\n目录下的不少失败的测试，稍加调整就可以通过，但目前那些测试尚未导入到我的基于 t::Gmake\n的测试台中，故还需要先编写一个自动转换程序。（该程序昨天上午的时候已经在学校图书馆里打好草稿了，呵呵。）<br><br>我自己现有的基于 t::Gmake 的测试集的文件通过率已达到 90% 以上，只有 3 个测试文件失败了，而且其中有两个文件还是因为 GNU make 的 bugs，而不是我的问题 :)<br><br>现在剩下的时间真的不多了……必须得赶快开始写毕业论文了……我晕……今天打算把那个测试集升迁程序准备好，把官方测试集中余下的测试导入到我的测试台中，然后把那些本该通过却未通过的测试调通，这样不费多少气力，就可以进一步地提高测试通过率。<br><br>其\n实现在从我的 Makefile::Parser::GmakeDB 构造的 AST 出发，结合 Makefile::AST::Evaluator\n中的算法，已经可以开发出许多非常有趣的应用了，比如从任意复杂度的 GNU makefile 生成最最简单的只含简单规则的\"基本\nMakefile\"，从而可以为所有其他版本的 make 正确处理，再比如利用类似的技术生成其他非 make 构建工具的配置文件，如 Ant 和\nPBS。另一个例子就是全新版的 Makefile::GraphViz 了，从任意复杂度的 GNU makefile 生成拓朴树的示意图。<br><br>这些应用看起来好像很复杂，但其实从现有的 pgmake-db 各个环节的代码出发，只需要几十行代码就可以搞定！<br><br>可是……我现在缺的只有时间！<br><br>P.S. 毕业论文就用 Perl 6 的 POD 来制作吧！该是在我自己的工作中实用一下 Damian 的 Perl6::Perldoc 模块的时候了！耶！<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e6%af%95%e4%b8%9a%e8%ae%be%e8%ae%a1%e5%bc%80%e5%8f%91%e5%91%a8%e8%ae%b0%ef%bc%88%e7%ac%ac14%e5%91%a8%ef%bc%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"挤进CPANTS前50强","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007年6月5日<br><br>今天在 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2NwYW50cy5wZXJsLm9yZw%3D%3D\">CPANTS</a> 的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2NwYW50cy5wZXJsLm9yZy9rd2FsaXRlZS5odG1s\">Kwalitee</a> 排名列表中看到自己的 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZw%3D%3D\">CPAN</a> ID <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy8lN0VhZ2VudC8%3D\">AGENT</a> 已是第 45 名了： <br><div><div><p><br><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2NwYW50cy5wZXJsLm9yZy9oaWdoc2NvcmVzL21hbnk%3D\">http://cpants.perl.org/highscores/many</a><br><br>而且已经在 chromatic 的前面了，呵呵。<br><br>当然了，这既不是 quantity 也不是真正意义上的 quality，而是 <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2NwYW50cy5wZXJsLm9yZy9rd2FsaXRlZS5odG1s\"> kwalitee</a>，呵呵。<br><br>以后有时间一定把我那些模块中余下的红色区域修复：<br><br><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL2NwYW50cy5wZXJsLm9yZy9hdXRob3IvQUdFTlQ%3D\">http://cpants.perl.org/author/AGENT</a><br><br>这样我就可以达到 100 分了，呵呵。</p></div></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e6%8c%a4%e8%bf%9bCPANTS%e5%89%8d50%e5%bc%ba&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"pgmake-db通过官方测试集的35%","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>2007 年 6 月 5 日<br><br>昨\n天我继续以测试驱动（TDD）方式完善我的基于 Makefile::Parser::GmakeDB 的 pgmake-db 程序，结果在调试\nGNU make 官方测试集中的 features/escape.t 和 features/export.t 的时候遇到了 GNU make\n的 database 输出支持上的两个 bug.<br><p><br>一是 gmake 在输出的 makefile 语法的数据库列表中没有对目标和依赖项中的元字符进行转义，比如 :, \\, 和 #. 该 bug 已作为 Savannah bug  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzIwMDY3\">#20067</a> 报告给了 GNU make 团队。先前我还另外发了一封 email 到 bug-make 邮件组：<br><br><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3d3dy5tYWlsLWFyY2hpdmUuY29tL2J1Zy1tYWtlQGdudS5vcmcvbXNnMDQ2NTAuaHRtbA%3D%3D\">http://www.mail-archive.com/bug-make@gnu.org/msg04650.html </a><br><br>从 GNU make 的“看门人” Paul Smith 的回复中可以看到，没有多少人会将 `make -pq` 命令的输出喂给其他程序（包括 gmake 自己），因此其记法上的合法性并没有经过很好的测试。<br><br>该问题在 gmake 那边尚未修复，我已在本地通过预处理 db 输出的方法绕开了这个 bug.<br><br>二\n是 gmake 生成的 db 输出中缺少 export/unexport 指令的信息，这使得 GmakeDB 模块构造的 AST\n亦缺少这样的信息，从而使得 features/export।t 测试文件暂时无法通过。更糟糕的是没有简单的方法能绕开它。该问题我已经以\nSavannah bug <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cHM6Ly9zYXZhbm5haC5nbnUub3JnL2J1Z3MvPzIwMDY5\">#20069</a> 的形式报告给了 GNU make 团队，目前尚无回复。<br><br>除\n了和 GNU make 的限制角力之外，我还修复了 pgmake-db 中的一些小问题，从而使 Makefile::DOM 的 gmake\n分支中基于 t::Gmake 的测试集的（文件）通过率从 50% 提高到了 60% ~ 70%.余下的拦路虎是\nfeatures/order_only.t 所需的 order only prepreqs 支持和 features/override.t\n所需的 Canned Command Sequences 和 Defining Variables Verbatim\n支持。这些改动都比较大，所以最好还是放到学校图书馆去构思吧，呵呵。<br><br>另外，features/double_colon.t 中还有一个测试在前天跳过了，即 Savannah bug <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NhdmFubmFoLmdudS5vcmcvYnVncy8/MTQzMzQ%3D\">#14334</a>，该行为实现起来相当有难度，但我已想到了一种解决的方法，即该 bug thread 中所说的\"<span>postponing this timestamp propagation until after all individual rules have been updated </span>\".<br><br>昨\n天晚上我还 checkout 了一下 GNU make 的 CVS 源代码仓库，并想办法让官方测试集能运行我的 pgmake-db.\n经过一番努力，终于得到了 35% 的测试通过率。由于官方测试集使用的是 Perl 4 代码，根本未利用现代 Perl 5 基于\nTest::More 的测试台技术，所以它并不适合我进行 TDD. 而且所有的测试脚本都运行在和测试台 Harness 相同的进程中，导致\nulimit 在杀死挂起的测试脚本的同时也杀死了测试台 Harness，从而得不到最后的测试报表。现在已知\nfeatures/patternrules.t 会限入死递归，并吃掉所有内存，另外 functions/sort.t 也很占用 CPU\n时间。这些都有待于后续工作来修复。<br><br>目前官方测试集仅有不到一半的用例移植到了我的基于 t::Gmake\n的测试平台上。这些还是从前我手工进行转换的。昨天晚上我终于想到了一种非常巧妙的自动转换方法，即利用 mocking 的方法运行那些用 Perl\n4 写成的官方测试集脚本，从而采集到所有数据，并生成 Test::Base\n的声明性的用例格式。该方法的优点是可靠、安全、快速，同时也非常容易实现。原先我考虑的转换方法是去解析那些 Perl 4 代码。显然即便是\nPerl 4，其语法也是相当复杂的（使用 <span></span>PPI 也需要许多代码），至于其语义分析那就更加困难了。<br><br>通\n过 mocking 工具函数运行待解析代码，来提取所需信息的技术很像 Perl DSL(Domain Specific\nLanguage)，比如 CPAN 上的 Template::Declare 和 Object::Declare 模块就是\"借用\" Perl\n语言来生成 HTML 或者其他东西。很有些\"借尸还魂\"的味道哦。借用现有的 Perl 语言或者 Perl\n解释器可以大大减少对自定义编译器的需求。无论如何，编写一个解析器都不是轻而易举的事情。<br><br>所有这些有趣的东东都打算今天在图书馆里搞出来。祝我自己好运啦 :)<br><br>P.S. 发送 email 的同时亦能发表博客文章，实在太帅，呵呵。<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+pgmake-db%e9%80%9a%e8%bf%87%e5%ae%98%e6%96%b9%e6%b5%8b%e8%af%95%e9%9b%86%e7%9a%8435%25&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"毕业设计开发周记（第13周）","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div><p>2007年6月4日<br><br>毕业论文交稿日期在即，而我还在努力奋斗，呵呵。 </p><p>几天前刚刚发布了通用事情仿真引擎  <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9wZXJsZG9jP1NpbQ%3D%3D\">Sim</a>  到 CPAN： </p><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9kaXN0L1NpbQ%3D%3D\">http://search.cpan.org/dist/Sim</a> </p><p>可惜与我的毕业设计并无直接关系。  </p><p>这\n两日我正工作在从 GNU make 生成的 makefile 数据库列表解析生成 makefile AST 的\nMakefile::Parser::GmakeDB 以及 AST 库 Makefile::AST 和 makefile 运行时（即 AST\n的执行器） Makefile::AST::Evaluator. </p><p>从最高的尺度上讲，它是一个 gmake 和我的 Makefile\n库所组成的``混血儿''。后端借用了 GNU make 的 C\n实现，完成绝大部分的词法分析和词法分析的任务，以及在那个阶段上完成的执行动作；后端从 AST 开始一直到运行时，都是我自己的 Perl\n代码。中间的对接复用了我的那个``不怎么好的'' Makefile 解析器，即 Makefile::DOM，外加一些 AST\n构造代码，这便构成了 Makefile::Parser::GmakeDB. 所有部分合在一起便是一个比较完整的 make 工具（我已将之命名为\npgmake-db）。 </p><p>我现在正以测试驱动（TDD）方式不断完善 pgmake-db 脚本及相关组件，特别是 AST  的设计及 AST 以后的运行时实现。到写这封邮件的时候为止，我已让 pgmake-db 通过了 50%  以上的 gmake 测试集： </p><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWRvbS9icmFuY2hlcy9nbWFrZS90L2dtYWtlLw%3D%3D\">http://svn.openfoundry.org/mdom/branches/gmake/t/gmake/ </a> </p><p>Makefile::Parser::GmakeDB, Makefile::AST, 和 Makefile::AST::Evaluator 的源代码（gmake-db分支）都位于下面这个位置： </p><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWFrZWZpbGVwYXJzZXIvYnJhbmNoZXMvZ21ha2UtZGIv\">http://svn.openfoundry.org/makefileparser/branches/gmake-db/ </a> </p><p>Makefile::DOM （gmake分支）的源代码位于： </p><p><a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3N2bi5vcGVuZm91bmRyeS5vcmcvbWRvbS9icmFuY2hlcy9nbWFrZS8%3D\">http://svn.openfoundry.org/mdom/branches/gmake/</a> </p><p>  </p><h2><div>短期目标</div></h2> <ul><li> <p>在未来几天中，让 pgmake-db 程序通过 GNU make 90% 以上的测试集（并将官方测试集中未移植到 Test::Base + IPC::Run3 测试台的部分移植过来）。这样就可以得到比较完美的 AST 及 Evaluator 部件了。  </p></li><li> <p>在\n未来两周中对 Makefile::DOM 进行改写，并在之基础上开发 Makefile::Parser::Gmake（可借鉴\nMakefile::Parser::GmakeDB 的一些代码和算法），从而能取代 Makefile::Parser::GmakeDB 而与\nAST 及运行时后端实现对接。 </p></li></ul> <p>  </p><h2><div>长期目标</div></h2> <ul><li> <p>以全新的 AST 和 Evaluator 为基础改写 Makefile::GraphViz 模块，从而使之趋近``完美'' </p></li><li> <p>从全新的 AST 出发，发射 NMAKE, PerlBuildSystem 格式的配置代码。 </p></li><li> <p>从 DOM 出发，发射``地道而无损的'' NMAKE, PerlBuildSystem 格式的配置代码 </p></li><li> <p>为 Makefile::DOM, <a target=\"_blank\" href=\"http://www.mysecrecy.com/index.php?q=aHR0cDovL3NlYXJjaC5jcGFuLm9yZy9wZXJsZG9jP01ha2VmaWxlOjpQYXJzZXI%3D\">Makefile::Parser</a> 以及其他后端部件添加对其他格式的 makefile 的支持（如 NMAKE, BSD make, 和 dmake）  </p></li><li> <p>尝试将 NMAKE 格式的 makefile 翻译到 GNU make 格式 </p></li></ul> <p>短期目标希望能在答辩之前完成，并写进我的毕业论文。长期目标目前看来只能放到毕业之后继续了，呵呵。 </p><p>唉……这学期大部分时间都放在考试复习、找工作和其他的事情上了……所以现在时间紧得不得了。<img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e6%af%95%e4%b8%9a%e8%ae%be%e8%ae%a1%e5%bc%80%e5%8f%91%e5%91%a8%e8%ae%b0%ef%bc%88%e7%ac%ac13%e5%91%a8%ef%bc%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></p></div></div></div>"},{"title":"我又回来了...","date":"Jun 24, 2007 3:33 AM","body":"<div><div class=\"item-body\"><div>我心爱的 agentzh.blogspot.com 被 GFW 掉之后，无奈之下我又回来了。<br><br>人生就是这样充满了无奈……<br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%e6%88%91%e5%8f%88%e5%9b%9e%e6%9d%a5%e4%ba%86...&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"[OT] 搬家了","date":"Jun 4, 2007 3:29 PM","body":"<div><div class=\"item-body\"><div>今天 live.com 慢得直接就点不进去，一气之下，决定搬家 :)<br><br>如今我的博客已搬到了 Google 的 Blogger 上了：<br><br>    <a target=\"_blank\" href=\"http://agentzh.blogspot.com\">http://agentzh.blogspot.com</a><br><br>呵呵，网址比原来用的那个 agentzh.spaces.live.com 还要短一些，耶，好棒！<br><br>而且 Blogger 响应很快，功能丰富，比如支持直接通过电子邮件发表文章，有人发表评论时会自动发送电子邮件提醒我，另外允许匿名访问者发表评论，模板也觉得很漂亮，呵呵。<br><br>我已经通过 email 将这个 live.com 博客中有点儿价值的文章都导入到那个新的主页上去了。欢迎继续关注和发表评论！谢谢！<br><br>大家可以通过 <a target=\"_blank\" href=\"http://agentzh.blogspot.com/feeds/posts/default\">http://agentzh.blogspot.com/feeds/posts/default</a> 在你最喜爱的 RSS 阅读器（比如 Google Reader中）订阅我的新博客 :)<br><br>（说实话，我不太理解为什么身边有这么多朋友使用 live.com……受不了……）<br><br><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+%5bOT%5d+%e6%90%ac%e5%ae%b6%e4%ba%86&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"ulimit++","date":"May 1, 2007 8:21 PM","body":"<div><div class=\"item-body\"><div><div><p>As seen on #perl6:\n\n</p><pre>    &lt;agentzh&gt; oh, if i restrict each ./pugs instance to 100 MB RAM, only 77.25% of the test suite is in green.<br>    &lt;agentzh&gt; when assigning 800 RM, the passing rate returns to the normal level (97.09%)<br>    &lt;agentzh&gt; ulimit is so handy :)<br>    &lt;moritz&gt; ulimit++ ;-)<br>    &lt;TimToady&gt; careful, you might exceed ulimit's karma limit...<br>    &lt;agentzh&gt; lol<br>    &lt;moritz&gt; @karma ulimit<br>    &lt;lambdabot&gt; ulimit has a karma of 1<br>    &lt;gaal&gt; and then what, it'll kill itself? under some beliefs, that lowers its karma<br>    &lt;moritz&gt; what was ulimit's limit again?</pre></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+ulimit%2b%2b&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"三叶草","date":"Apr 30, 2007 12:20 AM","body":"<div><div class=\"item-body\"><div><div>昨天在校园里漫步的时候，偶然间发现路旁的绿地上竟满是我最爱的三叶草。圆圆的叶子是那么娇嫩，那么雅致。我仿佛能觉出一缕淡淡的幽香……<br></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e4%b8%89%e5%8f%b6%e8%8d%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"CPAN is kid-safe? (关于 Ingy 的 XXX 模块)","date":"Apr 20, 2007 11:13 PM","body":"<div><div class=\"item-body\"><div><div><p>As seen on #perl6 recently: </p><pre> &lt;ingy&gt; agentzh: <a target=\"_blank\" href=\"http://rafb.net/p/I2uDsd35.txt\">http://rafb.net/p/I2uDsd35.txt</a><br> &lt;ingy&gt; try running that<br> &lt;agentzh&gt; looking<br> &lt;ingy&gt; you'll see that you can easily inspect all the things you want<br> &lt;agentzh&gt; what is XXX?<br> &lt;ingy&gt; a module<br> &lt;ingy&gt; :P<br> &lt;ingy&gt; it dies with a YAML dump<br> &lt;ingy&gt; it is arguably my most useful module<br> &lt;agentzh&gt; 1..1<br> &lt;agentzh&gt; Can't locate XXX.pm in @INC<br> &lt;ingy&gt; install it<br> &lt;agentzh&gt; wow<br> &lt;agentzh&gt; it's a real module?<br> &lt;ingy&gt; yes<br> &lt;agentzh&gt; awesome<br> &lt;ingy&gt; <a target=\"_blank\" href=\"http://search.cpan.org/CPAN/authors/id/I/IN/INGY/XXX-0.10.tar.gz\">http://search.cpan.org/CPAN/authors/id/I/IN/INGY/XXX-0.10.tar.gz</a><br> &lt;ingy&gt; you can stick an XXX just about anywhere<br> &lt;ingy&gt; also comes with WWW YYY and ZZZ :)<br> &lt;ingy&gt; unfortunately XXX won't index<br> &lt;gaal&gt; CPAN is kid-safe?</pre> <p>不幸的是，就在这段聊天结束以后几个小时，Ingy 在台湾的公路上遭遇了一起严重的交通事故， 现在还在医院里急救。哀心地祝愿 Ingy 能够转危为安，早日康复！</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+CPAN+is+kid-safe%3f+%28%e5%85%b3%e4%ba%8e+Ingy+%e7%9a%84+XXX+%e6%a8%a1%e5%9d%97%29&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Want a commit bit?","date":"Apr 20, 2007 9:13 PM","body":"<div><div class=\"item-body\"><div><div><p>As seen on #perl6 today: </p><pre>  &lt;zxagent&gt; agentzh: hello master<br>  &lt;agentz&gt; zxagent: hello, boy :)<br>  &lt;agentz&gt; zxagent: nice to see you here.<br>  &lt;agentz&gt; zxagent: want a commit bit?<br>  *** zxagent left the room (quit: Remote closed the connection).<br>  &lt;agentz&gt; oops, too late<br>  &lt;TimToady&gt; maybe you scared him off<br>  &lt;agentz&gt; TimToady: *nod*</pre> <p>人物介绍 </p><pre>  TimToady: Larry Wall<br>  zxagent: 我徒儿张星<br>  agentzh: 我</pre> <p>结论 </p><p>我徒弟实在是太有个性啦！</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Want+a+commit+bit%3f&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Custom List: 更多个人信息","date":"Apr 18, 2007 7:43 PM","body":"<div><div class=\"item-body\"><div><p>更多个人信息</p><div><ul><li><p><a target=\"_blank\" href=\"http://use.perl.org/%7Eagent/journal\">我在 Use Perl 上的主页</a></p><p>我们的国际 Perl 博客</p></li><li><p><a target=\"_blank\" href=\"http://agentz.blogchinese.com/\">我从前的博客网站</a></p></li><li><p><a target=\"_blank\" href=\"http://search.cpan.org/%7Eagent\">我的 CPAN 主页</a></p><p>这里是我贡献 Perl 模块的地方</p></li><li><p><a target=\"_blank\" href=\"mailto:agentzh@yahoo.cn\">我的电子信箱</a></p><p>agentzh@yahoo.cn</p></li><li><p><a target=\"_blank\" href=\"http://perlcabal.org/%7Eagentzh/slides/\">幻灯片汇集（PDF,PPT和XUL格式）</a></p><p>我过去的演讲所使用的幻灯片</p></li></ul></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?cid=-55605231330519736&amp;page=RSS%3a+Custom+List%3a+%e6%9b%b4%e5%a4%9a%e4%b8%aa%e4%ba%ba%e4%bf%a1%e6%81%af&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=73329&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"给唐凤的生日礼物","date":"Apr 18, 2007 4:43 PM","body":"<div><div class=\"item-body\"><div><div><p>今天是 <a target=\"_blank\" href=\"http://pugs.blogs.com/audrey/\">唐凤</a> 的生日，真的很开心啊，祝 Audrey 生日快乐！ </p><p>根据&nbsp; <a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-15,Sun&amp;sel=86#l148\">Gaal 的提议</a> ， 这几日我成功地在&nbsp; <a target=\"_blank\" href=\"http://feather.perl6.nl\">feather</a>&nbsp; 服务器上建立了 Pugs 的自动化 smoke 设施， 算作是&nbsp;<a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-18,Wed&amp;sel=67#l133\">给唐凤的生日礼物</a> 。 :D </p><p>现在 feather 上的 cron 程序每隔 24 个小时就会自动运行最新版本的 Pugs 测试集，并生成包含“灵巧链接”的 Perl 6 Synopses 文档： </p><p><a target=\"_blank\" href=\"http://perlcabal.org/syn/\">http://perlcabal.org/syn/</a> </p><p>比如其中的 S04: </p><p><a target=\"_blank\" href=\"http://perlcabal.org/syn/S04\">http://perlcabal.org/syn/S04</a> </p><p>你在其中会看到，我的&nbsp; <a target=\"_blank\" href=\"http://svn.pugscode.org/pugs/util/smartlinks.pl\">smartlinks.pl</a> 程序会将一组一组的测试插入到文档的对应位置上，并根据 Smoke 生成的测试报表，用 <code>√</code> 和 <code>×</code> 在对应的行上，标记每一个特定的测试。 </p><p>唐凤的 Pugs 博客上的几篇文章就是介绍这种 smartlinking 技术的： </p><ul> <li> <p>Integrating the Pugs test suite into the Synopses </p><p><a target=\"_blank\" href=\"http://pugs.blogs.com/pugs/2006/08/integrating_the.html\">http://pugs.blogs.com/pugs/2006/08/integrating_the.html</a>  </p></li><li> <p>Check smoke results while reading Synopses </p><p><a target=\"_blank\" href=\"http://pugs.blogs.com/pugs/2006/09/check_smoke_res.html\">http://pugs.blogs.com/pugs/2006/09/check_smoke_res.html</a>  </p></li><li> <p>The Benefits of Smart Linking </p><p><a target=\"_blank\" href=\"http://pugs.blogs.com/pugs/2006/09/the_benefits_of.html\">http://pugs.blogs.com/pugs/2006/09/the_benefits_of.html</a>  </p></li></ul> <p>前两篇是我写的，第三篇是&nbsp; <a target=\"_blank\" href=\"http://mark.stosberg.com/\">Mark Stosberg</a>&nbsp; 写的。Mark 为我们的 feather 网站做了许多工作： </p><p><a target=\"_blank\" href=\"http://use.perl.org/%7Emarkjugg/journal/30739\">http://use.perl.org/~markjugg/journal/30739</a> </p><p>markstos++ ;) </p><p>在 feather 上运行无人监管的自动化 smoke 在技术上需要一些特别的考虑: </p><ul> <li> <p>cron 自动运行时刻的选择 </p><p>显然应该 smoke 的时间选在 feather 服务器一天当中负载最轻的时候。feather 的主人 Juerd&nbsp;<a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-17,Tue&amp;sel=184#l282\">告诉我</a> 在欧洲中部时间的晚上，一般会比较空闲，而白天 feather 的备份系统会比较地繁忙。因此我就在 crontab 中指定了 CET 1:00 AM.  </p></li><li> <p>CPU 和 RAM 资源的控制 </p><p>由于 Pugs 处于活跃的开发当中，在测试集运行的过程里，有些测试可能会陷入死循环，或者消耗掉所有内存， 而最终挂起或者让系统崩溃。由于 Juerd 并未对 feather 用户的资源进行限制，所以我需要自己使用 nice 和 ulimit 来进行资源限制。利用 nice 可以让 smoke 系统中的进程处于比较低的优先级，从而确保系统的其他用户仍能比较快地获得系统的响应。 而 ulimit 则可以限制 shell 实例中允许使用的总的内存量和 CPU 时间。 </p><p>目前，我为 smoke 系统中的进程分配的 NICE 数为 5 到 10 的样子， 而每一个 ./pugs 进程实例只允许使用最多 800 MB 的虚拟内存和 10 分钟的 CPU 时间。 一旦某个 ./pugs 实例超过了规定的时间或空间限制，系统就会 KILL 掉它，但这并不会中断整个 smoke 过程， 只不过对应的那组测试被标记为失败而已。 </p><p>说实话，nice 和 ulimit 还是&nbsp;<a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-17,Tue&amp;sel=187#l287\">Juerd 向我介绍的</a> 。 惭愧啊，呵呵。 </p><p>将 nice 和 ulimit 结合到一起，我便得到了一个“受限Pugs”，也就是下面这个 limited_pugs 脚本： </p><p><a target=\"_blank\" href=\"http://svn.pugscode.org/pugs/util/limited_pugs\">http://svn.pugscode.org/pugs/util/limited_pugs</a> </p><p>关于其中一些 Bourne Shell 记法，我还&nbsp;<a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-18,Wed&amp;sel=11#l42\">专门请教了</a> #perl6 频道中的高手们。  </p></li><li> <p>cron 活动的监视和诊断 </p><p>令人高兴地是， cron 在指定的时刻自动运行指定的命令的同时会记录下所有的 stdout 和 stderr 输出，并将之发送到我的 Gmail 信箱。 这样，监视和诊断远程 feather 服务器上的 auto-smoke 过程就是轻而易举的事情了。cron++ </p><p>今天早上我已经收到了 feather cron 发送给我的第一份 auto-smoke 的报告。看起来它工作得非常好。Yay!  </p></li></ul> <p></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e7%bb%99%e5%94%90%e5%87%a4%e7%9a%84%e7%94%9f%e6%97%a5%e7%a4%bc%e7%89%a9&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"为什么一个字节是 8 个比特？","date":"Apr 18, 2007 3:43 PM","body":"<div><div class=\"item-body\"><div><div>记得我们班的“超级天才”宝权同志曾在大一学 C++ 的时候问过一个很特别的问题，即“一个字节为什么是 8 个比特？”<br><br>昨晚，我将此问题贴到了 irc.freenode.net 的 #perl6 通道上，Larry Wall (TimToady), jerry gay ([particle]), moritz 参与了讨论。下面是当时的聊天记录（agentzh 就是我啦，呵呵）：<br><br>&lt;agentzh&gt; a friend of mine once asked me why a byte is of 8 bits.<br>&lt;moritz&gt; agentzh: what did you answer?<br>&lt;moritz&gt; agentzh: \"computer scientist love powers of two\"?<br>&lt;agentzh&gt; moritz: i told him because ASCII code has 7 bits and the people want to feel safer and add one more<br>&lt;TimToady&gt; lol<br>&lt;moritz&gt; *g* nice explanation ;-)<br>&lt;agentzh&gt; thanks :D<br>&lt;TimToady&gt; and then the Europeans all added one more, and did we feel safer?<br>&lt;TimToady&gt; I don't think so...<br>* agentzh wants to hear TimToady's explanation.<br>&lt;TimToady&gt; I think the ASCII explanation is basically correct, from a cultural point of view.  When people started programming PDP-11s and doing a lot of string processing, they decided it was convenient that it came close to a power of two, and stuck with it.<br>&lt;TimToady&gt; and it was also fairly obvious about then that the next generation would be 32-bit processors, and then you get 4 chars into it.<br>&lt;TimToady&gt; but I think the powers-of-two argument was kind of a post-facto rationalization of the ASCII culture<br>&lt;TimToady&gt; basically, Pascal and C thought in bytes, so everything else followed along.<br>* TimToady remembers various contortions of trying to rationalize the type system of C on some weird old architectures that were not amenable to bytes...<br>&lt;TimToady&gt; and the term \"byte\" itself had not yet settled on 8 bits<br>* moritz thinks of \"mix\", Donald E. Knuth's assembler, that doesn't rely on a fixed byte size<br>&lt;TimToady&gt; yes.  36-bit computers tended to use 6 bit characters<br>&lt;[particle]&gt; octet is the correct term, but byte has become a synonym<br>&lt;TimToady&gt; byte is now the correct term.  octet will die eventually<br>&lt;TimToady&gt; and go back to being 8 singers.<br>&lt;TimToady&gt; except for in standards documents, where it will likely remain a shibboleth<br><br>原始的聊天记录位于：<br><br><a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-17,Tue&amp;sel=451#l672\">http://colabti.de/irclogger/irclogger_log/perl6?date=2007-04-17,Tue&amp;sel=451#l672</a><br><br>包括上面这段记录的上下文，呵呵。昨天晚上 Larry 真是妙语连珠，Joke 不断啊。不愧是大师级人物……<br><br>章亦春</div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%80%e4%b8%aa%e5%ad%97%e8%8a%82%e6%98%af+8+%e4%b8%aa%e6%af%94%e7%89%b9%ef%bc%9f&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"UML::Class::Simple 的用户反馈","date":"Apr 18, 2007 2:43 PM","body":"<div><div class=\"item-body\"><div><div><p>没想到我发布到  <a target=\"_blank\" href=\"http://search.cpan.org\">CPAN</a>  的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?UML::Class::Simple\">UML::Class::Simple</a> 模块居然得到了用户如此之好的反馈，开心哦： </p><p><a target=\"_blank\" href=\"http://cpanratings.perl.org/dist/UML-Class-Simple\">http://cpanratings.perl.org/dist/UML-Class-Simple</a> </p><p>通过  <a target=\"_blank\" href=\"http://www.google.com\">Google</a> ，我又在世界上找到了两个 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?UML::Class::Simple\">UML::Class::Simple</a> 用户： </p><ul> <li> <p>[Perl] UMLクラス図の自動生成(UML::Class::Simple) </p><p><a target=\"_blank\" href=\"http://usuilog.blogspot.com/2006/12/perlumlumlclasssimple.html\">http://usuilog.blogspot.com/2006/12/perlumlumlclasssimple.html</a> <br> </p><p>这位日本的程序员还在他的博客里为我的这个模块专门写了一篇 review 耶，感动死了；虽然他对我的东东的评价并不是太好。 我在他的文章末尾留了言。  </p></li><li> <p>[Perl] UML::Class::Simple &amp; Catalyst </p><p><a target=\"_blank\" href=\"http://f.hatena.ne.jp/tomyhero/20061107093526\">http://f.hatena.ne.jp/tomyhero/20061107093526</a> </p><p>这位仁兄用我的模块为 Perl 中非常流行的 Web 应用程序框架  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Catalyst\">Catalyst</a>  绘制出了 UML 类图，并贴在了网上。 哈哈，好棒哦。  </p></li></ul> <p>我一定要继续努力，开发出更多更好的 CPAN 模块！耶 ！:D</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+UML%3a%3aClass%3a%3aSimple+%e7%9a%84%e7%94%a8%e6%88%b7%e5%8f%8d%e9%a6%88&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"我对 Perl 6 开发的贡献汇集","date":"Apr 18, 2007 1:43 PM","body":"<div><div class=\"item-body\"><div><div>今天在看网上一篇关于我的评论的时候找到下面这个 URL：<br><br><a target=\"_blank\" href=\"http://groups.google.co.uk/groups?as_ugroup=perl.*&amp;as_uauthors=Agent+Zhang\">http://groups.google.co.uk/groups?as_ugroup=perl.*&amp;as_uauthors=Agent+Zhang</a><br><br>它汇集了有关我在过去一年中对 Perl 6 开发的贡献。可惜我没早些发现它，要不我的简历会更有力一些<div style=\"direction: ltr;\">，呵呵。<br><br>包含了该链接的 use perl 评论也很有趣：<br><br><a target=\"_blank\" href=\"http://use.perl.org/comments.pl?sid=33843&amp;op=&amp;threshold=0&amp;commentsort=0&amp;mode=thread&amp;cid=52032\">http://use.perl.org/comments.pl?sid=33843&amp;op=&amp;threshold=0&amp;commentsort=0&amp;mode=thread&amp;cid=52032</a><br></div></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e6%88%91%e5%af%b9+Perl+6+%e5%bc%80%e5%8f%91%e7%9a%84%e8%b4%a1%e7%8c%ae%e6%b1%87%e9%9b%86&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"解决 RealPlayer 在 ubuntu 中没声音的问题","date":"Mar 26, 2007 1:50 AM","body":"<div><div class=\"item-body\"><div><div>记得一个月前我徒弟就报告过 RealPlayer 在 ubuntu 中光有图像没有声音的问题；没想到现在我自己却撞上了。好在经过反复的 Google，终于找到了下面的解决方法：<br><br> * 首先安装 ALSA OSS 驱动程序：\n<p>$ sudo apt-get install alsa-oss\n</p><p>* 然后编辑启动脚本 (/usr/lib/realplay-10.0.8/realplay) 并将第 73 行从<br></p><p>$REALPLAYBIN “$@”\n</p><p>改成<br>\n</p><p>aoss $REALPLAYBIN “$@”</p><p>对于我自己的 feisty fawn 而言，装的是 RealPlayer 10.0.7 版，需要修改的 realplay 文件中的那行位于第 70 行，而不是 73 行，呵呵。现在播放 .rmvb 文件终于有声音了！好棒哦~~~不必再通过用 VirtualBox 跑 WinXP 来看电影了，呵呵。<br><br></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e8%a7%a3%e5%86%b3+RealPlayer+%e5%9c%a8+ubuntu+%e4%b8%ad%e6%b2%a1%e5%a3%b0%e9%9f%b3%e7%9a%84%e9%97%ae%e9%a2%98&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"毕业设计开发周记（第 3 周）","date":"Mar 25, 2007 9:50 PM","body":"<div><div class=\"item-body\"><div><div><a target=\"_blank\"></a><h3><a target=\"_blank\" href=\"#___top\" title=\"click to go to top of document\">过去一周工作的完成情况</a></h3><p>过去的这一周大部分时间用来找工作了，呵呵。好在工作比想象中的好找， 所以也没有花费我太多的精力。</p><p>这些日子在毕业设计项目上取得了以下进展：</p><ul><li>为 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 开辟了 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/\">gmake-db分支</a>。</li><li>在 GNU make database 的基础上设计出了 GNU make AST 的结构。它由下列几个类组成：<ul><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST.pm\">Makefile::AST</a><p>总的 AST 类，提供节点的添加与查询，比如 <code>add_implicit_rule</code>,<code>apply_implicit_rules</code>,<code>add_explicit_rule</code>,<code>apply_explicit_rules</code>,<code>add_var</code>,<code>add_auto_var</code>,<code>get_var</code>,还有许多其他工具函数，比如计算变量最终值的方法 <code>eval_var_value</code>，有关局部变量作用域 Pad 的 <code>enter_scope</code> 和 <code>leave_scope</code> 方法，等等。</p></li><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Rule/Base.pm\">Makefile::AST::Rule::Base</a><p>它是 AST 中规则节点的基类，包含 <code>normal_prereqs</code>,<code>order_prereqs</code>,<code>commands</code>,<code>colon</code> 这些属性。</p></li><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Rule.pm\">Makefile::AST::Rule</a><p>该类表示非隐式规则以及隐式规则“应用”之后的形式，从 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Rule/Base.pm\">Makefile::AST::Rule::Base</a> 继承，并新增了 <code>target</code> 和 <code>other_targets</code> 属性。</p></li><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Rule/Implicit.pm\">Makefile::AST::Rule::Implicit</a><p>该类表示 AST 中的隐式规则节点，从 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Rule/Base.pm\">Makefile::AST::Rule::Base</a> 继承，并新增了 <code>targets</code>,<code>match_anything</code>,<code>is_terminal</code> 等属性。</p></li><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/StemMatch.pm\">Makefile::AST::StemMatch</a><p>该类封装了含 <code>%</code> 的文件模式的匹配与 stem 替换算法。</p></li><li><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Variable.pm\">Makefile::AST::Variable</a><p>它表示 AST 中的变量节点，包含 <code>name</code>,<code>value</code>,<code>flavor</code>,<code>origin</code> 等属性。</p></li></ul></li><li>添加了 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/t/ast-basic.t\">ast-basic.t</a>,<a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/t/ast-rule.t\">ast-rule.t</a>,<a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/t/ast-var.t\">ast-var.t</a>,和 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/t/ast-stem.t\">ast-stem.t</a> 脚本用于对 AST 及其相关类进行单元测试。</li><li>实现了 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/Parser/GmakeDB.pm\">Makefile::Parser::GmakeDB</a> 类，用于解析由 <code>make -qp</code> 命令生成的 GNU make database，并构造出对应的 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST.pm\">Makefile::AST</a> 对象（即 GNU Make AST）.<p>有趣的是，GNU make 生成的 database 报表也是完全合法的 Makefile 格式，而且只使用最最基本的语法结构，因此 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/Parser/GmakeDB.pm\">Makefile::Parser::GmakeDB</a> 直接使用 <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/lib/MDOM/Document/Gmake.pm\">MDOM::Document::Gmake</a> 进行解析。</p></li><li>实现了 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Evaluator.pm\">Makefile::AST::Evaluator</a> 类，用于按照 GNU make 的语义“执行”给定的 GNU make AST。<p>值得一提的是，包括显隐式规则的应用在内的拓朴图的构建算法其实大部分实现在了 Makefile::AST 及其子节点类中了。</p></li><li>将 <code>`make -pq`</code>,<a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/Parser/GmakeDB.pm\">Makefile::Parser::GmakeDB</a>,和 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Evaluator.pm\">Makefile::AST::Evaluator</a> 三者串联了起来，组装成了一个完整的 <code>make</code> 工具，即 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/script/pgmake-db\">pgmake-db</a>.<p>该工具可以运行基于 IPC 的 GNU make 测试集。目前已通过了 <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/t/gmake/sanity/func-refs.t\">sanity/func-refs.t</a> 测试文件中 95% 以上的测试用例。</p></li></ul><h3><a target=\"_blank\" href=\"#___top\" title=\"click to go to top of document\">下一周的工作计划</a></h3><p>下一周可能没有太多时间用来 hack 了，因为需要应付学校的结欠考试。但是顺着上一周的工作继续往下走应该是很容易的。我立刻能想到的工作有：</p><ul><li>添加 Makefile::AST::Command 类，用于将 Makefile 命令相关的处理封装起来，并为之添加文件名和行号的属性支持(file 和 line).</li><li>为 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/lib/Makefile/AST/Variable.pm\">Makefile::AST::Variable</a> 类添加 file 和 line 属性，以便能通过 func-refs.t 中余下的那些测试。</li><li>让 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/gmake-db/script/pgmake-db\">pgmake-db</a> 通过尽可能多的 GNU make 测试集，同时根据 GNU make Manual 设计更多的有关变量和规则应用的综合测试用例，从而不断地完善 AST 的结构以及 AST 执行组件(evaluator)。</li></ul></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e6%af%95%e4%b8%9a%e8%ae%be%e8%ae%a1%e5%bc%80%e5%8f%91%e5%91%a8%e8%ae%b0%ef%bc%88%e7%ac%ac+3+%e5%91%a8%ef%bc%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"毕业设计开发周记（第 2 周）","date":"Mar 16, 2007 5:58 PM","body":"<div><div class=\"item-body\"><div><div><hr> <h3><div>过去一周计划的完成情况</div></h3> <ul> <li> <p>将已有的基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 的 GNU make 测试集加入到了 Makefile::DOM 模块的&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/\">SVN 仓库</a> 的&nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/\">gmake 分支</a> ，并进行简单的重构： </p><p><a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/t/\">http://svn.openfoundry.org/mdom/branches/gmake/t/</a>  </p></li><li> <p>放弃了整合 Adam Beauchamp 的状态机模式补丁的计划，因为我还是比较喜欢目前的解析策略。  </p></li><li> <p>暂时取消了发布 Makefile::DOM 0.01 的计划。因为 Makefile::DOM 的设计还有许多问题，它的设计与实现均需要 未来用 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 和 GNU make 测试集来进行指引和验证。  </p></li><li> <p>在 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 0.11 的基础上比较完整地实现了下列 GNU make makefile 内建函数： </p><p>subst, patsubst, strip, findstring, filter, filter-out, sort, word, words, wordlist, firstword, lastword, dir, notdir, suffix, basename, addsuffix, addprefix, join, wildcard, realpath, abspath, shell, if, and, or, error, warning, info, foreach </p><p>另外还实现了所谓的“替换引用”(Substitution References)，比如： </p><pre>&nbsp;&nbsp;&nbsp; $(c_files:.c=.o)</pre> <p>它们的实现代码直接添加进了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的 SVN 仓库的&nbsp;<a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/trunk/\">trunk/</a> . </p><p>限于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 旧引擎不支持“递归展开变量”，下列 GNU make 内建函数暂时无法恰当地实现： </p><p>origin, value, call, flavor, and eval </p><p>已支持函数的测试目前放置在 Makefile::DOM 的 gmake 分支中： </p><p><a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/t/gmake/sanity/func-refs.t\">http://svn.openfoundry.org/mdom/branches/gmake/t/gmake/sanity/func-refs.t</a>  </p></li><li> <p>为 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 模块实现了&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/%7Eagent/Makefile-Parser-0.16/script/plmake\">plmake</a>&nbsp; 脚本。 它是基于该模块的 make 命令行工具。该工具使得我可以在实现 GNU make 内建函数的时候运行基于&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/t/Gmake.pm\">t::Gmake</a> 的测试台。TDD 万岁!  </p></li><li> <p>在 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 模块的 POD 文档中简单地提及了全新实现的基本计划，并对其中过时的和不准确的地方进行了更新。  </p></li><li> <p>上述对 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> trunk 的扩展与改进先后以 0.12, 0.13, 0.14, 0.15, 0.16, 和 0.17 版的形式发布到了 CPAN.  </p></li><li> <p>发布了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 的一些更新版本（当前 CPAN 上版本号为 0.16）， 稍稍改进了一下 POD 文档，同时提升了所需的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的最低版本号。  </p></li></ul> <p>  </p><h3><div>下一周及以后的工作计划</div></h3> <ul> <li> <p>继续发挥 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 0.xx 旧引擎的余热， 借助于&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/%7Eagent/Makefile-Parser-0.16/script/plmake\">plmake</a> 实现基本的基于拓仆图的目标更新算法以及一些 GNU make 命令行选项。  </p></li><li> <p>利用&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/%7Eagent/Makefile-Parser-0.16/script/plmake\">plmake</a>&nbsp; 编写 和运行更多的基于&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/t/Gmake.pm\">t::Gmake</a> 的 GNU make 测试，不断改进 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 0.xx 的相关部件。  </p></li><li> <p>利用 GNU make 的 -p 选项（即 --print-data-base 选项）取得它内部的数据库结构信息，以此为基础设计 出下一代 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> （即 1.x.x）所使用的 Makefile AST 结构。  </p></li><li> <p>针对 Makefile AST 设计出纯 Perl 的运行时(Runtime)，同时对 GNU make 进行包装，使之能 作为 makefile AST 生成器来使用。由此可以得到全功能的以 GNU make 为前端的 pgmake， 从而可以运行 GNU make 测试集。 </p><p>以 GNU make 为前端的 pgmake 的使命是为了得到纯 Perl 的 GNU make runtime （或者说是 AST Evaluator)  </p></li><li> <p>另一种复用 GNU make 的技巧是将之用作纯的 Runtime. 具体做法是，从 Makefile AST 发射出 makefile 源代码，它只使用最最基本的 Makefile 语法结构，然后用下面的命令让 GNU make 去执行它： </p><pre>&nbsp;&nbsp;&nbsp; make -Rr -f foo.mk</pre> <p>这儿的 foo.mk 便是 AST Dumper 生成的``基本 Makefile''. </p><p>利用这种技术，我们可以得到以 GNU make 为后端，以 Makefile::DOM 和全新版 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 为前端的 pgmake。同样也可以去运行整个 GNU make 测试集。 </p><p>该版本的 pgmake 的使命是驱动并验证 Makefile::DOM 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 1.x.x 这两个模块的开发工作。  </p></li></ul></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e6%af%95%e4%b8%9a%e8%ae%be%e8%ae%a1%e5%bc%80%e5%8f%91%e5%91%a8%e8%ae%b0%ef%bc%88%e7%ac%ac+2+%e5%91%a8%ef%bc%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"毕业设计开发周记（第 1 周）","date":"Mar 8, 2007 1:06 AM","body":"<div><div class=\"item-body\"><div><div><hr> <p>从现在起，每周三我都将为毕业设计拟定下一周的工作计划，同时对前一周的相关工作进行总结。 </p><p>  </p><h2><div>过去一周已完成的工作</div></h2> <ul> <li> <p>先后发布了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 0.11, 0.12 和 0.13 版，主要是旧内核的例行维护，包括 为  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?gvmake\">gvmake</a>  脚本添加了有用的 -a 选项（从而能绘制 Makefile 中所有的根目标），以及修复了 <a target=\"_blank\" href=\"http://rt.cpan.org/Public/Bug/Display.html?id=24828\">RT bug #24828</a>  和 <a target=\"_blank\" href=\"http://rt.cpan.org/Public/Bug/Display.html?id=15070\">#15070</a> 。  </p></li><li> <p>开发了针对 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Module::Install\">Module::Install</a> 的脚本  <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/util/releng\">releng</a> ， 用于自动化 CPAN 模块发布前繁杂的准备工作。 </p><p>我的 Makefile 项目涉及多个 CPAN 模块，每个模块需要发布的版本又是不计其数，因此 releng 脚本无疑会为我节省大量的时间。  </p></li><li> <p>基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Linux::Smaps\">Linux::Smaps</a> 开发了一个在 Linux 上统计任意 shell 命令所占用的最大内存量的脚本，名为 <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/util/smem\">smem</a> . 测试显示，Ubuntu 的 System Monitor 使用的也是来自 smaps 的内存占用信息。我在该脚本中首次实用了 Perl 的 fork 函数（一直想用都没用上，因为前面一直用的都是 Windows）。 </p><p>鄙视 Linux 内核，因为至今它都没有完整地实现  <a target=\"_blank\" href=\"http://linux.about.com/library/cmd/blcmdl2_getrusage.htm\">getrusage 函数</a> ， 从而使得 GNU time 在 Linux 上只能用来计时。同样的原因，CPAN 上的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?BSD::Resource\">BSD::Resource</a> 在 Linux 上也没有太大的用处。 </p><p>我的 smem 脚本可用于统计 Makefile 项目中各模块的内存占用情况。  </p></li></ul> <p>  </p><h2><div>下一周的工作计划</div></h2> <ul> <li> <p>修改和应用 Adam Beauchamp 今年 1 月 13 日提供的针对 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的补丁到 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/\">SVN 仓库</a> 的 <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/states/\">branches/states/ 分支</a> 。 该补丁将使得 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 内核基于标准的状态机模式。  </p></li><li> <p>在  <a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/branches/states/\">branches/states 分支</a>  成熟以后，将之融合到主流的 trunk/， 然后在不影响 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 测试集的前提下，发布为 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 0.12 版。随后取消 states/ 分支。  </p></li><li> <p>开辟 /branches/refs 分支，以比较完整地实现 GNU make 的函数引用(function reference)和变量引用(variable reference)，主要面向 <a target=\"_blank\" href=\"http://rt.cpan.org/Public/Bug/Display.html?id=18229\">RT bug #18229</a> 。  </p></li><li> <p>在 /branches/refs/ 分支成熟后，融合进主流的 trunk/，并发布新的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 至 CPAN.  </p></li><li> <p>在最近的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 模块的 POD 文档中交代全新实现的基本计划。  </p></li><li> <p>将已有的基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 的 GNU make 测试集加入到 Makefile::DOM 模块的  <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/\">SVN 仓库</a> 的 <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/branches/gmake/\">gmake 分支</a> ，并进行简单的重构： </p><pre>  t/Shell.pm<br>  t/Gmake.pm<br>  t/lib/Test/Make/Gmake.pm<br>  t/lib/Test/Make/Base.pm<br>  t/lib/Test/Make/Util.pm<br>  t/lib/Test/Util.pm<br>  t/gmake/syntax/<br>  t/gmake/features/<br>  t/gmake/...</pre>  </li><li> <p>将新补充的测试用例添加进 Makefile::DOM 的单元测试集，将失败的测试标成``SKIP''，并为各个主要 .pm 文件添加 POD 文档，直至发布该模块的第 一个 CPAN 版本 0.0.1  </p></li><li> <p>编写 newpm 脚本以自动为我创建 .pm 文件的代码和 POD 文档的骨架。  </p></li></ul></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e6%af%95%e4%b8%9a%e8%ae%be%e8%ae%a1%e5%bc%80%e5%8f%91%e5%91%a8%e8%ae%b0%ef%bc%88%e7%ac%ac+1+%e5%91%a8%ef%bc%89&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Makefile 项目的开发计划","date":"Feb 28, 2007 8:26 PM","body":"<div><div class=\"item-body\"><div><div><hr>&nbsp; <h2><div>Makefile::DOM</div></h2> <p>第一阶段的工作将集中在 Makefile::DOM 的开发上。 </p><p>该模块以及其他模块都将遵循“早发布，常发布”的原则，并使用先进的基于&nbsp; <a target=\"_blank\" href=\"http://www.subversion.com/\">Subversion</a>&nbsp; 的&nbsp; <a target=\"_blank\" href=\"http://svk.bestpractical.com/view/HomePage\">SVK 版本控制系统</a> 进行源代码的管理。 </p><p>Makefile::DOM 在&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org\">CPAN</a>&nbsp; 发布的版本号，采用三段数的格式，比如 <code>0.2.12</code>。以此版本号为基础，可将该模块的开发工作分为下列里程碑： </p><ul> <li> <p>0.0.x </p><p>从 0.0.1 开始，实现&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/trunk/lib/MDOM/Document/Gmake.pm\">MDOM::Document::Gmake</a>&nbsp; 模块。它将逐步地支持 GNU make 几乎全部的词法和语法结构，完成相应的 POD 格式的英文文档，以及比较全面的基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 模块的&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/trunk/t/mdom/\">单元测试台</a> 。  </p></li><li> <p>0.1.x </p><p>从 0.1.0 开始，逐步地在 MDOM （即 Makefile::DOM） 的基础上开发出 GNU make 的纯 Perl 实现（名叫 pgmake），从而得以运行&nbsp; <a target=\"_blank\" href=\"http://cvs.savannah.gnu.org/viewcvs/make/tests/?root=make\">GNU make 官方的测试集</a> ，同时完善&nbsp; <a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/trunk/lib/MDOM/Document/Gmake.pm\">MDOM::Document::Gmake</a> ，进而确保并验证 MDOM 自身的完整性。 </p><p>考虑到 GNU make 官方测试集并不是很完整，因此还须根据&nbsp; <a target=\"_blank\" href=\"http://www.gnu.org/software/make/manual/make.html\">GNU make Manual</a>&nbsp; 文档对该测试集进行扩充，以便尽可能多地覆盖 gmake 实际支持的特性集。  </p></li><li> <p>0.2.x </p><p>从 0.2.0 开始，逐步实现 MDOM::Document::Nmake 模块，使得它能支持微软 32 位 NMAKE 几乎全部的词法和语法结构，完成相应的 POD 格式的英文文档，以及比较全面的基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 模块的单元测试台。  </p></li><li> <p>0.3.x </p><p>从 0.3.0 开始，在 MDOM 基础上开发出 NMAKE 的纯 Perl 实现（名叫 pnmake），从而得以运行 NMAKE 测试集，同时完成 MDOM::Document::Nmake，进而确保并验证 MDOM 自身的完整性。 </p><p>由于微软的 NMAKE 不像 GNU make 那样是开源项目，我无法取得 NMAKE 官方的测试集，故必须按照 MSDN 网站上的&nbsp; <a target=\"_blank\" href=\"http://msdn2.microsoft.com/en-us/library/dd9y37ha.aspx\">NMAKE Reference</a>&nbsp; 文档自主设计测试用例。  </p></li><li> <p>0.4.x </p><p>将 GNU make 和 MS NMAKE 对应的基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?IPC::Run3\">IPC::Run3</a> 的测试集转换为针对 MDOM 的高度可移植的轻量级测试集。  </p></li><li> <p>0.5.x 及其以后版本 </p><p>不断完善文档，不断修复自己发现的和其他用户报告的 bug，不断根据用户需求完善接口和实现。  </p></li></ul> <p>Makefile::DOM 的 SVN 仓库位于下面的位置： </p><p><a target=\"_blank\" href=\"http://svn.openfoundry.org/mdom/\">http://svn.openfoundry.org/mdom/</a> </p><p>其结构分为 trunk （主干）和若干个 branches （分支）。主干是主流的版本；CPAN 发布总是从主干产生。而各个分支主要用于试验和演化新特性，待成熟后才``融合''回主干中去。融合工作可以由 SVK 自动完成（利用 SVK 的 smerge 命令）。反过来，主干中的更新，借助于 SVK，也可以轻易地融合到各个分支中去。 </p><p>本模块计划拥有以下分支： </p><ul> <li> <p>/branches/gmake </p><p>用于开发 Perl 版本的 GNU make 实现，pgmake，并将包含基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?IPC::Run3\">IPC::Run3</a> 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 的 GNU make 测试集。 </p><p>pgmake 和使用了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?IPC::Run3\">IPC::Run3</a> 的测试集将永不融入 <em>/trunk</em>，但将成为新一代 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的 Gmake 部分的原型（prototype）。 </p><p>该分支从 Makefile::DOM 0.1.x 起启用。  </p></li><li> <p>/branches/nmake </p><p>用于开发 Perl 版本的 NMAKE 实现，pnmake，并将包含基于 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?IPC::Run3\">IPC::Run3</a> 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 的 NMAKE 测试集。测试台框架将复用 /branches/gmake 中的 GNU make 测试台脚手架。 </p><p>类似地，pnmake 和基于 IPC 的测试集将永不融入 <em>/trunk</em>，但将成为新一代 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的 Nmake 部分的原型。 </p><p>该分支从 Makefile::DOM 0.3.x 起启用。  </p></li></ul> <p>  </p><h2><div>Makefile::Parser</div></h2> <p>  </p><h3><div>历史遗留的旧实现</div></h3> <p><a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 一年多以前发布在 CPAN 上的 0.11 版的旧实现仍将继续演化。其中的改进内容，主要包括： </p><ul> <li> <p>整合 Adam Beauchamp 提供的基于状态机设计模式的补丁。  </p></li><li> <p>修复一个用户在 RT 中&nbsp; <a target=\"_blank\" href=\"https://rt.cpan.org/Ticket/Display.html?id=18229\">报告的bug</a> ，提供对 GNU make 函数引用的支持。  </p></li><li> <p>简单介绍新一代 Makefile::Parser 的开发现状和蓝图。  </p></li></ul> <p>这些将以 0.xx 的版本号发布到 CPAN。 </p><p>  </p><h3><div>全新版本的实现</div></h3> <p>全新的实现将基于 Makefile::DOM，并保持接口的向下兼容。由于旧实现同时支持 GNU make 和 NMAKE 的常用语法，故要实现向后兼容，必须实现 Makefile 格式的自动识别。最简单的做法也许是先尝试用 Makefile::Parser::Gmake 进行处理，如果出现错误，就改用 Makefile::Parser::Nmake. 至于该做法的实际效果如何，只有留待实践的检验了。 </p><p>基于 CPAN 发布的版本号的里程碑列表如下： </p><ul> <li> <p>1.0.x_01 </p><p>它们将整合 Makefile::DOM 的 /branches/gmake 分支的实现。版本号中的 <code>_01</code> 后缀将之标识为``Developer Release''；一般的 CPAN 升级工具将会忽略这样的发布，从而不致于突然破坏向下兼容。  </p></li><li> <p>1.1.x_01 </p><p>它们将整合 Makefile::DOM 的 /branches/nmake 分支的实现代码。  </p></li><li> <p>1.2.x </p><p>它们将首次实现向下兼容，从而是 <code>1.0.0_01</code> 以来第一批 CPAN 正式发布版。  </p></li><li> <p>1.3.x </p><p>该系列将致力于把基于 IPC 的测试集转换为非 IPC 的版本，从而提高效率，增加可移植性。关于测试集可移植性的一个关键子项目是 Bourne Shell 的仿真。毕竟像 Win32 这样的平台，<em>/bin/sh</em> 一般是没有的。  </p></li></ul> <p><a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的 SVN 仓库位于： </p><p><a target=\"_blank\" href=\"http://svn.openfoundry.org/makefileparser/\">http://svn.openfoundry.org/makefileparser/</a> </p><p>未来该仓库将像 Makefile::DOM 那样分为 trunk 和若干个 branches. </p><p>  </p><h2><div>Makefile::GraphViz</div></h2> <p>与 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 类似，CPAN 上已有的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 实现将以 <code>0.xx</code> 的形式继续演化一段时间。这些发布将着力解决 Ken Williams 于几周前报告的那个有关 <code>plot_all</code> 方法的 bug: </p><p><a target=\"_blank\" href=\"http://rt.cpan.org/Ticket/Display.html?id=24828\">http://rt.cpan.org/Ticket/Display.html</a> </p><p>从 <code>1.00</code> 开始，它将使用 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> <code>1.2.x</code> 及其以上版本。 </p><p>  </p><h2><div>Makefile::Compiler</div></h2> <p>该模块将支持 GNU make 和 MS NMAKE 两种格式的 Makefile 作为输入；输出将支持&nbsp; Java 的 ANT，CPAN 上的 PBS，以及 GNU make 和 NMAKE 自身。该模块在早期将从 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 产生的 AST 发射目标代码。该做法实现起来非常简单，虽然无法得到很``地道''的翻译，但却是``足够好的''。 </p><p>有关该模块的计划目前无法确定下来，因为它强烈地依赖前几个模块的成果和经验。</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Makefile+%e9%a1%b9%e7%9b%ae%e7%9a%84%e5%bc%80%e5%8f%91%e8%ae%a1%e5%88%92&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Makefile 项目的组成","date":"Feb 7, 2007 7:14 PM","body":"<div><div class=\"item-body\"><div><div><hr> <p>该项目将由下列三部分组成： </p><dl> <dt><strong></strong><div><strong>Makefile::DOM</strong><dd> <p>该模块将 Makefile 视为“文档”进行“无损”的解析，生成类似 DOM 的树形结构。DOM 树中将保留原输入文件中的所有信息，包括空格、空行、注释等。这意味着，从 DOM 树可以还原出原始的 Makefile 文件。另外 DOM 树自身的每个节点甚至整体都是可修改的，就像&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>&nbsp; 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?HTML::TreeBuilder\">HTML::TreeBuilder</a> 那样。  </p></dd><dd> <p>Makefile::DOM 的接口完全模仿了&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>&nbsp; 的 API 设计。事实上，我直接照搬了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Node\">PPI::Node</a>, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Element\">PPI::Element</a>, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Dumper\">PPI::Dumper</a> 的源代码和 POD 文档（此举已得到&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>&nbsp; 的作者 Adam Kennedy 的完全许可）。  </p></dd><dd> <p>Makefile::DOM 被设计成与具体的 Makefile 语法无关。同一套 DOM 节点类型将在不同格式的 Makefile DOM 生成器之间共享，比如， <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/makefileps/lib/MDOM/Document/Gmake.pm\">MDOM::Document::Gmake</a>&nbsp; 负责对 GNU Makefile 进行解析，返回 MDOM::Document 类的实例（即 DOM 树的根）；而 NMAKE Makefile 的解析器 MDOM::Document::Nmake 亦返回 MDOM::Document 类的实例。日后，还将考虑添加对 dmake 和 bsdmake 的支持。  </p></dd><dd> <p>目前 MDOM::Document::Gmake 已初具雏形，下面要做的就是添加遗漏的节点类型和进行综合测试。  </p></dd><dd> <p>测试 Makefile::DOM 最好的方法就是在其基础之上，开发出完整的 make 工具，然后通过对应 make 工具的测试集。比如，测试 MDOM::Document::Gmake 最好的方法就是利用它实现一个 pgmake 脚本，然后去跑 GNU make 官方测试集。类似地，我也需要开发出 pnmake 脚本。   </p></dd><dt><strong></strong><div><strong>Makefile::Parser</strong><dd> <p>全新的 Makefile::Parser 实现不会在 API 上进行太大的改动。换言之，新版本的接口仍将基本按照&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/%7Eagent/Makefile-Parser-0.11/lib/Makefile/Parser.pm\">0.11版</a>&nbsp; 也即&nbsp; <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Make\">Make</a>&nbsp; 模块的接口来设计。尽管如此，我仍会根据需要，对 API 进行扩展和补充。  </p></dd><dd> <p>Makefile::Parser 的任务在于，从 make 工具的视角，对 Makefile DOM 树进行深层的语法分析和语义脱糖。这意味着，得到的 AST 必然是“有损”的，而且必然包含了当前环境中的信息。这些环境信息包括系统中的环境变量设置、命令行选项、命令行传递的 Makefile 变量值、甚至磁盘文件的当前状态等。这种环境信息的依赖意味着 Makefile::Parser 并不适合进行严格意义上的 Makefile 翻译与转换工作。真正的翻译与转换要求 AST 是与上下文无关的，因此必须从 Makefile::DOM 出发重新开始。  </p></dd><dd> <p>Makefile::Parser 的用途很多，比如对 Makefile 中的依赖关系进行可视化（典型的应用就是 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 这样的模块）。另外就是进行一些实用主义的翻译。当需要转换的 Makefile 并未使用强烈依赖于上下文的高级特性的时候，从 Makefile::Parser 产生的 AST 出发已经可以得到相当令人满意的翻译了。   </p></dd><dt><strong></strong><div><strong>Makefile::GraphViz</strong><dd> <p>下一代的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 将基于 Makefile::DOM 和全新的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a>，同时保持向后兼容。   </p></dd><dt><strong></strong><div><strong>Makefile::Compiler</strong><dd> <p>该模块就是进行不同格式 Makefile 之间的转换，以及将某一种格式的 Makefile 转换成其他非 make 项目管理工具的配置文件，比如 PerlBuildSystem, Rake, 和 Ant.  </p></dd><dd> <p>正如前面提到的，这里最简单的做法就是从 Makefile::Parser 生成的“有损” AST 出发，进行代码生成。但是通过这种方式得到的目标代码强烈地依赖于进行翻译时刻的系统上下文，影响目标代码的通用性和可移植性。尽管如此，对于许多足够简单的 Makefile 而言，种用这种方法生成的目标代码已经足够好了。幸运的是，现实世界中的大部分 Makefile 都是足够简单的。  </p></dd><dd> <p>更完美的翻译方式当然是从最底层的 DOM 树出发，按照类似“程序形式化证明”的方法进行复杂的 AST 变换。利用此种手段可以得到相当“地道“的目标代码，其质量接近人类手写的代码，但是 AST 变换算法可能会极端复杂。届时可以考虑使用像属性文法这样的工具（<a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Language::AttributeGrammar\">Language::AttributeGrammar</a>）。  </p></dd><dd> <p>在实际翻译中，有一个很重要的问题就是如何处理 Makefile 中内联的 shell 命令。毕竟任何一个 Makefile 文件中都包含至少两种“语言”：Makefile 本身的记法，以及命令中的 Shell 记法。比如 GNU makefile 中的 cp, mv 在 NMAKE makefile 中就不应当出现。这意味着，Makefile::Compiler 可能还得实现一个 shell 转换器以完成不同 shell 之间的编译工作……   </p></dd></div></dt></div></dt></div></dt></div></dt></dl></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Makefile+%e9%a1%b9%e7%9b%ae%e7%9a%84%e7%bb%84%e6%88%90&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Makefile 项目的历史与背景","date":"Feb 7, 2007 4:00 PM","body":"<div><div class=\"item-body\"><div><div><hr>在大三上学期的时候，即 2005 年国庆前后，我正在为我的计算机组成的课程设计项目  <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/salent/\">Salent</a>  准备 <a target=\"_blank\" href=\"http://perlcabal.org/%7Eagentzh/salent/doc/report.html\">报告</a> 用的素材。那时我就想到从 Salent 项目自身的  <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/salent/idu/Makefile\">Makefile</a>  自动生成项目的 <a target=\"_blank\" href=\"http://search.cpan.org/src/AGENT/Makefile-GraphViz-0.10/samples.html\">构造流程图</a> 。毕竟 Makefile 文件中已经包含了项目文件间的依赖关系，以及从各组依赖项生成对应目标的 Shell 命令。 <p>在这个应用中，我需要一个 Makefile 解析器以及一个有向图的示意图生成器。至于后者，AT&amp;T 免费的  <a target=\"_blank\" href=\"http://www.graphviz.org/\">GraphViz</a>  库可以很好地胜任。至于前者，我进行了大量的网络搜索。我试用了  <a target=\"_blank\" href=\"http://search.cpan.org\">CPAN</a>  上的  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Make\">Make</a>  模块，但它不能很好地支持  <a target=\"_blank\" href=\"http://msdn2.microsoft.com/zh-cn/library/dd9y37ha%28VS.80%29.aspx\">NMAKE</a>  语法的 Makefile，于是我就针对 Salent 项目的 Makefile 所使用的特性，同时综合了  <a target=\"_blank\" href=\"http://www.gnu.org/software/make/\">GNU make</a>  的一些常用特性，自主开发了 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 模块，并发布到 CPAN。 </p><p>很快地，以 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 为基础，我推出了从 Makefile 自动生成构造流程图的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::GraphViz\">Makefile::GraphViz</a> 模块。 </p><p>有趣的是，CPAN 上也有一个所谓的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?GraphViz::Makefile\">GraphViz::Makefile</a> 模块。和我的不同的是，该模块是基于前面提到的  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Make\">Make</a>  模块的。因此与我的库实际上构成了``竞争''关系。 </p><p>在随后的几周内，我开始根据  <a target=\"_blank\" href=\"http://www.gnu.org/software/make/manual/make.html\">GNU make 手册</a> ，向我的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 不断地添加新特性。但我很快发现，已有的框架变得越来越难于扩展，根本无法胜任 gmake 庞大的特性集。因此当 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 0.11 发布之后，我就放弃了旧的代码基础，开始另起炉灶了。 </p><p>2006 年的冬天，我开始仔细阅读  <a target=\"_blank\" href=\"http://www.gnu.org/software/make/manual/make.html\">GNU make 手册</a> ，并着手将 gmake  <a target=\"_blank\" href=\"http://cvs.savannah.gnu.org/viewcvs/make/tests/?root=make\">自身的测试集</a> 移植到我自己的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 项目中来，以便采用测试驱动的方法来创建全新的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 实现。 </p><p>虽然 gmake 官方的测试台亦是用 Perl 开发的，且亦可作用于任意的 make 可执行文件，但是它却使用的是过时的 Perl 4 语言，并大量调用了 sh, diff 等特定于 *NIX 的工具，从而变得高度不可移植。所以我才下决心使用现代的 Perl 5 自动化测试框架 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 对 gmake 已有的测试集进行改写，以期达到下列目标： </p><ul> <li> <p>可以不加修改地运行在 Win32, Cygwin, FreeBSD, NetBSD, OpenBSD, Linux, Solaris, Mac OS X 等多种类型操作系统上。  </p></li><li> <p>测试用例采用声明性的记法，保证可读性、清晰性和简洁性。  </p></li><li> <p>易于扩展，并可用于编写针对其他 make 工具（如 nmake, dmake, bsdmake）的测试集  </p></li><li> <p>易于配置，可以指定任意的 shell 命令行作为 make 测试对象  </p></li></ul> <p>为了确保新的 gmake 测试集的可移植性，我自己用纯 Perl 开发了一个  <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/makefileps/script/sh\">Bourne Shell 虚拟机</a> 。毕竟，Windows 的 Shell 语法和行为与  <a target=\"_blank\" href=\"http://www.answers.com/bourne_shell\">Bourne Shell</a>  是如此地不同。另外，其他系统中默认的 shell 也有可能是像  <a target=\"_blank\" href=\"http://www.answers.com/c_shell\">csh</a>  这样的东西。由于该 sh 虚拟器是为 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 的测试集服务的，因此只需要实现 Bourne Shell 特性的一个很小的子集，即 gmake 测试用例中实际使用到的特性集。 </p><p>目前，gmake 测试集的转换工作正在进行中，您可以从下面的位置看到已完成转换的 gmake 测试脚本： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/makefileps/t/gnu/\">http://svn.berlios.de/svnroot/repos/makefileps/t/gnu/</a> </p><p>从那以后，迫于江大日益繁重的课业负担，<a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 一直进展缓慢。在过去的一年中，有许多人向我表达了各种各样有趣的需求，这驱使我不断地调整项目的设计与目标。 </p><ul> <li> <p>AT&amp;T 用户 Billy Patton 向我表达了他的一个有趣的需求：他希望能通过编程方式，读取一个 Makefile 文件，然后进行一些修改，再写回磁盘。他说，他希望通过 GUI 菜单来帮助没有 Makefile 使用经验的用户来操纵 Makefile。这个需求意味着，读取 Makefile 的过程必须是``无损''的，即我的库不可以扔掉包括注释、空行在内的任何东西，同时我还必须提供相应的接口将修改过的 Makefile AST 写回磁盘，即提供一种 Makefile Writer。  </p></li><li> <p>Gurets Maxim 通过  <a target=\"_blank\" href=\"http://rt.cpan.org\">CPAN RT</a>  向我 <a target=\"_blank\" href=\"http://rt.cpan.org/Public/Bug/Display.html?id=15071\">传达了</a> 这样一个需求：他希望看到 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 拥有 GNUMake, NMake, BSDMake 等多个子类，从而能解析各种已知格式的 Makefile. 他认为现有的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 实现将 NMAKE 和 GNU make 的特性杂糅在一起的做法并不可取。我表示赞同，因为 NMAKE 和 gmake 在行为上有许多矛盾之处。  </p></li><li> <p>微软公司 Unix 互操作团队的 Madhuri Mandava 和  <a target=\"_blank\" href=\"http://pugscode.org/\">Pugs</a>  团队的 Christopher Malon 更乐衷于看到将 NMAKE 的 Makefile 转换为 gmake 格式的 Makefile，或者相反。这种需求要普遍得多，毕竟有太多太多基于 Linux 的开源项目需要移植到 Win32，而 Makefile 的翻译往往是很重要的组成部分。比如我自己就曾经吃力地将  <a target=\"_blank\" href=\"http://judy.sourceforge.net/\">Judy 库</a> 的 Makefile 翻译为 NMAKE 接受的版本－－唔，那可真是枯燥之极。  </p></li><li> <p>这个世界上除了 make 还有许多其他的项目构造和管理工具，比如 Ruby 世界里的  <a target=\"_blank\" href=\"http://rake.rubyforge.org/\">Rake</a> ， Java 里的 Ant，以及 CPAN 上的  <a target=\"_blank\" href=\"http://khemir.net/%7Enadim/pbs_pnw_2004/index_slide.html\">PerlBuildSystem (PBS)</a>  。PBS 的作者之一，瑞典的 Nadim Khemir 和我一直保待着通信联系。他非常希望看到，gmake 等其他 make 工具的 Makefile 文件能通过我的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> 或者类似的东西，自动地转换为 PBS 自己的配置文件 (pbsfile)。</p></li><li><span style=\"color: rgb(0, 104, 28);\"></span><span style=\"font-weight: normal;\"></span> Adam Beauchamp 用标准的状态机设计模式对我的 Makefile::Parser 0.11 进行了改写，并通过了我所有的回归测试。可惜的是，他工作在了一个早已废弃了的实现上，但是他的想法真的很有趣。经过他改写的版本看上去更加“面向对象”了，而且原先极为臃肿的 parse 方法也变得简洁了许多。我对他的方式的唯一顾虑就是执行效率。<br></li></ul> <p>在 Nadim Khemir 的大力推动下，我于大四上学期的前一两个月，启动了  <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/makefileps/t/mdom/gmake.t\">Makefile::DOM</a>  项目。该项目受 Adam Kennedy (Alias) 的  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>  模块的启发，将 Makefile 视为“文档”而非程序进行解析，解析的结果是一棵类似 DOM 的树型数据结构。该项目由于能无损地对 Makefile 进行解析，故可以很好地满足前面 Billy Patton 等人的需求。从 DOM 树写回 Makefile 也是极容易的。同时 Makefile::DOM 亦可作为其他所有需求及应用的基础，因为它实际上完成的是 Makefile 的词法分析以及一部分简单的语法分析任务。 </p><p>Makefile::DOM 的进展非常迅速，目前已经支持了 Gnu Makefile 的大部分语言结构。我以为至少 0.0.1 版已经可以在近期发布到 CPAN 了。</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Makefile+%e9%a1%b9%e7%9b%ae%e7%9a%84%e5%8e%86%e5%8f%b2%e4%b8%8e%e8%83%8c%e6%99%af&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"KB - VRG 知识库简介","date":"Feb 6, 2007 8:59 PM","body":"<div><div class=\"item-body\"><div><div><h1><a target=\"_blank\">NAME</a></h1><p>KB - VRG 知识库简介</p><p></p><hr><h1><a target=\"_blank\">AUTHOR</a></h1><p>Agent Zhang (章亦春) &lt;<a target=\"_blank\" href=\"mailto:agentzh@gmail.com\">agentzh at gmail dot com</a>&gt;</p><p></p><hr><h1><a target=\"_blank\">VERSION</a></h1><pre>   Maintainer: Agent Zhang &lt;agentzh at gmail dot com&gt;<br>   Date: 26 Dec 2006<br>   Last Modified: 26 Dec 2006<br>   Version: 0.01</pre><p></p><hr><h1><a target=\"_blank\">DESCRIPTION</a></h1><p>这篇文档将简要地介绍一下 VRG 立体几何定性证明系统的知识库。如果您对 VRG 项目还不熟悉，请先阅读该项目的 <a target=\"_blank\" href=\"http://agentzh.spaces.live.com/blog/cns%21FF3A735632E41548%21138.entry\">Overview</a> 文档。:)<br></p><p></p><hr><h1><a target=\"_blank\">记法约定</a></h1><p>VRG 知识库使用 XClips 语言进行描述。为方便起见，在本文档中的规则和事实示例亦使用 XClips 记法。VRG 定义了如下的特有运算符：</p><ul><li><p>前缀 (prefix) <code>\\</code> 表示谓词名 <code>line</code>，例如 <code>\\a</code> 等同于 <code>line(a)</code>.</p></li><li><p>前缀 <code>#</code> 表示谓词名 <code>plane</code>，例如 <code>#alpha</code> 等同于 <code>plane(alpha)</code>.</p></li><li><p>中缀 (infix) <code>T</code> 等同于谓词名 <code>orthogonal</code>，表示正交或者垂直关系。</p></li><li><p>中缀 <code>//</code> 等同于谓词名 <code>parallel</code>，表示平行关系。</p></li><li><p>中缀 <code>X</code> 等同于谓词名 <code>cross</code>, 表示既不平行也不垂直的关系（在 VRG 内部术语中，称此种关系为 “斜交关系”）。</p></li><li><p>中前缀 (infix-prefix) <code>~</code> 表示谓词名前缀 <code>not_</code>, 例如 <code>a [~//] b</code> 等价于<code>space_not_parallel(a, b)</code>.</p></li><li><p>中包围缀 (infix-circumfix) <code>[ ]</code> 表示立体几何空间中的关系，比如 <code>a [//] b</code> 就等同于谓词<code>space_parallel(a, b)</code>，而 <code>a [T] b</code> 就等同于谓词 <code>space_orthogonal(a, b)</code>.</p></li><li><p>中包围缀 <code>&lt; &gt;</code> 表示向量空间中的关系，例如 <code>a &lt;//&gt; b</code> 等价于谓词<code>vector_parallel(a, b)</code>, 而 <code>a &lt;~T&gt; b</code> 则等价于谓词 <code>vector_not_orthogonal(a, b)</code>.</p></li></ul><p>特别地，以问号 (<code>?</code>) 起始的标识符为 XClips 变量，如 <code>?alpha</code>, <code>?m</code> 之类；否则为常量，如<code>beta</code> 和 <code>l</code>.</p><p>变量一般用于规则，而常量一般出现在事实中。</p><p>这些其实都是 XClips 语言的语法。有关 XClips 语言的更多信息，请参见我的``Introduction to XClips''讲座的幻灯片：</p><p><a target=\"_blank\" href=\"http://perlcabal.org/%7Eagentzh/slides/xclips/xclips.pdf\">http://perlcabal.org/~agentzh/slides/xclips/xclips.pdf</a></p><p></p><hr><h1><a target=\"_blank\">知识库的建模对象</a></h1><p>VRG 知识库大体上可以分为三个部分，一是在立体几何空间中的推理，二是向量空间中的推理，三是在这两个空间之间的关系映射。</p><p></p><h2><a target=\"_blank\">立体几何空间</a></h2><p>在立体几何空间中，基本的研究对象是空间直线和平面这两种立体几何元素以及它们之间的关系。这些关系包括</p><p></p><h3><a target=\"_blank\">二元关系</a></h3><dl><dt><strong><a target=\"_blank\">线线关系</a></strong></dt><dd><p>对于线线关，VRG 仅处理线线关系中的平行关系，垂直关系，斜交关系，以及它们的衍生关系，例如不平行，不垂直，不斜交等等。</p></dd><dt><strong><a target=\"_blank\">线面关系</a></strong></dt><dd><p>VRG 仅处理线面关系中的线面平行，线面垂直，线面斜交，线在面上，以及它们的衍生关系，例如线面不垂直，线不在面上等等。</p></dd><dd><p>比如：</p></dd><dd><pre>    /* line a is parallel to line b */</pre></dd><dd><pre>    \\a, \\b, a [//] b.</pre></dd><dd><pre>    /* line c is perpendicular to line d */</pre></dd><dd><pre>    \\c, \\d, a [T] b.</pre></dd><dd><pre>    /* line e is not parallel to line f */</pre></dd><dd><pre>    \\e, \\f, e [~//] f.</pre></dd><dt><strong><a target=\"_blank\">面面关系</a></strong></dt><dd><p>VRG 仅处理面面关系中的面面平行，面面垂直，面面斜交，以及它们的衍生关系，例如面面不平行等等。</p></dd><dd><p>比如：</p></dd><dd><pre>    /* line l is parallel to plane alpha */</pre></dd><dd><pre>    \\l, #alpha, l [//] alpha.</pre></dd><dd><pre>    /* line a is perpendicular to plane beta */</pre></dd><dd><pre>    \\a, #beta, a [T] beta.</pre></dd></dl><p></p><h3><a target=\"_blank\">三元关系</a></h3><dl><dt><strong><a target=\"_blank\">线线相交于一点</a></strong></dt><dd><p>比如下面这条事实</p></dd><dd><pre>    \\a, \\b, meet(a, b, A).</pre></dd><dd><p>便指示了直线 a 和直线 b 相交于点 A.</p></dd><dt><strong><a target=\"_blank\">线在面上的投影</a></strong></dt><dd><p>该关系是指，一条直线在一个平面上的投影是另一条直线（或点）</p></dd><dd><p>下面这条 XClips 事实</p></dd><dd><pre>    \\a, #A, \\b, project(a, A, b).</pre></dd><dd><p>就指明了直线 a 在平面 A 上的投影是 b.</p></dd><dt><strong><a target=\"_blank\">线面相交于一点</a></strong></dt><dd><p>比如下面这条事实</p></dd><dd><pre>    \\a, #alpha, meet(a, alpha, P).</pre></dd><dd><p>指示直线 a 与平面 alpha 相交点 P.</p></dd></dl><p>VRG 在立几空间中的推理任务主要是将复杂的关系分解为基本关系，或者将基本关系合成为复杂关系。</p><p></p><h2><a target=\"_blank\">向量空间</a></h2><p>向量是立体几何元素的抽象表示。从数学语义上讲，立几空间中的平面在向量空间中对应其“法向量”，而立几空间中的直线在向量空间中对应其“方向向量”。</p><p>向量空间中的关系演绎是整个证明系统的核心。VRG 正是通过从已有的向量关系推出新的向量关系，来间接地从已有的几何关系推出新的几何关系的。</p><p>在向量空间中仅讨论下列关系：</p><dl><dt><strong><a target=\"_blank\">平行关系</a></strong></dt><dd><p>例如</p></dd><dd><pre>    a &lt;//&gt; b</pre></dd><dd><p>表示向量 a 与向量 b 平行。</p></dd><dt><strong><a target=\"_blank\">垂直关系</a></strong></dt><dd><p>例如</p></dd><dd><pre>    a &lt;T&gt; b</pre></dd><dd><p>表示向量 a 与向量 b 垂直。</p></dd><dt><strong><a target=\"_blank\">斜交关系</a></strong></dt><dd><p>例如</p></dd><dd><pre>    a &lt;X&gt; b</pre></dd><dd><p>表示向量 a 与向量 b 斜交。</p></dd></dl><p></p><hr><h1><a target=\"_blank\">基本假设条件</a></h1><p>目前，知识库使用了下列假设条件：</p><ul><li><p>若一平面与另一平面的名称不同，则认为两平面不重合。（知识库自身创建的“辅助平面”除外。）</p></li><li><p>若一直线与另一直线的名称不同，则认为两直线不重合。（知识库自身创建的“辅助直线”除外。）</p></li></ul><p>取消这两条基本假设虽然从逻辑上更加完整，但从实用性的角度上讲，将不可避免地使知识库中到处充斥着“a 与 b 不重合”这样的断言，同时也会增加了用户输入已知条件的负担，增加了因人为的已知条件不充足而无法求证的可能性。</p><p></p><hr><h1><a target=\"_blank\">知识库的推理流程</a></h1><p>知识库从物理上分为 4 个 CLIPS 模块(module)，亦对应推理流程的 4 大阶段：</p><dl><dt><strong><a target=\"_blank\">Vectorize 模块</a></strong></dt><dd><p>Vectorize 模块是由 <em>preprocess.xclp</em> 和 <em>vectorize.xclp</em> 这两个文件实现的。该模块负责完成从几何空间内的线线关系、线面关系、面面关系及其他复杂关系到向量空间内的向量关系的转换。</p></dd><dt><strong><a target=\"_blank\">Eval 模块</a></strong></dt><dd><p>Eval 模块是由 <em>vector-eval.xclp</em> 文件实现。该模块负责在向量空间内执行推理，从已知的向量关系不断推出新的向量关系。</p></dd><dt><strong><a target=\"_blank\">AntiVectorize 模块</a></strong></dt><dd><p>此模块由 <em>anti-vectorize.xclp</em> 文件实现。它负责执行 Vectorize 模块的“逆操作”，即将新的向量关系还原为几何空间中的线线关系、线面关系和面面关系。</p></dd><dt><strong><a target=\"_blank\">GoalMatch 模块</a></strong></dt><dd><p>GoalMatch 模块完成用户给定的证明目标在所有已知事实中的匹配及相关的解释工作。</p></dd></dl><p>当推理机的焦点处于某个模块时，只有属于该模块的规则和事实才能被参与推理。</p><p>有关立几空间的事实由 Vectorize 模块，AntiVectorize，和 GoalMatch 模块共享；有关向量空间的事实由 Vectorize 模块，Eval 模块，和 AntiVectorize 模块共享。</p><p>推理机运行的具体流程如下</p><ul><li><p>用户输入的已知条件所对应的“初始事实”被导入到 Vectorize 模块。</p></li><li><p>推理机焦点 (focus) 从默认模块 MAIN 切换至 Vectorize 模块，执行立几空间内的关系演算和“向量化”操作。</p></li><li><p>上一步运行完毕后，再将焦点移至 Eval 模块，执行向量空间内的关系演算，推出更多的向量关系。</p></li><li><p>将焦点移至 AntiVectorize 模块，对所有新的向量关系执行反向量化，还原出立几空间中的语义。</p></li><li><p>焦点被切换至 GoalMatch 模块，使用用户给定的证明目标对所有已知事实进行匹配，并生成解释和评价。</p></li></ul><p></p><hr><h1><a target=\"_blank\">知识库的内部结构</a></h1><p>知识库由下列 XClips 源文件构成：</p><p></p><h2><a target=\"_blank\"><em>vrg-sugar.xclp</em></a></h2><p>该文件定义了知识库中所使用的特殊的运算符，例如前缀 <code>\\</code> 和中缀 <code>//</code>.该文件为知识库中所有其他 .xclp 文件所包含。详情请参与 <a target=\"_blank\" href=\"#bcc7b7a8d4bcb6a8\">记法约定</a>.</p><p>例如前缀 <code>\\</code> 的定义如下：</p><pre>    prefix:&lt;\\&gt;   line</pre><p>而中缀 <code>//</code> 的定义如下：</p><pre>    infix:&lt;//&gt;   parallel</pre><p></p><h2><a target=\"_blank\"><em>preprocess.xclp</em></a></h2><p>该文件定义了 VRG 的“预处理规则”。这些规则的主要工作是在立几空间内部进行关系演算，其目的在于将 project（投影）和 meet（相交）这样的复杂关系转换为平行、垂直之类的简单关系，同时为某些基本关系生成“同构异形体”，以简化后续的匹配工作。</p><p>具体说来，此文件包含下列几条规则：</p><ul><li><p>当两个平面 <code>alpha</code> 和 <code>beta</code> 相交于直线 <code>l</code> 时，则 <code>alpha</code> 与 <code>beta</code>不平行，并且 <code>l</code> 同时在 <code>alpha</code> 和 <code>beta</code> 上.</p><pre>    #?alpha, #?beta, meet(?alpha, ?beta, ?l)<br>    =&gt; ?alpha [~//] ?beta, ?l [on] ?alpha, ?l [on] ?beta.</pre><p>这儿的前缀问号(?)表示为变量，而非常量。</p></li><li><p>当两条直线 <code>l</code> 和 <code>m</code> 相交于一点时，则存在一个平面 <code>alpha</code> 使得 <code>l</code> 和 <code>m</code>都在 <code>alpha</code> 上，且 <code>l</code> 不平行于 <code>m</code>.</p><pre>    \\?l, \\?m, meet(?l, ?m, ?)<br>    =&gt;<br>        ?alpha := gensym(), #?alpha, temp(?alpha),<br>        ?l [on] ?alpha, ?m [on] ?alpha,<br>        ?l [~//] ?m.</pre><p>这里的单个问号变量 (?) 表示“通配符”(wildcard).</p></li><li><p>若直线 <code>l</code> 和平面 <code>alpha</code> 相交于一点，则 <code>l</code> 既不平行于 <code>alpha</code>，也不在 <code>alpha</code>之上：</p><pre>    \\?l, #?alpha, meet(?l, ?alpha, ?) =&gt; ?l [~//] ?alpha, ?l [~on] ?alpha.</pre></li><li><p>若直线 <code>l</code> 在平面 <code>alpha</code> 上的投影为直线 <code>m</code>，则存在一个平面 <code>theta</code> 使得 (1) <code>l</code>与 <code>alpha</code> 斜交，(2) <code>l</code> 在 <code>theta</code> 上, (3) <code>theta</code> 与 <code>alpha</code> 相交于 <code>m</code>, 并且(4) <code>theta</code> 与 <code>alpha</code> 垂直：</p><pre>    \\?l, #?alpha, \\?m, project(?l, ?alpha, ?m)<br>    =&gt;<br>        ?theta := gensym(), #?theta, temp(?theta),<br>        ?l [X] ?alpha, ?l [on] ?theta,<br>        meet(?theta, ?alpha, ?m),<br>        ?theta [T] ?alpha.</pre></li><li><p>若平面 <code>alpha</code> 与直线 <code>l</code> 之间存在某个特定的关系 R, 则 <code>l</code> 与 <code>alpha</code> 亦满足（交换律）：</p><pre>    <span>#?alpha, \\?l, ?alpha [?R] ?l =&gt; ?l [?R] ?alpha.</span></pre></li></ul><p></p><h2><a target=\"_blank\"><em>vectorize.xclp</em></a></h2><p>本文件包含了执行“向量化”步骤的所有规则。</p><p></p><h3><a target=\"_blank\">线线关系的向量化</a></h3><p>若直线 <code>l</code> 与直线 <code>m</code> 之间存在关系 <code>R</code>, 则向量 <code>l</code> 与向量 <code>m</code> 之间亦存在关系 <code>R</code>.</p><pre>    \\?l, \\?m, ?l [?R] ?m =&gt; ?l &lt;?R&gt; ?m.</pre><p></p><h3><a target=\"_blank\">线面关系的向量化</a></h3><ul><li><p>若直线 <code>l</code> 与平面 <code>alpha</code> 垂直，则向量 <code>l</code> 与向量 <code>alpha</code> 平行：</p><pre>    \\?l, #?alpha, ?l [T] ?alpha  =&gt; ?l &lt;//&gt; ?alpha.</pre></li><li><p>若直线 <code>l</code> 与平面 <code>alpha</code> 平行，则向量 <code>l</code> 与向量 <code>alpha</code> 垂直：</p><pre>    \\?l, #?alpha, ?l [//] ?alpha =&gt; ?l &lt;T&gt; ?alpha.</pre></li><li><p>若直线 <code>l</code> 与平面 <code>alpha</code> 斜交，则向量 <code>l</code> 与向量 <code>alpha</code> 亦斜交：</p><pre>    \\?l, #?alpha, ?l [X] ?alpha  =&gt; ?l &lt;X&gt; ?alpha.</pre></li><li><p>若直线 <code>l</code> 在平面 <code>alpha</code> 上，则向量 <code>l</code> 与向量 <code>alpha</code> 垂直：</p><pre>    \\?l, #?alpha, ?l [on] ?alpha =&gt; ?l &lt;T&gt; ?alpha.</pre></li><li><p>上述关系的否定亦然：</p><pre>    \\?l, #?alpha, ?l [~T] ?alpha  =&gt; ?l &lt;~//&gt; ?alpha.<br>    \\?l, #?alpha, ?l [~//] ?alpha =&gt; ?l &lt;~T&gt; ?alpha.<br>    \\?l, #?alpha, ?l [~X] ?alpha  =&gt; ?l &lt;~X&gt; ?alpha.</pre></li></ul><p></p><h3><a target=\"_blank\">面面关系的向量化</a></h3><p>若平面 <code>alpha</code> 与平面 <code>beta</code> 满足关系 <code>R</code>, 则在向量空间中，<code>alpha</code> 与 <code>beta</code> 亦满足关系 <code>R</code>.</p><pre>    <span>#?alpha, #?beta, ?alpha [?R] ?beta =&gt; ?alpha &lt;?R&gt; ?beta.</span></pre><p></p><h2><a target=\"_blank\"><em>vector-eval.xclp</em></a></h2><p>此文件中的规则都是向量空间内的“求解规则”，用于从已知的向量关系推出全新的向量关系。这些规则是整个 VRG 系统知识的<strong>核心</strong>。</p><ul><li><p>已知 <code>a</code>, <code>b</code>, <code>c</code> 都是向量，若 <code>a</code> // <code>b</code>, <code>b</code> 与 <code>c</code> 满足关系 <code>R</code>,且 <code>c</code> 不同于 <code>a</code>，则 <code>a</code> 与 <code>c</code> 亦满足关系 <code>R</code>.</p><pre>    ?a &lt;//&gt; ?b, ?b &lt;?R&gt; ?c, ?a \\= ?c<br>    =&gt; ?a &lt;?R&gt; ?c.</pre><p>这一条规则的意义是，向量间的关系可以通过“平行”关系进行传递。在立体几何空间中，许多定理、定义和推论都对应于这一条规则。</p><p>比如高中数学课本``立体几何''一章有下列公理和定理是本条向量规则在立几语义中特殊的表现形式：</p><ul><li><strong><a target=\"_blank\">平行公理</a></strong></li><li><strong><a target=\"_blank\">直线和平面垂直的判定定理 II</a></strong></li><li><strong><a target=\"_blank\">直线和平面垂直的性质定理</a></strong></li><li><strong>直线和平面垂直的性质定理 II</strong></li><li><strong><a target=\"_blank\">两个平面平行的性质定理 II</a></strong></li><li><strong>两个平面平行的性质定理 III</strong></li><li><strong><a target=\"_blank\">两个平面垂直的判定定理</a></strong></li><li><strong><a target=\"_blank\">直线和平面平行的判定定理</a></strong></li><li><strong><a target=\"_blank\">平行线组定理</a></strong></li></ul><p>我们看到，一条向量化规则对应到如此之多的立几定理和公理。从这个意义上讲，向量化方法有效地揭示出立体关系的本质。</p></li><li><p>已知 <code>a</code> 和 <code>b</code> 都是向量，若 <code>a</code> 垂直于向量 <code>b</code>, 或者 <code>a</code> 与 <code>b</code> 斜交，则 <code>a</code> 不平行于 <code>b</code>.</p><pre>    ?a &lt;T&gt; ?b; ?a &lt;X&gt; ?b =&gt; ?a &lt;~//&gt; ?b.</pre><p>本规则其实揭示的其实就是“不平行”的定义。之所以专门编写一条规则来产生“不平行”关系，是因为“不平行”在下面这条规则中扮演着关键性的角色。</p></li><li><p>已知 <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> 四个向量满足下列关系：<code>a</code> 垂直于 <code>b</code>, <code>b</code> 垂直于 <code>c</code>,<code>c</code> 垂直于 <code>d</code>, <code>d</code> 垂直于 <code>a</code>, <code>a</code> 不平行于 <code>c</code>, 且 <code>b</code> 不同于 <code>d</code>,则有 <code>b // d</code>.</p><pre>    ?a &lt;T&gt; ?b, ?b &lt;T&gt; ?c, ?c &lt;T&gt; ?d, ?d &lt;T&gt; ?a, ?a &lt;~//&gt; ?c, ?b \\= ?d<br>    =&gt; ?b &lt;//&gt; ?d.</pre><p>在高中数学课本中有如下定理是该向量规则的“特殊表现形式”：</p><ul><li><strong><a target=\"_blank\">直线和平面平行的性质定理</a></strong></li><li><strong>直线和平面垂直的判定定理</strong></li><li><strong><a target=\"_blank\">两个平面平行的判定定理</a></strong></li><li><strong>两个平面平行的性质定理</strong></li><li><strong><a target=\"_blank\">两个平面垂直的性质定理</a></strong></li><li><strong><a target=\"_blank\">三垂线定理</a></strong></li><li><strong><a target=\"_blank\">三垂线定理逆定理</a></strong></li></ul></li><li><p>若向量 <code>a</code> 与向量 <code>b</code> 满足关系 <code>R</code>，则 <code>b</code> 与 <code>a</code> 亦满足关系 <code>R</code>.</p><pre>    ?a &lt;?R&gt; ?b =&gt; ?b &lt;?R&gt; ?a.</pre><p>这条规则揭示的是向量关系满足交换律。</p></li></ul><p></p><h2><a target=\"_blank\"><em>anti-vectorize.xclp</em></a></h2><p>本文件中的几条规则执行“逆向量化”操作，正好是 <em>vectorize.xclp</em> 中规则的“反函数”，比如逆向量化规则</p><pre>    \\?l, #?alpha, ?l &lt;T&gt; ?alpha =&gt; ?l [~T] ?alpha, ?l [~X] ?alpha.</pre><p>的含义是：如果在向量空间中，向量 <code>l</code> 垂直于向量 <code>alpha</code>，且在立体几何空间中，<code>l</code>是直线，<code>alpha</code> 是平面，则有在立几空间中，直线 <code>l</code> 不垂直于平面 <code>alpha</code>，且直线 <code>l</code> 不斜交于平面 <code>alpha</code>.</p><p></p><h2><a target=\"_blank\"><em>goal-match.xclp</em></a></h2><p>本文件中的规则使用用户给定的证明目标对已得到的事实进行匹配。</p><ul><li><p>若用户求证 <code>a</code> 与 <code>b</code> 在立几空间存在关系 <code>R</code>, 且事实库中确实存在该事实，则生成 solved 事实指示目标已解决。</p><pre>    ?a *[?R] ?b, ?a [?R] ?b<br>    =&gt; solved(space-relation, ?R, ?a, ?b).</pre></li><li><p>若用户求证 <code>a</code> 与 <code>b</code> 在立几空间存在关系 <code>R</code>，且事实库中不存在该事实，则生成 pending 事实以指示该目标“未决”。</p><pre>    ?a *[?R] ?b, ~exists(?a [?R] ?b)<br>    =&gt; pending(space-relation, ?R, ?a, ?b).</pre></li><li><p>若用户给定的有关 <code>a</code> 和 <code>b</code> 的一求证目标未决，且事实库中存在 <code>a</code> 与 <code>b</code>之间确定的某种关系，则生成 hint 事实，以提示用户。</p><pre>    pending(space-relation, ?, ?a, ?b), ?a [?R] ?b<br>    =&gt; hint(space-relation, ?R, ?a, ?b).</pre></li></ul><p></p><hr><h1><a target=\"_blank\">知识库的完整性自检与 DBC</a></h1><p>除了上述规则之外，知识库中还收录了许多自检测规则，用于检测事实库内部的完整性。这些设施可以有效地检测出用户给定事实之间的冲突、知识库规则之间的冲突，以及其他形式的 VRG bug.</p><p>事实上，在 VRG 的早期，这些自检测规则确实捕捉到不少连题库测试台都未捕捉到的 bugs。</p><p>一条典型的自检规则如下：</p><pre>    \\?l, #?alpha, ?l [on] ?alpha, ?l [~on] ?alpha<br>    =&gt; contradiction(\"[on]\", \"[~on]\", ?l, ?alpha).</pre><p>其含义是：一条直线要么在一个平面上，要不不在那个平面上。如果同时存在这两个事实，则生成 contradction 事实指示矛盾冲突的存在。</p><p>将完整性测试逻辑与系统自身的实现放在一起，在软件工程中称为 Design by contract (DBC).VRG 的实践表明，在基于规则的系统中实现 DBC 要比传统的命令式语言要方便和自然得多。</p><p></p><hr><h1><a target=\"_blank\">知识库的 Subversion 仓库</a></h1><p>您总是可以从下面的 Subversion (SVN) 仓库取得最新版本的 VRG 知识库：</p><p><a target=\"_blank\" href=\"https://svn.berlios.de/svnroot/repos/unisimu/VRG/knowledge\">https://svn.berlios.de/svnroot/repos/unisimu/VRG/knowledge</a></p><p></p><hr><h1><a target=\"_blank\">TODO</a></h1><ul><li><p>在 <code>line</code> 和 <code>plane</code> 谓词的基础上引入 <code>point</code> 谓词用于显式地声明几何点。</p><p>虽然当前知识库已通过使用隐式的点对象来处理类似“两线交于一点”的条件，但显式的点对象无疑会提高规则的可读性和知识库的可扩展性。</p></li></ul><p></p><hr><h1><a target=\"_blank\">COPYRIGHT</a></h1><p>Copyright 2006 by Agent Zhang (章亦春). All rights reserved.</p><p></p><hr><h1><a target=\"_blank\">SEE ALSO</a></h1><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/blog/cns%21FF3A735632E41548%21138.entry\">the Overview manpage</a></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+KB+-+VRG+%e7%9f%a5%e8%af%86%e5%ba%93%e7%ae%80%e4%bb%8b&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Overview - VRG 专家系统概览","date":"Feb 6, 2007 8:59 PM","body":"<div><div class=\"item-body\"><div><div><h1><a target=\"_blank\">NAME</a></h1><p>Overview - VRG 专家系统概览</p><p></p><hr><h1><a target=\"_blank\">AUTHOR</a></h1><p>章亦春 &lt;<a target=\"_blank\" href=\"mailto:agentzh@gmail.com\">agentzh at gmail dot com</a>&gt;</p><p>计算机科学与通信工程学院 江苏大学</p><p></p><hr><h1><a target=\"_blank\">VERSION</a></h1><pre>   Maintainer: Agent Zhang &lt;agentzh at gmail dot com&gt;<br>   Date: 24 Dec 2006<br>   Last Modified: 24 Dec 2006<br>   Version: 0.01</pre><p></p><hr><h1><a target=\"_blank\">VRG 是什么？</a></h1><p>VRG 是一个立体几何定性问题证明系统。比如下面这样的问题都可以使用VRG 进行证明：</p><ol><li><p>若直线 l // 平面 alpha, 则 l 平行于 alpha 内的所有直线吗？</p></li><li><p>设 alpha、beta 表示平面，a、b 表示直线，则 a // alpha 的一个充分条件是不是 alpha 垂直于 beta, 且 a 垂直于 beta ?</p></li><li><p>判断平行于同一个平面的两个平面是否平行</p></li><li><p>一个平面内的两相交直线与另一个平面内的两条相交直线分别平行，则这两个平面平行吗？</p></li><li><p>若平面 alpha 垂直于 平面 beta, 直线 n 在 alpha 上，直线 m 在 beta 上，m 垂直于 n, 则同时有 n 垂直于 beta 和 m 垂直于 alpha 成立吗？</p></li><li><p>PA、PO 分别是平面 alpha 的垂线、斜线，AO 是 PO 在平面 alpha 内的射影，且 a 在 alpha 上，a 垂直于 AO，则 a 垂直于 PQ.</p></li></ol><p>上述问题都引用自 VRG 的自动化测试台的用例。VRG 可以对任一个用户问题作出 2 种基本判断：Yes （即可以证明）和 No（即无法确定），并且给出提示信息和证明过程。</p><p></p><hr><h1><a target=\"_blank\">用户如何向 VRG 描述自己的问题？</a></h1><p>用户通过一种类似几何语言的“用户语言”向 VRG 描述自己的问题。</p><p>例如上面的第 1 题可以用 VRG 用户语言表达如下：</p><pre>    line l, m;<br>    plane alpha;<br>    l // alpha, m on alpha =&gt; l // m;</pre><p>第 2 题可以表达如下：</p><pre>    <span>plane</span> <span>alpha</span><span>,</span> <span>beta</span><span>;<br></span>    <span>line</span> <span>a</span><span>,</span> <span>b</span><span>;</span></pre><pre>    alpha T beta, a T beta =&gt; a // alpha</pre><p>第 3 题可以表达如下：</p><pre>    plane alpha, beta, theta;<br>    alpha // theta, beta // theta =&gt; alpha // beta</pre><p>第 4 题可以表达如下：</p><pre>    <span>line</span> <span>l1</span><span>,</span> <span>l2</span><span>,</span> <span>l3</span><span>,</span> <span>l4</span><span>;<br></span>    <span>plane</span> <span>alpha</span><span>,</span> <span>beta</span><span>;<br></span>    <span>point</span> <span>P</span><span>,</span> <span>Q</span><span>;</span></pre><pre>    l1 on alpha, l2 on alpha, meet(l1, l2, Q),<br>    l3 on beta, l4 on beta, meet(l3, l4, Q),<br>    l1 // l3, l2 // l4 =&gt; alpha // beta</pre><p>第 5 题可以表达如下：</p><pre>    plane alpha, beta;<br>    line m, n;</pre><pre>    alpha T beta, n on alpha, m on beta, m T n =&gt; n T beta, m T alpha;</pre><p>第 6 题即三垂线定理，其 VRG 描述如下：</p><pre>    <span>plane</span> <span>alpha</span><span>;</span><br>    <span>line</span> <span>a</span><span>;<br></span>    <span>line</span> <span>b</span><span>;</span> <span>--</span> <span>line</span> <span>PA<br></span>    <span>line</span> <span>d</span><span>;</span> <span>--</span> <span>line</span> <span>AO<br></span>    <span>line</span> <span>c</span><span>;</span> <span>--</span> <span>line</span> <span>PO<br></span>    <span>b</span> <span>T</span> <span>alpha</span><span>,</span> <span>project</span><span>(</span><span>c</span><span>,</span> <span>alpha</span><span>,</span> <span>d</span><span>),</span> <span>a</span> <span>on</span> <span>alpha</span><span>,</span> <span>a</span> <span>T</span> <span>d<br></span>    <span>=&gt;<br></span>    <span>a</span> <span>T</span> <span>c</span><span>;</span></pre><p></p><hr><h1><a target=\"_blank\">用户该如何运行 VRG 系统？</a></h1><p>用户首先使用 VRG 用户语言描述自己的立体几何问题，并将之保存到一个磁盘文件，并使用 <code>.vrg</code> 作为文件扩展名。然后使用下面的命令行进行求解：</p><pre>    $ perl script/vrg-run.pl foo.vrg</pre><p>典型地，若将上面的第 1 题用 VRG 语言描述后保存至 <em>problem-1.vrg</em>文件，则运行 <code>vrg-run</code> 程序的情景如下：</p><pre>    $ perl script/vrg-run.pl problem-1.vrg<br>    Yes.</pre><pre>    generating vectorize.png...<br>    generating vector-eval.png...<br>    generating anti-vectorize.png...<br>    generating problem-1.png...<br>    generating problem-1.vrg1.png...<br>    generating problem-1.vrg2.png...</pre><p>输出的第一行为``<code>Yes.</code>''，表示成功求证。后面的输出表示 <code>vrg-run</code> 程序又生成了许多图片文件。其中最重要的是 <em>problem-1.png</em>，它以有向图的形式绘出了整个程序证明的推理过程，即系统是如何从已知事实出发一步一步推出求证目标的。而 <em>vectorize.png</em> 描绘的是整个证明流程中的第一大步，即“向量化”阶段的推理过程；<em>vector-eval.png</em> 描绘的则是第二阶段，向量空间内的推理过程；<em>anti-vectorize.png</em>描述的则是第三阶段，亦最后一大步，即“逆向量化”部分的推理过程。</p><p>最后生成的 2 张图片比较特别。<em>problem-1.vrg1.png</em> 描述的是已知条件所对应的向量关系图（即 Vector Relational Graph），而 <em>problem-1.vrg2.png</em> 描绘的则是推理结束后结论加已知条件所对应的向量关系图。向量关系图本身使用下面的表示约定：所有节点表示向量，黑色实线表示“垂直关系”，黑色虚线表示“既不平行，也不垂直”，红色实线表示“平行关系”，红色虚线表示“不平行关系”，而其他关系会用文字显式标出。通过“向量关系图”，用户可以看到证明过程的数学本质。</p><p></p><hr><h1><a target=\"_blank\">VRG 是如何绘制这些 PNG 格式的有向图的？</a></h1><p>VRG 在内部使用 AT&amp;T 的自由软件库 Graphviz 来生成所有的有向图。</p><p></p><hr><h1><a target=\"_blank\">VRG 在证明结果的描述上还有哪些特别之处？</a></h1><p>对于多证明目标的题目，VRG 在判断不成立时，会显式地指出具体是哪些目标是未决的。而对于题目自身的条件是彼此冲突的，比如两个几何元素既平行又垂直了，VRG 也会显式地指出冲突所涉及的细节（比如哪两个元素冲突了，是哪两个关系冲突了）。</p><p></p><hr><h1><a target=\"_blank\">VRG 经过了怎么的测试？</a></h1><p>我已使用高中数学教材中所有的公理、定义、定理和推论对 VRG 进行了测试（在 VRG的测试集中即对应 sanity.t 文件），此外，我还使用高三时候积累的所有相关的高考复习题对 VRG 进行了测试（在测试集中即对应 senior.t 文件）。</p><p></p><hr><h1><a target=\"_blank\">哪些立体几何问题是 VRG 无法求解的？</a></h1><p>对于涉及定量关系的几何问题是无法用 VRG 进行求解的，比如角度计算问题、线段长度之类。VRG 是定性求解系统，它只能处理“垂直”、“平行”、“线在面上”这样的定性关系。</p><p></p><hr><h1><a target=\"_blank\">VRG 的知识库是使用什么语言描述的？</a></h1><p>VRG 的知识库全部是使用我自主设计和实现的通用目的专家系统编程语言 XClips 进行描述的，在 VRG 源代码目录中，对应 <em>knowledge/*.xclp</em> 这些文件。</p><p>由于使用了可扩展的 XClips 语言，VRG 的知识库非常简洁，非常清晰。</p><p></p><hr><h1><a target=\"_blank\">VRG 在底层采用了什么样的推理引擎？</a></h1><p>VRG 在底层使用了美国航空航天局约翰逊太空中心开发的正向链推理机 CLIPS. 事实上，VRG 系统与 CLIPS 的交互全部是通过 XClips 系统来完成的。XClips 正是建筑在CLIPS 之上的。</p><p>值得一提的是，CLIPS 是发布在公共域(public domain)中的，因此可以将之用于任何目的。</p><p></p><hr><h1><a target=\"_blank\">VRG 可以运行在哪些操作系统上？</a></h1><p>VRG 的构件和依赖项都是高度可移植的，包括 CLIPS, perl, Graphviz, 因此可以不加修改地运行在包括 Windows, Linux, FreeBSD, Solaris 在内的多种操作系统上。目前，我只在 Windows XP 和 Windows 2000 上进行过测试。</p><p></p><hr><h1><a target=\"_blank\">如何获取 VRG ?</a></h1><p>您总是可以从下面的 SVN 仓库获得 VRG 最新版本的源代码：</p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/VRG\">http://svn.berlios.de/svnroot/repos/unisimu/VRG</a></p><p></p><hr><h1><a target=\"_blank\">如何加入 VRG 的开发工作？</a></h1><p>如果您想帮助完善 VRG 系统，请发送电子邮件告知作者。谢谢！</p><p></p><hr><h1><a target=\"_blank\">COPYRIGHT</a></h1><p>Copyright 2006 by Agent Zhang (章亦春). All rights reserved.</p><p></p><hr><h1><a target=\"_blank\">SEE ALSO</a></h1><p><a target=\"_blank\" href=\"http://agentzh.spaces.live.com/blog/cns%21FF3A735632E41548%21139.entry\">the KB manpage</a></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Overview+-+VRG+%e4%b8%93%e5%ae%b6%e7%b3%bb%e7%bb%9f%e6%a6%82%e8%a7%88&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"幸福","date":"Dec 22, 2006 8:23 PM","body":"<div><div class=\"item-body\"><div><div>近来时常为一种幸福的感觉所包围。这种幸福不同于 hacking 和编程技术上的进步所带来的快乐，亦不同于独自一人浪迹天洼的那种幸福，亦有别于静心冥想时的快乐。这种幸福让我回想起小学时代的一些事情，让我回想起高中时代的一些事情。无论如何，妙不可言。<br><br>确实，本来就没有痛苦的，只有幸福~~~我没有必要恐惧，没有必要担心。一切都是命运安排好的。<br></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e5%b9%b8%e7%a6%8f&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"真相","date":"Dec 17, 2006 2:23 PM","body":"<div><div class=\"item-body\"><div><div><p>我们说的学习，其实并不是学习，只是叫做学习。 </p><p>我们说的课业负担重，其实并不是课业负担重，只是叫做课业负担重。 </p><p>我们说的烦恼多，其实并不是烦恼多，只是叫做烦恼多。 </p><p>我们说的世间罪恶，其实并不是世间罪恶，只是叫做世间罪恶。 </p><p>我们说的聪明智慧，其实并不是聪明智慧，只是叫做聪明智慧。 </p><p>我们说的成就高，其实并不是成就高，只是叫做成就高。 </p><p>我们说的美丽，其实不是美丽，只是叫做美丽。 </p><p>为什么呢？我们看到的都只是事物的表相而已，不是真相。美好与丑陋，烦恼与自在，幸福与痛苦，都只在我们的一念之间。 </p><p>是啊，就是一念之间，就是如此容易。 </p><p>即便我们拥有再多的财富，取得再大的成就，学习再多的知识，也可能不及一个普通的乡村农夫来得快活自在，来得幸福安乐。 因为幸福只是一种感受，只是一种心理体验。掌控了自己意念，其实也就掌控了自己的幸福。什么成就啦，财富啦，地位啦，学问啦，都不过是过眼云烟，换不来真正的快乐。 </p><p>公平是什么？我们拥有纯洁的心地，清净的生活，善良的灵魂，这便是上天对我们最大的恩赐，对我们来说，也就是最大的公平。 </p><p>现代人生活得太苦了。虽然，如今的物质文明超越了过去一切世代的总和，但人们其实还不及过去的人们生活得幸福。巨大的精神压力，飞快的生活节奏，膨胀的贪著欲望， 缠缚身心的烦恼……这些都将唾手可得的幸福赶跑了。 </p><p>身体上的苦真算不上什么，精神上的苦楚，才是最大的悲哀。自然界中的其他物种，其实大部分时间都饱受饥饿之苦，但我们又不得不羡慕它们的快活自在。 </p><p>宇宙中最捉摸不透的便是我们的心了。它总会生出如此之多的念头，如此之多的妄想，如此之多的烦恼。但是我们却无法得到自己过去的心，自己现在的心，和自己未来的心。 </p><p>这听起来似乎有些不可思议。但事实上确是极为明显的。当我们觉察到自己心中的一个念头的瞬间，其实这个念头已经在心中灭去了。“贼后兴兵”，了无所得。因此，我们一定要处处留心，时时在意，以避免我们的心随着烦恼而行。 </p><p>随顺烦恼，便是自寻烦恼。烦恼本来是没有的，烦恼是我们自己的心造出来的。 </p><p>记得高中的时候，我向一个同学抱怨说，“我怎么会这么痛苦呢？”对方的回答让我惊愕： “其实人大多数的痛苦都是自己造成的。”我如今才明白了她的意思。 </p><p>仔细地观察，痛苦确确实实都是自己“伪造”出来的。没有人，没有事，能真正让我们痛苦，只有我们自己才会让自己痛苦。因为痛苦本来就是自己的，痛苦本来就是一种内心感受，痛苦本来就是没有的。 </p><p>而我呢？一直以来，总是在诅咒教材，诅咒学校，诅咒教育制度，诅咒身边的环境，诅咒除了自己以外一切可以诅咒的东西。结果呢？随顺了烦恼，增长了烦恼。于是成了自己和自己过不去，岂不贻笑大方？而所谓的“自己”，其实也是没有的。<br></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e7%9c%9f%e7%9b%b8&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"XClips 与 VRG","date":"Nov 17, 2006 10:21 PM","body":"<div><div class=\"item-body\"><div><div><p>前些日子我本打算为本周的专家系统课程制做两组幻灯片。一组是《Introduction to XClips》，介绍我基于 CLIPS 设计的专家系统编程语言；一组是《Introduction to VRG》，介绍我用 XClips 语言编写的 立体几何自动化证明系统 VRG。但由于时间的关系，只完成了第一组。第二组我真的累了，暂时不想做了（尽管有更多更激动人心的东西值得介绍）。 </p><p>《Introduction to XClips》这一组幻灯片，共 94 张。制做这套幻灯的过程是非常令人愉快的，尽管有些辛苦。呵呵。这是我第一次为自己设计和实现的专家系统语言编写幻灯，激动啊~~ </p><p>如果您在江大校外，可以从这里下载 PPT 格式的幻灯： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.ppt\">http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.ppt</a> </p><p>将上面的 .ppt 改为 .pdf 可以取得 PDF 格式的版本。 </p><p>如果您在江大校内，则可以从江大医学院的服务器上获取： </p><p><a target=\"_blank\" href=\"http://yxy.ujs.edu.cn/images/xclips.ppt\">http://yxy.ujs.edu.cn/images/xclips.ppt</a> </p><p>或者 </p><p><a target=\"_blank\" href=\"http://yxy.ujs.edu.cn/images/xclips.pdf\">http://yxy.ujs.edu.cn/images/xclips.pdf</a> </p><p>经过 10 天的努力，VRG 和 XClips 这两个项目从无到有，从小到大。 </p><p>高中数学书上几乎所有的立体几何部分的公理、定理现在都能正确地为我的专家系统所证明啦。对应的测试文件如下： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/VRG/t/sanity.t\">http://svn.berlios.de/svnroot/repos/unisimu/VRG/t/sanity.t</a> </p><p>另外，我使用高三时搜集的许多高考复习题轰炸它，也全部为它轻松搞定。对应的测试文件如下： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/VRG/t/senior.t\">http://svn.berlios.de/svnroot/repos/unisimu/VRG/t/senior.t</a> </p><p>你看到的这两个 .t 文件其实都是 100% 的 perl 脚本文件。由于使用了 Ingy 的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Test::Base\">Test::Base</a> 模块， 测试都是自说明的，非常清晰，非常漂亮。呵呵。 </p><p>通过 VRG 项目我证实了向量化方法和定性推理的确是极为有力的几何证明工具。 </p><p>该项目的源代码总是可以从下面的位置自由获取： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/VRG\">http://svn.berlios.de/svnroot/repos/unisimu/VRG</a> </p><p>与此同时，我还在专家系统的自动化单元测试技术、自动化覆盖测试、DBC (Design by Contract) 风格的自检验、基于模块的规则隔离与事实共享、推理过程的可视化等方面做了不少有趣的工作。我正试图将这些东西以最自然的形式融入到我的幻灯片中。呵呵。 </p><p>由于使用像 CLIPS 这样的基于正向链 (forward chaining) 的推理引擎，我可以从 Prolog 的无限循环的困挠中解放出来，从而将主要力量放在知识库本身的表达以及推理过程的自动化解释的核心问题上，而不是时时刻刻去关心像消除左递归，避免规则回路这样的枯燥而琐碎的事情。耶~~~</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+XClips+%e4%b8%8e+VRG&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"抱怨","date":"Nov 16, 2006 11:21 PM","body":"<div><div class=\"item-body\"><div><div><p>电子政务老师过分……居然在当中打断我……我才讲到第 20 张。一共准备了 58 张呢…… </p><p>王龙志那小子也跑了……我可是认真地听完了他的演讲了哦。 </p><p>很高兴的是，开始讲的时候还有几个同学在下面窃窃私语，而当我讲到美国 FirstGov 网站以后， 所有同学都抬起头认真地听我说了。耶~~~感觉好棒哦~~~要的就是这种效果。 </p><p>我要好好让咱们的老师看看电子政务课应该怎么个上法。全国新闻联播式的一页一页地朗读课件 只是没有教学经验的初学者的方式！上课一定要充满爱心，充满激情，充满乐趣， 这样才能感染听众，这样才能不误人子弟…… </p><p>有兴趣的朋友请参见我这堂课的幻灯： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Slides/egov/egov.ppt\">http://svn.berlios.de/svnroot/repos/unisimu/Slides/egov/egov.ppt</a> </p><p>或者 </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Slides/egov/egov.pdf\">http://svn.berlios.de/svnroot/repos/unisimu/Slides/egov/egov.pdf</a> </p><p>正如我当时在演讲前所说的，幻灯里几乎每一句话都是我自己的。 如有引用，必有双引号标出。 在此之前，我已经听了太多太多大段大段抄袭的演讲。简直都厌烦死了~~~也只有张娣、王龙志， 还有 3 班另一个我叫不出名字的男生讲的还有些东西。还不至于让我感到时间被浪费了。至于 其他人的……简直就是时间“谋杀”……但出于尊重，我一直认真地听完最后一个人的报告。这也算是 给我们老师一个榜样，让她知道什么叫做最基本的尊重。 </p><p>好在事先我已经给我徒儿、祥子，还有珣新完整地讲解过这套幻灯了。其实我如此认真地准备就 是想在今晚真正向同学演示一些电子政务方面的实实在在、有血有肉的东西。看来我是没有机会 在公共场合完整地讲完这套幻灯了。 </p><p>事实上，我对我的每一次上台机会都是非常珍惜的。讲台是一个很光辉、很神圣的地方。可悲的是， 许多大学里的职业教师看不到这一点。从我们的许多老师身上我能清晰地感受到一种普遍的沮丧情绪。 似乎他们认为在大学里教书是一种“低就”，是一种“委屈”。 </p><p>而我从讲课和教学当中却发现了极大的乐趣，这种乐趣不是一般的编程和私人的交流所能比拟的。 那是一种与许多朋友进行思想沟通的美妙场合！ </p><p>是啊，“与其诅咒黑暗，不如点亮一枝蜡烛。”我希望以我的实际行动作出一些贡献（对自己的， 还有对我的朋友们的）。这样才能让我觉得安心。 </p><p>与应试教育抗争了这么多年，我真的累了。尽管在这个过程当中也积累了一些东西值得和我的同学们 一起分享。 </p><p>明天专家系统课程还有一个极有有趣的讲座，有兴趣的同学欢迎光临啊~~~ 周五下午 7、8 节，2212。明天的讲座的幻灯片我昨天就已经准备好了。大约有 94 张。我将通过一 些有趣的例子深入浅出地介绍了我自己设计和实现的一种专家系统编程语言，名为 XClips。我已经和 小万简单地演示过了。他给我的反馈很不错，夸我的 XClips 系统做得“很专业”。好有成就感哦，呵呵。 </p><p>``Introduction to XClips'' 幻灯片的位置如下： </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.ppt\">http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.ppt</a> </p><p>或者 </p><p><a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.pdf\">http://svn.berlios.de/svnroot/repos/unisimu/Slides/xclips/xclips.pdf</a> </p><p>欢迎大家批评指正！ </p><p>虽然这学期我已经给大家和刘一松老师的研究生上了近 10 次大课了（而且还要上一二次），但其中 没有一次是我自己向老师申请的。每一次都是老师邀请我上我才上的。我这个人平日行事虽然好张扬， 但也没到没课找课上的地步。毕竟，每上一堂课，都要做大量的准备工作。而且在讲堂上讲上个 90 分钟 甚至更长是极为耗费体力的。 </p><p>正如我的朋友蔡玉飞先前警告过我的，我自己这边的重修课还焦头烂额……其实我应该算是这个班上成绩 最差的了。嘿，没关系，不急，咱不急。呵呵。 </p><p>身边的朋友们不是在找工作，就是在准备考研。就我一个人还不知道以后怎么办。是啊，以后怎么办呢？ 没想过。先把眼前的每一件事做完美吧。以后的事情，等以后再说。你说呢？ </p><p>其实想想生活还是如此美好的，呵呵。有这么多朋友，有这么多有趣的知识和技术…… 珍惜眼前所拥有的一切，不要等失去了再后悔。以一颗感恩的心，面对每一天的生活。 </p><p>别忘了我可是两“一”老人啊：“一事无成，一文不值。”自己这么认为就足够了。 所谓“举世誉之而不加劝，举世非之而不加沮” ，“定乎内外之分，辨乎荣辱之境” 。 这都是我的座右铭。 </p><p>呵呵，哲学是好东西啊。许多哲学思想是可以帮助我们开智慧的。这比生命更重要。 </p><p>没有智慧，那人和禽兽、机器就没什么差别了。所以有些人虽然活着，他的心却已经死了。 </p><p>在这儿发泄了一通，对不起诸位啊……抱怨可不好哦。关注我博客的同志们会发现，我最近一直 在抱怨。更年期到了？我想主要是因为心情有些郁闷。“内郁于中，自然要发之于外。” 不过有时我觉得我和年纪相仿的同学有代沟，而和小学里的那些孩子们在一块却感觉不到。 其实我还小呢，呵呵。总是这么天真幼稚的。有一句说一句，从不知在别人面前说客气的话，说好听的话 我父母也批评过我好多次了。我就是不愿改。因为我觉得那些很虚伪。真的不喜欢兜圈子。 确实，我一点儿都没长大，而且讨厌长大。很没出息吧？呵呵。话又说回来，要不怎么叫做 “两一老人”呢，呵呵。 </p><p>其实我妈也是如此啊，呵呵，她到现在都承认自己没长大。真是“有其母必有其子”。 </p><p>想想我现在过得很幸福，真的。没什么烦恼,没什么寂寞的,也没什么操心的。 只是偶尔会贪心，会不知足，会抱怨一通…… </p><p>今儿个累了，要休息了…… 明天见…… </p><p>Zzz </p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=&amp;page=RSS%3a+%e6%8a%b1%e6%80%a8&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"以苦为乐","date":"Nov 14, 2006 10:21 PM","body":"<div><div class=\"item-body\"><div><div>突然发现自己的生活是如此虚幻。疾病和死亡会在任何时候轻松地毁灭原本引以为荣的一切。健康时会全然忘却病时的巨大痛苦，而在病中时会如此羡慕平日里觉得平淡无味的一点一滴。<br><br>死亡最终会降临到我的身上，你的身上，他的身上。是啊，年轻人怎么会真正认真地思考老苦和死苦呢？在青年人的眼中，生活像一条彩色的绸带，无限地延伸至未来。逻辑上的老去和死亡，究竟是“逻辑上”的，我们的大脑认同，而我们的心其实不然。<br><br>我不敢去追问。不敢去追问学习的意义，追求的意义，生命的意义，以及存在的意义。<br><br>我习惯于化苦为乐。我擅长这桩事情。面对很枯燥的学科，我也会想尽各种方法去挖掘它的美，它的本质，让自己能在那里面找到一乐趣，做出一些事情。如此折腾，无非是想为自己学习各门课程寻找一个理由。其实，仅是寻找一个借口。<br><br>上大四的今天我还在摆弄高三的几何题，仅仅是因为我想继续高三时搞的一个自动化证明项目。表面看来很酷，深究起来觉得可悲。我还在自己延续高考给我的伤害。我还在自己延续那个可笑的“借口”。<br><br>从很小的时候起，我就沉迷在这种游戏之中，而且乐此不疲。不能说我是假装对它们感兴趣。我真的发现了它们的美，我真的喜欢上了包括数学在内的那些原本很讨厌的学科。可又能怎样？我还是不知道它的意义。<br><br>确实，在这一连串无休止的游戏中，我积累了许多领域的知识和技术，其中的许多是让我身边的不少同学羡慕的。可那又能怎样？又有什么意义呢？<br>\n<br>是啊，我或许有了这些东西，可以更容易地找到工作，更容易地找到比较好的工作。可那只是为了活下去，并没有解释为什么要活下去。<br><br>我想过我也许会而且也应该为人类的进步做贡献，让现在的人们，以及我们的后代生活得更好。可是，我看到的现实是，随着物质文明的日益丰富，人的欲望也日益膨胀，人的压力也日益增加，人的道德也日趋滑落，人的生活也越来越不幸福。<br><br>毕竟，幸福是一种感觉，而不是一种物质。<br><br>看来，我不应该再去“添砖加瓦”了。我们所吹捧的那些科学、那些技术，无法向我解释人生的意义，无法向我解释它们自己的“真正意义”，无法向我解释这个世界这个宇宙的意义。<br><br>我在孩童时就渴望知晓星空后面的秘密。这个世界的本质只有一个，生老病死的源头只有一个。我是如此渴望在今生得到它。将自己的时间浪费在那些自己编造的“借口”上，浪费在与这个应试制度作抗争上，实在是无趣的很，实在是可惜的很。<br><br>今天的人们似乎更多地是向“外”去求索。于是这才有了天文学、物理学、化学、生物学这些东西。我们喜欢说我们每天都在进步，每天都在接近那个“绝对真理”。可如果我们的方向从一开始就错了怎么办？如果我们历尽千辛万苦，发现自己苦苦追寻的“真理”其实是一场空，怎么办？如果我们在这个过程中，自己把自己毁灭了怎么办？<br><br>我们的科学真的在接近真理，而不是在远离真理么？<br><br>接近真理的时候，我们的烦恼应该越来越少，我们的品德应该越来越高尚，我们的生活应该越来越幸福。<br><br>真正的智慧，只有那些有德行的人才有资格——或者说才有可能获得。真正的智慧应该让我们远离生活中的一切苦恼。<br><br>我要看着自己，嗯，紧紧地盯着。看着自己的过失，看着自己的迷惘，看着自己的贪欲。<br><br>我要坐着思考，嗯，静静地沉思，思考自己的存在，思考自己的痛苦，思考自己的出路。<br></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=&amp;page=RSS%3a+%e4%bb%a5%e8%8b%a6%e4%b8%ba%e4%b9%90&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"怎样生活","date":"Nov 10, 2006 10:32 PM","body":"<div><div class=\"item-body\"><div><div>每天都在奔跑————不好，这不是我想要的生活。<br><br>每天都在学习————不好，这也不是我想要的生活。<br><br>每天都在工作————不好，这还不是我想要的生活。<br><br>我自己究竟想要什么样的生活呢？我不知道。<br><br>嗯，或许是那种比较清闲的生活。繁忙让我厌烦，压力让我不悦。<br><br>让别人拉着我向前奔跑？天哪，那有什么趣味？<br><br>让自己逼着我向前奔跑？嗨，奔跑又是为了什么？<br><br>按照“习俗”追求的许多东西，想来根本没有意义。归根究底，仍是放牛娃的逻辑：<br>学习，成功，娶妻，生子，学习，成功，娶妻，生子……<br><br>无聊之极。<br><br>极少去思考自己的思考。平日里所谓的思考，想来更多的是一种习惯，一种迷惑。<br><br>恶念在心中生起来却浑然不知，甚至乐此不彼。可悲，可叹，可恶！<br><br>终日只知愤世嫉俗，殊不知最俗最坏的竟是自己。<br><br>妍媸自彼，与我何干！<br><br>其实只愿在大部分的时间里，能够真真正正地静下心来，读懂我的灵魂，读懂我的心……<br><br>这个世界是虚幻的，我的心也是虚幻的。无奈。<br><br></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=&amp;page=RSS%3a+%e6%80%8e%e6%a0%b7%e7%94%9f%e6%b4%bb&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Notes for this fortnight (2006-10-18 ~ 2006-10-30)","date":"Oct 30, 2006 11:29 PM","body":"<div><div class=\"item-body\"><div><div><h2><div>Oct 18 (to Jack Shen~)</div></h2> <p>I wrote a UML class diagram generator based on GraphViz. it can parse arbitrary perl OO modules and obtain the inheritance relationships and method/attribute list automatically. it's called <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?UML::Class::Simple\">UML::Class::Simple</a>. And it's much easier to use than <a target=\"_blank\" href=\"http://www.staruml.com\">StarUML</a> . you know, dragging mouse to draw diagrams is really painful. yay for automatic image generation! </p><p>(Here is one of the sample outputs: <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/fast.png\">http://svn.berlios.de/svnroot/repos/unisimu/fast.png</a>.) </p><p>  </p><h2><div>Oct 18 (to Sal Zhong~)</div></h2> <p>i'm planning to upload <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?UML::Class::Simple\">UML::Class::Simple</a> to cpan once it's mature enough. will you test it for me? bug reports and patches are most welcome. :) </p><p>it's still undecided how to differentiate perl classes' properties from other ordinary methods. i'm also pondering the idea of adding relationships other than inheritance. i'll be delighted if you have some ideas on these matters. </p><p>Note that i'm ignoring the  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Autodia\">Autodia</a>  module on CPAN since i'm not in favor of XML and a quite different approach has been taken in my project. anyway, i have to admit it's wise to talk to  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Autodia\">Autodia</a> 's author and merge these efforts. at last, i must thank Alias for creating  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>  and suggesting the use of <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Class::Inspector\">Class::Inspector</a>. they're invaluable when one wants to extract meta info from the perl world. </p><p>  </p><h2><div>Oct 19 (to Jack Shen~)</div></h2> <p>I've merely finished the  <a target=\"_blank\" href=\"http://perlcabal.org/agent/slides/naming/naming_recap.pdf\">slides</a> for recap. they already reach the amount of 44 and the number is still counting. alas, still wondering what to say in the next talk on the design of methods and subroutines. :( </p><p>  </p><h2><div>Oct 19 (to Cherry Chu~)</div></h2> <p>Thanks. the talk went pretty well. it's interesting to see that i had the feeling just before the talk that you would not come. so i was not very surprised by your absence. no problem, there's always ``the next time''. :) </p><p>i've been busy making slides for tomorrow's talk. they're still not finished yet. sigh. have to make more slides during the daytime tomorrow. producing so many slides is quickly getting tedious. hehe, you know that feeling, right? ;-) </p><p>  </p><h2><div>Oct 20 (to Cherry Chu~)</div></h2> <p>这几天每天都要上讲台，而且一上就是 2 节，感觉好累哦。 不过上课时也时常有灵感出现，把平时很多只能意会的东西概念化、理论化， 从而也就可以很好地传达给我们学院的同学们了。 </p><p>另外就是做了许多幻灯片，它们像是连环画，又像是小小说，都很精致， 都很漂亮。它们是我从高一开始积累的编程思想的一些汇总与整理，真是有趣的很哦~ 我的朋友们上过我的课后都说收获很大，呵呵， 我觉得再没有什么比这个更让人激动的了。耶！ </p><p>……谢谢。明天下午还要给我们学院的研究生做一次讲座。振奋哦~~~哈哈！:D </p><p>  </p><h2><div>Oct 21 (to He Shan~)</div></h2> <p>我昨晚的课上得还行么？是不是太悠闲，节奏太缓慢了？ </p><pre> &gt; 呵呵，虽然这会才看到你的消息，但我的思维却始终没有离开你。我想你的课让<br> &gt; 我对自己后面的路该如何走，有了全新的认识，就像赵鹏说的有种豁然开朗的感<br> &gt; 觉。</pre> <p>如此之高的评价我真是担当不起呢。看来我算是遇到知音了。 我最期待有人能对我说：“Oh, great! that's really important!” </p><p>哈！我想人生最幸福的事莫过于此！ </p><pre> &gt; 悠闲嘛，开始是觉得有一点慢的感觉，没那么带劲儿，下课了，我还和鹏说，<br> &gt; 你不知道他充满激情的讲话是多么的有煽动性...后来你就进入状态了，特棒。</pre><h2><div>Oct 22 (to He Shan~)</div></h2> <pre> &gt; hi! I've found a book. IT is so nice that i have been<br> &gt; reading about it all the afternoon. it is great, just<br> &gt; like an extended version of \"The Practice of<br> &gt; Programming\". it's named \"Code Complete\".</pre> <p>I've got the feeling that you are currently on the *right* way. you'll definitely become a good hacker if you keep going. hmm, hopefully you'll join us perl camels soon. ;) </p><pre> &gt; 真的吗？呵呵，好，我会一直走下去的。现在我真的喜欢上编程了，我对优秀程序员<br>&nbsp;&gt; 所具有的品行狂热的向往。谢谢你的鼓励与帮助。耶！</pre> <p>  </p><h2><div>Oct 22 (to Jack Shen~)</div></h2> <pre> &gt; 用 com 如何向 ppt 插图片？xul2ppt 的 python 版本急需。</pre> <p>LOL. apparently you are not a VB guy. inserting images into ppt slides is straightforward once you know how to record down VBA macros in the PowerPoint environment and browsing the generated code in its VB IDE. Another way to get an answer is searching the web. iirc, the method should be AddPicture or something like that. not sure though, computers are out of my reach right now. :( </p><pre> &gt; 知道了~ 我发现 python 在科学计算方面很厉害，有很好的库，<br> &gt; 我准备用 python 给我爸编程。python 有自己的 matlab 库，<br> &gt; 但不需装 matlab. 但当然没有 matlab 强大，这点是肯定的，<br> &gt; 哈哈。</pre> <p>Python is even more powerful than MATLAB, Maple, and Haskell? i doubt that. :) </p><p>...I was exclusively hacking on the new tokenizer for <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> and completely forgot that i had C# classes tonight. anyway, the next major release of M::P takes precedence over any other things. :) </p><p>  </p><h2><div>Oct 23 (to Sal Zhong~)</div></h2> <p>I've just started to rewrite M::P's codebase (which will hopefully be released as M::P 1.00 soon). Yes, it's long overdue. I've had a pretty good plan for a scalable and extensible gmake implementation based on M::P for long. </p><p>The new M::P API will offer parsing results at two different levels: </p><ul> <li> <p>Makefile DOM tree </p><p>It's a syntax-oriented data structure which preserves every single bit of info in the original makefile (including whitespaces and comments). So one can modify some part of the DOM tree, and write the updated makefile back to disk. I think it's useful to some GUI apps which want to edit makefiles via menus and is also beneficial to the gmake =&gt;  <a target=\"_blank\" href=\"http://khemir.net/sscm_2006/slides/index_slide.html\">PBS</a>  translator.  </p></li><li> <p>Makefile AST </p><p>The AST desugars the handwaving parts of the DOM tree down to a semantic-oriented data structure for make-like tools to ``run'' it or for some visualizer (e.g. my <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Graphviz\">Makefile::Graphviz</a>) to depict the underlying dependency relations. For the  <a target=\"_blank\" href=\"http://khemir.net/sscm_2006/slides/index_slide.html\">PBS</a>  emitter, I think we should work out a special AST for it since the desugaring must be lossless, much like a program correctness proving system.  </p></li></ul> <p>I'm currently working on the M::P tokenizer and will finish the DOM tree constructor these days. The process should be going pretty fast since it is mostly test-driven. </p><p>The first goal is to implement the new M::P APIs and get my pgmake utility pass most of the gmake tests so that I can kick M::P 1.00 out of the door. </p><p>I'm stealing a lot of source code and pod from Alias's  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>  module. I've noticed that the basic structure of PDOM trees can also fit my needs very well. it's called MDOM in my M::P though. ;-) </p><p>  </p><h2><div>Oct 24 (to Sun Xin~)</div></h2> <p>Take care. translating may drive you mad some day. just have appropriate amount of fun, dude! </p><p>  </p><h2><div>Oct 26 (to Jack Shen and Sal Zhong~)</div></h2> <p>my gnu Makefile DOM builder now supports most kinds of rules, 2 flavors of variable assignments, macro interpolations, and various command and comment syntax. Now it's trivial to add new node types and extend the DOM parser. </p><p>i'll add support for double-colon rules, the define/vpath/include/ifeq/ifneq/ifdef/ifndef/... directives, and other missing structures tomorrow. After these additions, the DOM parser will be quite complete and will serve as the solid ground that we keep standing on. constructing the Makefile AST will be much easier if we keep a DOM tree handy. </p><p>yay for test-driven development! without TDD or Alias'  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a> , i wouldn't have progressed so rapidly. ;-) </p><p>  </p><h2><div>Oct 29 (to Sal Zhong~)</div></h2> <p>When and where shall we take the Java exam? </p><p>...Oops, it seems impossible to release <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?UML::Class::Simple\">UML::Class::Simple</a> tonight. still have several missing features to implement and the pod needs loves too. hmm, christopher may be unhappy since i earlier made the promise to him that i would make the release by *this* weekend. sigh. hopefully i'll get some cycles tomorrow. </p><p>...nod nod. but i also gotta review the data mining textbooks for the coming exam. furthermore, i'm planning to hack on two expert systems in the next week. i'll be programming in Prolog,  <a target=\"_blank\" href=\"http://www.ghg.net/clips/CLIPS.html\">CLIPS</a> , and Perl simultaneously, which must be a lot of fun! yay! :D </p><p>  </p><h2><div>Oct 30 (to Sal Zhong~)</div></h2> <p>I've just talked to Alias, the author of  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a> , on <code>#perl</code>. he said that i could borrow as much source code from  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a>  as i would for my <code>Makefile::DOM</code> module. <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Element\">PPI::Element</a>, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Node\">PPI::Node</a>, <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Token\">PPI::Token</a>, and <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI::Dumper\">PPI::Dumper</a> can be reused by my MDOM directly without many changes. i also briefly introduced the two-level ASTs to him and expressed my appreciation of  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?PPI\">PPI</a> . It has given me plenty of inspiration on how to push my <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Makefile::Parser\">Makefile::Parser</a> further. </p><p></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=&amp;page=RSS%3a+Notes+for+this+fortnight+%282006-10-18+%7e+2006-10-30%29&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"宁舍身命，终不违犯","date":"Oct 23, 2006 4:59 PM","body":"<div><div class=\"item-body\"><div><div>“要么不学，要学就把它学好。”<br><br>这是从我年幼时代就定下的原则。我好不容易在初三时代重新定位了自己的学习方式和目的，因此在任何时候我都不愿向应试教育屈服，即便是损失学位，损失学费，损失时间。<br><br>我几乎无法忍受学校里的很多做法。凭什么要求我们学习数量如此惊人的本科课程？凭什么找一些连教师们都一知半解的高深的理论来压我们？凭什么那么多门课都要考那些需要死记硬背，迂腐无用的题目？<br><br>我的家人都劝我变通一些，圆滑一些，但打死我我也不干。我不愿浪费自己哪怕一分钟的时间。<br><br>具有讽刺意味的是，如今我正在给我们专业大四的本科生以及研究生上课，连老师们都说收获很大。可是我自己这边却有一些课程需要重修，需要补考。我的成绩单上也有许多 90 分以上的科目，那是因为那些科目我有时间好好琢磨了。其实学校开的所有科目都有属于自己的美妙天地，但是我根本无暇探索。因此，我显然需要更多的时间来完成自己的学业。说我比别人笨也好，比别人懒也罢，反正我就是来不及。4 年时间学校要求我们涉猎如此之广，如此之深，可为什么许多计算机专业的研究生们出来仍是表现平平？为什么我身边的同学们在找工作的时候仍然感叹自己四年未有多少收获？这些都是值得那些制定教学大纲、安排本科课程的人仔细反思的。<br><br>从我个人来说，大学四年真的没什么遗憾，我积累了许多有用的计算机方面的知识和技术，开发了众多的有趣项目，阅读了许多学科的英文版教材，又积累了不少幻灯片制做、演讲、以及计算机专业教学方面的实践经验。所以我完全没必要为了 4 年毕业而破坏原则，完全没必要为了抢时间而玩命干。通过计算机专业的学习，其实我已经学到了我想学的东西，已经实现了最初进大学时制定的宏伟目标和学习计划。其实，我已经很满意了。呵呵。说实话，毕业证书和学位对我而说真的没有太大的意义，因为我早超越过去了。<br><br>今天之所以写了这么多抱怨的话，是因为刚刚和一个专业课老师商量能否用科研项目代替那个值得诅咒的考试，居然被他拒绝了！好啊，没关系，反正我是没时间去学的。教我去背考题，连门儿都没有。到时间交白卷，直接让我重修得了。那样多痛快啊~~~呵呵。<br><br>坚持这个原则，的确让我感到很有自信，让我不怕任何困难。我非常希望我也能在生活上建立起相应的个人原则，做一个正派的人，做一个高尚的人，做一个有智慧的人。:)<br><br></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e5%ae%81%e8%88%8d%e8%ba%ab%e5%91%bd%ef%bc%8c%e7%bb%88%e4%b8%8d%e8%bf%9d%e7%8a%af&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Notes for this fortnight (2006-10-01 ~ 2006-10-16)","date":"Oct 17, 2006 9:29 PM","body":"<div><div class=\"item-body\"><div><div><h2><div>Oct 1 (to Sun Xin~)</div></h2> <p>Please check out your mailbox. i sent one journal and 107 <a target=\"_blank\" href=\"http://perlcabal.org/agent/slides/naming/naming.pdf\">slides</a> to you for proofreading yesterday. remember that i've said i would try my best to keep you relatively busy? :) </p><p>  </p><h2><div>Oct 4 (to Sal Zhong~)</div></h2> <p>I've rewritten your Win32::xul2ppt_mec module using <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Win32::OLE\">Win32::OLE</a> and stevan's excellent <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Moose\">Moose</a>  module. Now it's named XUL::Image::PPT and the xul2ppt utility has been divided into two separate tools, xul2img.pl and img2ppt.pl. Please check out <a target=\"_blank\" href=\"http://svn.berlios.de/svnroot/repos/unisimu/Perl/XUL-Image-PPT/\">http://svn.berlios.de/svnroot/repos/unisimu/Perl/XUL-Image-PPT/</a> for the source code. :) </p><p>Regarding the new xul2img utility, the --count and --title options are required. use --help to see the usage. because the XUL =&gt; image part is still based on <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Win32::GuiTest\">Win32::GuiTest</a>, the user interface is somewhat fragile and cannot be as nice as that of img2ppt. it's still the user's responsibility to open .xul with firefox and not to enter the full view mode (via F11) before running the xul2img tool. </p><p>Delay settings like 0.5 sec should also work now since i've switched to <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Time::HiRes\">Time::HiRes</a>'s <code>sleep</code> function. btw,  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Moose\">Moose</a>  is so cool that writing perl 5 OO code has been exceedingly enjoyable. you know, perl 5's OO was ever a weak or even boring part in the past.  <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Moose\">Moose</a>  has brought me the feeling of using Perl 6 *today*. So don't hesitate and give it a shot! Enjoy~ </p><p>(agentzh mooses.) </p><p>  </p><h2><div>Oct 5 (to Sun Xin~)</div></h2> <p>Currently i am making slides for my XML talk. the topic is ``XML in the real world''. will send the slides to you for review once they're ready. :) </p><p>  </p><h2><div>Oct 6 (to Cherry Chu~)</div></h2> <p>I will send you a message when i get up tomorrow morning. please keep your phone on, OK? if you get up earlier than i, would you please inform me via a message? thank you. :) </p><p>  </p><h2><div>Oct 6 (to Jack Shen~)</div></h2> <p>The  <a target=\"_blank\" href=\"http://perlcabal.org/agent/slides/xmlapp/xmlapp.pdf\">slides</a>  for my XML talk are ready now. please check out your mailbox for details. the slides contain a lot of pretty pictures. i've covered hot topics like RSS and AJAX using Google Reader, the Qzone site, and my GetQzone utility as study cases. these topics are extremely exciting! comments on my slides will be appreciated. :) i hope miss zheng will be kind enough to give me more time to explain everything in my slides...hehe. </p><p>  </p><h2><div>Oct 7 (to Cherry Chu~)</div></h2> <p>cherry: moose. :) </p><p>cherry: elk! :D </p><p>I'm now heading out. :) 7:15 AM. don't be late, cherry. </p><p>...yay! cherry++ i'm already waiting for you. :) </p><p>...i am home now, cherry! yay! ...I was walking pretty fast. hehe. have a good rest. hopefully you will regain your strength soon. :) </p><p>Take care and sleep early, cherry. gotta run to shower and sleep myself. G'night &amp; </p><p>  </p><h2><div>Oct 8 (to Sun Xin~)</div></h2> <p>Cherry and i rode to the yangzhou city yesterday. we favored small roads in the fields over big ones. as a result, we were often followed by barking dogs and blocked by rivers and fields in our way. it was frustrating but also fun. she was amazingly vigorous and charming yesterday...we talked very happily and laughed a lot. you know, it was quite amusing to see she also talked and laughed very loudly, just like me! yay! hooray for cherry's beauty and the enormous parallels between us! hehe. </p><p>we've decided to ride to other cities in the next few times. but it's still undecided which city to go first. what's your opinion, man? ;-) </p><p>  </p><h2><div>Oct 8 (to Cherry Chu~)</div></h2> <p>how are you today? i am still a bit tired. sigh. </p><p>...wow, nice to hear that. btw, i'm happy to see my friend <a target=\"_blank\" href=\"http://layesuen.spaces.live.com\">laye</a>  has replied to your journal. he's a talented programmer and now studying in the Fudan university. :) And your ``journal of 70 kilometers'' <a target=\"_blank\" href=\"http://cherrychuxinyun.spaces.live.com/Blog/cns%21BA706CF728A694B9%21302.entry\">post</a> reads very well! :) </p><p>...nod nod. he was in ujs when he was an undergraduate student. sadly we have never met in person. :( </p><p>  </p><h2><div>Oct 9 (to Sal Zhong and Jack Shen~)</div></h2> <p>Yay! now i can do Java Swing programming in pure perl 5! furthermore, my perl interpreter can now learn new Java libraries all by itself. so i can manipulate *any* Java classes and objects as if they were implemented directly in perl 5. thanks to <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Inline::Java\">Inline::Java</a> and <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Java::Swing\">Java::Swing</a>. now i'm trying to get them work with pugs (i.e. perl 6). unfortunately, pugs doesn't do auto-importing for perl 5 modules. sigh. maybe i need to write some perl 5 wrappers and glue code there. oh, well... </p><p>  </p><h2><div>Oct 9 (to Sal Zhong~)</div></h2> <p>huh! google++ </p><p>i will definitely look into its shiny source code search engine the other day. thanks for the info. :) </p><p>  </p><h2><div>Oct 9 (to Sun Xin~)</div></h2> <p>man, i'll (selectively) translate these notes myself because i don't want to occupy too much of your spare time. anyway, i can do the translation work more easily and more accurately. would you please proofread both my english and chinese transcripts for me? i'll be very grateful to your review! ;) </p><p>  </p><h2><div>Oct 10 (to Jack Shen~)</div></h2> <p>I've nailed down the basic syntax of the SXML language. it looks pretty neat. i'll implement converters for XML &lt;=&gt; SXML and HTML &lt;=&gt; SXML. i believe it's important enough for both XML's human reading and human writing. </p><p>  </p><h2><div>Oct 10 (to Cherry Chu~)</div></h2> <p>Moose. will you come to my class this friday evening? :) </p><p>  </p><h2><div>Oct 16 (to Sal Zhong~)</div></h2> <p>jerry gay (the guy also known as particle) is <a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2006-10-16,Mon&amp;sel=193#l328\">rewriting</a> my smartlinks.pl using <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Moose\">Moose</a> . it's really wonderful! he will commit the code to the parrot repos. He said he would introduce smartlinks to the parrot test suite and link the tests to both the Perl 6 Spec and the parrot PDDs. not sure if he still has the crazy plan to port smartlinks.pl to PIR. anyway, as christopher said, the idea of smartlinking has inspired several add-on hacks. hooray! </p><p>btw, pugs 6.2.13 is going to release tomorrow. larry is <a target=\"_blank\" href=\"http://use.perl.org/%7Echromatic/journal/31301\">using</a>  pugs for his $work! sweet... </p><p></p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Notes+for+this+fortnight+%282006-10-01+%7e+2006-10-16%29&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"Notes for this fortnight (2006-09-21 ~ 2006-09-30)","date":"Oct 17, 2006 9:29 PM","body":"<div><div class=\"item-body\"><div><div><h2><div>Sep 21 (to Sun Xin~)</div></h2><p>our charming XML instructor today asked me to give one or two talks in her class because she thought i was an expert in this domain. i'm very excited and have decided to make some good-looking slides in both english and chinese. i'll work on the new slides for the coming talks in the next few days. i'll send them to you for review once they are ready.</p><p>i'll also send you a bunch of <a target=\"_blank\" href=\"http://perlcabal.org/agent/slides/patterns/patterns.xul\">_old_slides_</a> for the talk given in the last term tomorrow. they're in pure english and most of my classmates liked it. i hope you can proofread the old slides since i'm going to publish them on the web.</p><p>Our XML instructor is so beautiful that i dare say a lot of boys in the classroom like her very much. she holds great charm for me. i love to talk to her after the class. talking to her in person is really enjoyable. she is an extremely lovely girl. yay for her beauty and good mood!</p><p></p><h2><div>Sep 22 (to Sun Xin~)</div></h2><p>mails sent. remember to use Firefox to access the .xul URL (i.e. the slides) and don't click too fast while reading the slides since loading images can be slow.</p><p>btw, i'll use cherry's qzone blogs as a study case in my new slides for the XML talk. the slide-making process can be fun! stay tuned! :)</p><p></p><h2><div>Sep 22 (to Jack Shen~)</div></h2><p>hey, jack. let me talk about microcosmic stuff, such as interface design for individual classes or small class library and you talk about the handwavy macroscopical things like large OO systems. i'll try my best to put enough basic weapons under the audience's belt before your lectures. what's your opinion?</p><p></p><h2><div>Sep 23 (to Sun Xin~)</div></h2><p>my instructors have asked me to give for total 12 talks this semester. that's really wonderful since i can take a more leisure pace during my talks. but i definitely need many more slides and pictures. i'll be talking about XML, Regular expressions (regexes) and object-oriented modeling and design. what cool stuff!</p><p></p><h2><div>Sep 27 (to Sun Xin~)</div></h2><p>i've produced 82 slides these two days, and i am about to crash... for my first talk, there are still 20 slides to go... it's really exciting!!! man!!!</p><p>man, i've sent a weird english poetry to you for translating. i need the chinese transcriptfor my slides. please get back to me ASAP. it's quite urgent since the talk is scheduled on*this* Friday evening. thank you in advance. :)</p><p></p><h2><div>Sep 27 (to Cherry Chu~)</div></h2><p>our XML teacher has asked me to give one or two talks to my classmates in her class. and i am going to use *your* Qzone blogs as a study case in my slides. :)</p><p>will you mind my introduction to your Qzone home? btw, an even shorter URL is working now: <a target=\"_blank\" href=\"http://perlcabal.org/agent/cherry.html\">http://perlcabal.org/agent/cherry.html</a>. feel free to give it a shot.</p><p>...glad to hear that. i have 16 lectures to give out this semester. i've been busy making slides for my talks. it is a hard job but is also fun. :)</p><p></p><h2><div>Sep 29 (to Sun Xin~)</div></h2><p>the <a target=\"_blank\" href=\"http://perlcabal.org/agent/slides/naming/naming.xul\">talk</a> was a big success. the audience laughed a lot and i was often stopped by the girl students' ``wow''. my instructor said after the talk that he was exceedingly impressed. he told me that it had given him great inspiration and determination. he said he had even been pondering giving up his C.S. career, but my talk completely changed his mind.</p><p>...nah. cherry didn't come because she is in a different department and i had not invited her to my talk.</p><p>...sorry, i didn't show your transcript explicitly in my slides. Audrey <a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2006-09-29,Fri&amp;sel=144#l220\">offered</a> a translation in ancient chinese right before the talk and i used hers. but your work had helped me a lot. without your translation, i can't grok that poem to such an extend. thank you!</p><p>it's worth mentioning that Larry Wall also <a target=\"_blank\" href=\"http://colabti.de/irclogger/irclogger_log/perl6?date=2006-09-29,Fri&amp;sel=120#l181\">provided</a> me with an excellent translation in modern english. you know, he is a great linguist. :)</p><p>...LOL. lucky indeed. getting so much help and support is like a dream!</p><p></p><h2><div>Sep 30 (to Cherry Chu~)</div></h2><p>Heh, it will rain tomorrow anyway. hopefully the weather will get better when you come back from shanghai. :)</p><p>...nope, not that one. i was talking about the art of naming. the talk mentioning yourQzone space will be given on Oct 14, which is about XML in the real world.</p><p>Sun Xin asked me last night if cherry had attended my talk. and i explained to him that you are in a different department and sadly i had not sent you an invitation.</p><p>The talk was on this Friday evening. and i'll give talks at that time for every week from now on. we are at Z101. welcome joining us! 9th and 10th classes. :)</p><p>...nah, chinese speech mostly. every slide contains two versions of the content, the chinese version and the english version. and yeah, there'll be many students in my class. don't worry. :)</p><p>it will simply rock if you can come. for another thing, i really hope you can also attend my XML talk because i'm going to show my classmates your blogs there. he he.</p><p>the XML talk has been scheduled at 10504, 7th or 8th class. the concrete date is still undecided. i'll tell you once i had talked to our XML instructor. OK?</p><p>...(agent does his happy dance.)</p><p>the XML talk should be on Thursday afternoon, btw.</p><p>cherry, i have the idea of writing journals based on my cellphone messages. it's a great source of materials, you know. of course, i won't public any messages that i've received from others. for example, your replies will be excluded while my messages to you will probably be shown. what's your opinion? will you mind?</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+Notes+for+this+fortnight+%282006-09-21+%7e+2006-09-30%29&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"抄写 Perl 6 的 Synopses","date":"Oct 17, 2006 9:29 PM","body":"<div><div class=\"item-body\"><div><div><p>今天下午，我继续在母亲办公室中抄写 Perl 6 的核心文档。好不容易才抄完了 <a target=\"_blank\" href=\"http://dev.perl.org/perl6/doc/design/syn/S02.html\">S02</a> (Synopsis 2)，然后又预览了 <a target=\"_blank\" href=\"http://dev.perl.org/perl6/doc/design/syn/S03.html\">S03</a> 的前几页。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</p><p>抄书确实有抄书的妙处。眼到，手到，心到。高一的时候，正是凭借抄书，我才得以在很短的时间内掌握了 VB, C 和 C++. 抄书与看书相比，缺点是苦了我的手指，优点是重要细节都不会疏漏。抄书可以强制性地放缓我的阅读速度，从而为每一句话都赢得了更多的思考时间，这的确是一件很好的事情。别看抄书似乎进度很慢，但从效果上看，却是大大地节约了时间。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</p><p>之所以如此较真地学习 Perl 6，是因为我太想尽快掌握下一代的 Perl 语言了。多年来，接触了数不清的编程语言，可唯独 Perl 5 成为我“真正的语言”。如今，Perl 6 对 Perl 进行了重新的设计，抛弃了语言层面上的向后兼容性，从而给我们 Perl 社会带来了真正意义的“革命”。我很高兴地看到，许多 Perl 5 中令人不快的阴暗角落在 Perl 6 中都成为了宽敞明亮的殿堂。Perl 5 中令人陶醉的语言特性在 Perl 6 中都进化到了令人叹为观止的地步。如果说，Perl 5 带给我们的是魔法世界的话，Perl 6 带给我们的则是真实的神话。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</p><p>抄写 S02 的过程对我来说是不断拍案的过程，相信 <a target=\"_blank\" href=\"http://dev.perl.org/perl6/doc/design/syn/S03.html\">S03</a>, <a target=\"_blank\" href=\"http://dev.perl.org/perl6/doc/design/syn/S04.html\">S04</a>, ... 惊喜还会不断延续。虽然大部分 Perl 6 的新特性我在过去的两年中早有所闻，但是经过抄写 <a target=\"_blank\" href=\"http://dev.perl.org/perl6/doc/design/syn/\">Synopses</a> 这样的如此近距离的接触，我对 Perl 6 的巨大威力有了更加深切的体会。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</p><p>随着 <a target=\"_blank\" href=\"http://search.cpan.org/dist/v6-alpha\">v6-alpha</a>，这个基于纯 Perl 5 的 Perl 6 编译器正在通过 <a target=\"_blank\" href=\"http://svn.openfoundry.org/pugs/t\">Pugs 测试集</a>中越来越多的测试，我学习 Perl 6 的愿望也越来越强烈起来。说实话，作为 v6-alpha 的用户本身就是一个很激动人心的事情了，但是我希望自己能进一步成为 v6-alpha 的贡献者之一，从而能够帮助台湾的 clkao （高嘉良）和巴西的 fglock 让 v6-alpha 更快地成熟起来。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</p><p>现在我已经从 audreyt（唐凤）那里获得了 Pugs 项目的 commit bit，成为了 Pugs 团队的<a target=\"_blank\" href=\"http://svn.openfoundry.org/pugs/AUTHORS\">一员</a>。虽然我可以直接上传改动了，但我仍然缺少相关的背景知识。首先，我得熟悉 Perl 6，从而知道我们到底要实现什么；其次，我得消化 fglock 的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Pugs::Compiler::Rule\">Pugs::Compiler::Rule</a> 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Pugs::Compiler::Perl6\">Pugs::Compiler::Perl6</a> 以及 clkao 的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Data::Bind\">Data::Bind</a> 和 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Sub::Multi\">Sub::Multi</a>, 当然还有 Stevan 的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Moose\">Moose</a> 和 Ingy 的 <a target=\"_blank\" href=\"http://search.cpan.org/perldoc?Module::Compile\">Module::Compile</a>，从而知晓他们是如何实现的. 最后，我才可能真正参与到 v6-alpha 的开发工作中去.</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e6%8a%84%e5%86%99+Perl+6+%e7%9a%84+Synopses&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"tuits是什么?","date":"Oct 17, 2006 9:29 PM","body":"<div><div class=\"item-body\"><div><div><p>我在网上经常看到程序员们（当然还有许多非程序员）在他们的电子邮件、IRC 聊天信息以及文档中广泛地使用 tuits 这个词，可是一般的字典里无论如何也查不到，即便是网络字典中也难觅其踪迹。tuits 的典型的用法如下：\n</p><pre>    A&gt; Will you work on that project?\n    B&gt; Well, as soon as i have the tuits.</pre>\n<p>再比如，\n</p><pre>    A&gt; Oh, i'm exhausted. i don't think i have the tuits to finish the job today!\n    B&gt; alas...</pre>\n<p>But what do tuits mean? What are tuits?\n</p><p>其实从这些应用实例我们多少可以猜出，tuits 有“时间“、”灵感“、或者”动机”之类的意思。来自 libwww-perl 邮件组的美国程序员们可以证实我们的猜测：\n</p><p><a target=\"_blank\" href=\"http://ftp.ics.uci.edu/pub/websoft/libwww-perl/archive/1998h1/0651.html\">邮件1</a>\n</p><p><a target=\"_blank\" href=\"http://ftp.ics.uci.edu/pub/websoft/libwww-perl/archive/1998h1/0649.html\">邮件2</a>\n</p><p>有趣的是，后一个链接指向 Perl 语言之父 Larry Wall 对 tuits 的诠释。\n</p><p>从这些邮件不难看到，tuits 一词起源于短语 round tuit, 而 round tuit 又起源于下面这句话：\n</p><pre>   I'll do that when I get around to it.</pre>\n<p>这里搭配用法 get around to 意为“抽出时间做某事或者考虑某事”。显然，to it 一融合便成了 tuit，呵呵。是不是太过分了一点儿？\n</p><p>en.wikipedia.org 网站上对 round tuit 的定义进一步证实了上面的说法：\n</p><p>A round tuit is an imaginary object whose name is derived from the phrase ``when I get around to it''.\n</p><p>我们看到，英语中的不少词汇也是很值得细细品味的。呵呵</p></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+tuits%e6%98%af%e4%bb%80%e4%b9%88%3f&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"},{"title":"完美之夜，完美之旅","date":"Oct 17, 2006 9:29 PM","body":"<div><div class=\"item-body\"><div><div><div>傍晚，在教工用完晚餐，我独自一人于江大校园中漫步。那真是一个美妙的黄昏，凉爽得让我觉得不可思议。站在高处，迎着习习凉风，望着远处的坡地与江水，思忖着与 Cherry 的骑车之约。如是主意已定，便立马上了 19 路，赶回城去。<br><br>20:00 终于在市政府门前迎来了 Cherry。她身着黑色的T-shirt，在夜晚显得愈加端庄与美丽。于是我们结伴而行。晚上的镇江有些令人捉摸不透，我们在转过几个弯后却惊异地发现又几乎回到了原地。当时，我的确颇感狼狈，幸好她并没有一点儿怪罪我的意思。如是顺着长江路一直西行，这才步入正轨。<br><br>与她同行，不必担心冷场与寂寞。她仍像多年前那般健谈。她嘴中总有说不完的有趣的事情——我想到了“开心果”，呵呵。我们于是一路尽情地笑着，有时甚至引得路人侧目。我们聊孙昕，我们聊徐胖胖，我们聊高中老师……一切往事都融入到了清凉的夏夜中，化作丝丝笑语，令人回味，教人陶醉……<br><br>路上行人不多，奇怪得很。不过，我们偶尔也会遇见赶“夜会”的人。他们多聚在桥头，亭边，或歌舞，或攀谈，或嬉笑：如是纳凉却也快活自在。在我眼中，他们的出现并没有搅乱这夜的清朗，反而愈凸现出这夜的宁静。凡到此处，我们都不停留，径直从他们身旁轻轻擦过……<br><br>不觉我们已来到镇扬汽渡前。高大的收费站阻碍了我们眺望润扬大桥的视线。然而毕竟，我们是来看桥的。于是继续前行。在两旁高大的路灯的照耀下，我们骑上了大桥的引桥。这儿看不见车辆，看不见路人，于是，便成了我们自由驰骋的乐园。在引桥的高处，我们停下，或俯视桥下开阔的高速公路在昏黄的路灯下的倩影，或眺望着远处由一串灯火勾勒出的长江大桥的雄姿，抑或举首仰望那明月稀星，朗朗夜空……一切仿佛都在这一刻凝固。<br><br>夜凉如水。这真是夏夜么？呵，完美之夜，完美之旅。</div></div><img src=\"http://c.services.spaces.live.com/CollectionWebService/c.gif?space=agentzh&amp;page=RSS%3a+%e5%ae%8c%e7%be%8e%e4%b9%8b%e5%a4%9c%ef%bc%8c%e5%ae%8c%e7%be%8e%e4%b9%8b%e6%97%85&amp;referrer=\" alt=\"\" border=\"0\" height=\"1\" width=\"1\"><img alt=\"\" src=\"http://c.live.com/c.gif?NC=31263&amp;NA=1149&amp;PI=88469&amp;RF=&amp;DI=3919&amp;PS=85545&amp;TP=agentzh.spaces.live.com&amp;GT1=agentzh%3b2052\" height=\"0\" width=\"0\"></div></div></div>"}]
